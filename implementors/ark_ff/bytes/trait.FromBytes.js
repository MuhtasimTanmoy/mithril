(function() {var implementors = {};
implementors["ark_ec"] = [{"text":"impl&lt;P:&nbsp;<a class=\"trait\" href=\"ark_ec/models/trait.SWModelParameters.html\" title=\"trait ark_ec::models::SWModelParameters\">Parameters</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"ark_ec/models/short_weierstrass_jacobian/struct.GroupAffine.html\" title=\"struct ark_ec::models::short_weierstrass_jacobian::GroupAffine\">GroupAffine</a>&lt;P&gt;","synthetic":false,"types":["ark_ec::models::short_weierstrass_jacobian::GroupAffine"]},{"text":"impl&lt;P:&nbsp;<a class=\"trait\" href=\"ark_ec/models/trait.SWModelParameters.html\" title=\"trait ark_ec::models::SWModelParameters\">Parameters</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"ark_ec/models/short_weierstrass_jacobian/struct.GroupProjective.html\" title=\"struct ark_ec::models::short_weierstrass_jacobian::GroupProjective\">GroupProjective</a>&lt;P&gt;","synthetic":false,"types":["ark_ec::models::short_weierstrass_jacobian::GroupProjective"]},{"text":"impl&lt;P:&nbsp;<a class=\"trait\" href=\"ark_ec/models/trait.TEModelParameters.html\" title=\"trait ark_ec::models::TEModelParameters\">Parameters</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"ark_ec/models/twisted_edwards_extended/struct.GroupAffine.html\" title=\"struct ark_ec::models::twisted_edwards_extended::GroupAffine\">GroupAffine</a>&lt;P&gt;","synthetic":false,"types":["ark_ec::models::twisted_edwards_extended::GroupAffine"]},{"text":"impl&lt;P:&nbsp;<a class=\"trait\" href=\"ark_ec/models/trait.TEModelParameters.html\" title=\"trait ark_ec::models::TEModelParameters\">Parameters</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"ark_ec/models/twisted_edwards_extended/struct.GroupProjective.html\" title=\"struct ark_ec::models::twisted_edwards_extended::GroupProjective\">GroupProjective</a>&lt;P&gt;","synthetic":false,"types":["ark_ec::models::twisted_edwards_extended::GroupProjective"]}];
implementors["ark_ff"] = [];
implementors["mithril"] = [{"text":"impl&lt;PE:&nbsp;<a class=\"trait\" href=\"ark_ec/trait.PairingEngine.html\" title=\"trait ark_ec::PairingEngine\">PairingEngine</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"mithril/msp/struct.MspSk.html\" title=\"struct mithril::msp::MspSk\">MspSk</a>&lt;PE&gt;","synthetic":false,"types":["mithril::msp::MspSk"]},{"text":"impl&lt;PE:&nbsp;<a class=\"trait\" href=\"ark_ec/trait.PairingEngine.html\" title=\"trait ark_ec::PairingEngine\">PairingEngine</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"mithril/msp/struct.MspMvk.html\" title=\"struct mithril::msp::MspMvk\">MspMvk</a>&lt;PE&gt;","synthetic":false,"types":["mithril::msp::MspMvk"]},{"text":"impl&lt;PE:&nbsp;<a class=\"trait\" href=\"ark_ec/trait.PairingEngine.html\" title=\"trait ark_ec::PairingEngine\">PairingEngine</a>&gt; <a class=\"trait\" href=\"ark_ff/bytes/trait.FromBytes.html\" title=\"trait ark_ff::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"mithril/msp/struct.MspPk.html\" title=\"struct mithril::msp::MspPk\">MspPk</a>&lt;PE&gt;","synthetic":false,"types":["mithril::msp::MspPk"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()