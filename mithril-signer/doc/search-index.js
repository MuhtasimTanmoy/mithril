var searchIndex = JSON.parse('{\
"mithril_signer":{"doc":"Mithril Signer crate documentation","tn":["CertificateHandler","CertificateHandlerError","CertificateHandlerHTTPClient","Codec","Config","DumbCertificateHandler","IOError","JsonParseFailed","MithrilProtocolInitializerBuilder","MithrilSingleSigner","NoStakeForSelf","NoStakeForSigner","NoValueError","ProductionServiceBuilder","ProtocolInitializerMissing","ProtocolInitializerStore","ProtocolInitializerStorer","ProtocolSignerCreationFailure","Registered","RegisteredState","RemoteServerLogical","RemoteServerTechnical","RemoteServerUnreachable","Runner","RuntimeError","ServiceBuilder","Signed","SignedState","SignerRunner","SignerServices","SignerState","SingleSigner","SingleSignerError","StateMachine","SubsystemUnavailable","Unregistered","UnregisteredPartyId","UnregisteredVerificationKey","aggregator_endpoint","associate_signers_with_stake","associate_signers_with_stake","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon_provider","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","can_i_sign","can_i_sign","cardano_cli_path","cardano_node_socket_path","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_handler","chain_observer","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","compute_aggregate_verification_key","compute_aggregate_verification_key","compute_message","compute_message","compute_single_signature","compute_single_signature","compute_single_signatures","compute_single_signatures","cycle","data_stores_directory","db_directory","default","default","deserialize","digester","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_current_beacon","get_current_beacon","get_last_protocol_initializer","get_last_protocol_initializer","get_last_registered_signer","get_network","get_pending_certificate","get_pending_certificate","get_protocol_initializer","get_protocol_initializer","get_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_registered","is_signed","is_unregistered","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","ne","ne","ne","ne","ne","network","network_magic","new","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","party_id","protocol_initializer_store","register_signatures","register_signatures","register_signatures","register_signer","register_signer","register_signer","register_signer_to_aggregator","register_signer_to_aggregator","retrieve_pending_certificate","retrieve_pending_certificate","retrieve_pending_certificate","run","run_interval","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save_protocol_initializer","save_protocol_initializer","send_single_signature","send_single_signature","serialize","set_certificate_pending","single_signer","source","stake_store","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_stake_distribution","update_stake_distribution","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["mithril_signermithril_signer::CertificateHandlerError","","","","","mithril_signer::RuntimeError","","","mithril_signer::SignerState","","mithril_signer::SingleSignerError",""],"d":["Trait for mocking and testing a <code>CertificateHandler</code>","Error structure for the Certificate Handler.","CertificateHandlerHTTPClient is a http client for an …","Encoding / Decoding error.","Client configuration","This certificate handler is intended to be used by test …","Mostly network errors.","Could not parse response.","This is responsible of creating new instances of …","Implementation of the SingleSigner.","Could not associate my node with a stake.","Could not find the stake for one of the signers.","Value was expected from a subsystem but None was returned.","Create a SignerService instance for Production environment.","Could not fetch a protocol initializer for this Epoch.","Implementation of the ProtocolInitializerStorer","Store the ProtocolInitializer used for each Epoch. This is …","Cryptographic Signer creation error.","<code>Registered</code> state","Structure to hold <code>Registered</code> state information.","The aggregator host responded it cannot fulfill our …","The aggregator host has returned a technical error.","Could not reach aggregator.","This trait is mainly intended for mocking.","This type represents the errors thrown from the Runner.","The ServiceBuilder is intended to manage Services instance …","<code>Signed</code> state","Structure to hold <code>Signed</code> state information.","Controller methods for the Signer’s state machine.","This structure groups all the services required by the …","Different possible states of the state machine.","The SingleSigner is the structure responsible of issuing …","SingleSigner error structure.","The state machine is responsible of the execution of the …","General subsystem error","starting state, no data hold","No stake is associated with this signer.","This signer has not registered for this Epoch hence cannot …","Aggregator endpoint","From a list of signers, associate them with the stake read …","","","","","","","","","","","","","","","","","","Beacon provider service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a SignerService instance.","Build a Services for the Production environment.","Create a ProtocolInitializer instance.","Check if all prerequisites for signing are met.","","Cardano CLI tool path","Path of the socket used by the Cardano CLI tool to …","","","","","","","","","","","","","","","","","Certificate handler service","Chain Observer service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute aggregate verification key from stake distribution","Compute aggregate verification key from stake distribution","Create the message to be signed with the single signature.","","Create the single signature.","","Computes single signatures","","Perform a cycle of the state machine.","Directory to store signer data (Stakes, Protocol …","Directory to snapshot","","","","Digester service","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Fetch the current beacon from the Cardano node.","","Return the list of the N last saved protocol initializers …","","Return the last signer that called with the <code>register</code> …","Return the CardanoNetwork value from the configuration.","Fetch the current pending certificate if any.","","Fetch a protocol initializer if any saved for the given …","","Return the current state of the state machine.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the state in <code>Registered</code>","Returns <code>true</code> if the state in <code>Signed</code>","Returns <code>true</code> if the state in <code>Unregistered</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano network","Cardano Network Magic number useful for TestNet &amp; DevNet","CertificateHandlerHTTPClient factory","Instanciate a new DumbCertificateHandler.","Create a new ProtocolInitializerStore.","Create a new Runner instance.","Create a new production service builder.","Create a new StateMachine instance.","Create a new instance of the MithrilSingleSigner.","Create a new MithrilProtocolInitializerBuilder instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Party Id","ProtocolInitializer store","Registers single signatures with the aggregator.","","Registers single signatures with the aggregator","Registers signer with the aggregator.","","Registers signer with the aggregator","Register the signer verification key to the aggregator.","","Retrieves a pending certificate from the aggregator","","","Launch the state machine until an error occurs or it is …","Run Interval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Save a protocol initializer for the given Epoch.","","Send the single signature to the aggregator in order to be …","","","this method pilots the certificate pending handler calling …","SingleSigner service","","Stake store service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the stake distribution and store it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,2,2,0,0,3,3,3,0,1,0,0,1,4,0,2,2,2,0,0,0,4,0,0,0,0,0,0,0,3,4,1,1,5,6,7,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,12,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,18,11,17,6,7,5,5,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,12,12,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,5,3,5,3,19,14,6,7,6,7,19,14,13,5,5,9,17,5,12,3,15,16,4,1,3,15,16,4,1,2,2,5,3,3,15,16,4,4,1,1,8,9,10,7,11,12,13,14,2,2,5,3,15,16,4,17,1,6,7,20,10,9,5,6,7,20,10,13,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,4,4,4,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,3,15,16,4,1,5,5,8,9,10,7,11,13,14,17,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,5,12,21,8,9,21,8,9,6,7,21,8,9,13,5,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,20,10,6,7,5,9,12,2,12,5,3,2,3,4,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,6,7,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,8,9,10,7,11,12,13,14,2,5,3,15,16,4,17,1,22,23,24,25,26,27,28,29,30,31,32,33],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],nullresult",4,[["signerservices",3],["box",3,[["stderror",8]]]]]],[[["productionservicebuilder",3]],["result",4,[["signerservices",3],["box",3,[["stderror",8]]]]]],[[["mithrilprotocolinitializerbuilder",3],["stake",6],["protocolparameters",3]],["result",4,[["protocolinitializer",6],["box",3,[["stderror",8]]]]]],[[["",0],["certificatepending",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["certificatepending",3]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["config",3]],["config",3]],[[["runtimeerror",4]],["runtimeerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["protocolinitializer",6]],["result",4,[["option",4,[["string",3]]],["singlesignererror",4]]]],[[["mithrilsinglesigner",3],["protocolinitializer",6]],["result",4,[["option",4,[["string",3]]],["singlesignererror",4]]]],[[["",0],["beacon",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["beacon",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["epoch",3],["protocolmessage",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["epoch",3],["protocolmessage",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["protocolmessage",3],["protocolinitializer",6]],["result",4,[["option",4,[["singlesignatures",3]]],["singlesignererror",4]]]],[[["mithrilsinglesigner",3],["protocolmessage",3],["protocolinitializer",6]],["result",4,[["option",4,[["singlesignatures",3]]],["singlesignererror",4]]]],[[["statemachine",3]],["future",8]],null,null,[[],["dumbcertificatehandler",3]],[[],["mithrilprotocolinitializerbuilder",3]],[[],["result",4,[["config",3]]]],null,[[["runtimeerror",4],["runtimeerror",4]],["bool",0]],[[["registeredstate",3],["registeredstate",3]],["bool",0]],[[["signedstate",3],["signedstate",3]],["bool",0]],[[["signerstate",4],["signerstate",4]],["bool",0]],[[["singlesignererror",4],["singlesignererror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["certificatehandlererror",4],["formatter",3]],["result",6]],[[["certificatehandlererror",4],["formatter",3]],["result",6]],[[["config",3],["formatter",3]],["result",6]],[[["runtimeerror",4],["formatter",3]],["result",6]],[[["runtimeerror",4],["formatter",3]],["result",6]],[[["registeredstate",3],["formatter",3]],["result",6]],[[["signedstate",3],["formatter",3]],["result",6]],[[["signerstate",4],["formatter",3]],["result",6]],[[["signerstate",4],["formatter",3]],["result",6]],[[["singlesignererror",4],["formatter",3]],["result",6]],[[["singlesignererror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["certificatehandlererror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["protocolinitializerstore",3],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["dumbcertificatehandler",3]],["future",8]],[[["config",3]],["result",4,[["cardanonetwork",4],["configerror",4]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["protocolinitializerstore",3],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["statemachine",3]],["signerstate",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["signerstate",4]],["bool",0]],[[["signerstate",4]],["bool",0]],[[["signerstate",4]],["bool",0]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["runtimeerror",4],["runtimeerror",4]],["bool",0]],[[["registeredstate",3],["registeredstate",3]],["bool",0]],[[["signedstate",3],["signedstate",3]],["bool",0]],[[["signerstate",4],["signerstate",4]],["bool",0]],[[["singlesignererror",4],["singlesignererror",4]],["bool",0]],null,null,[[["string",3]],["certificatehandlerhttpclient",3]],[[],["dumbcertificatehandler",3]],[[["box",3,[["storeadapter",8]]]],["protocolinitializerstore",3]],[[["config",3],["signerservices",3]],["signerrunner",3]],[[["config",3]],["productionservicebuilder",3]],[[["signerstate",4],["box",3,[["runner",8]]],["duration",3]],["statemachine",3]],[[["partyid",6]],["mithrilsinglesigner",3]],[[],["mithrilprotocolinitializerbuilder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["singlesignatures",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["certificatehandlerhttpclient",3],["singlesignatures",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["dumbcertificatehandler",3],["singlesignatures",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["signer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["certificatehandlerhttpclient",3],["signer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["dumbcertificatehandler",3],["signer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["epoch",3],["protocolparameters",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["epoch",3],["protocolparameters",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["certificatehandlerhttpclient",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["dumbcertificatehandler",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["statemachine",3]],["future",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["epoch",3],["protocolinitializer",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["protocolinitializerstore",3],["epoch",3],["protocolinitializer",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["option",4,[["singlesignatures",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["option",4,[["singlesignatures",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["config",3]],["result",4]],[[["dumbcertificatehandler",3],["option",4,[["certificatepending",3]]]],["future",8]],null,[[["certificatehandlererror",4]],["option",4,[["error",8]]]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["signerrunner",3],["epoch",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"SingleSignerError"],[4,"CertificateHandlerError"],[4,"RuntimeError"],[4,"SignerState"],[3,"Config"],[8,"Runner"],[3,"SignerRunner"],[3,"CertificateHandlerHTTPClient"],[3,"DumbCertificateHandler"],[3,"ProtocolInitializerStore"],[3,"ProductionServiceBuilder"],[3,"SignerServices"],[3,"StateMachine"],[3,"MithrilSingleSigner"],[3,"RegisteredState"],[3,"SignedState"],[3,"MithrilProtocolInitializerBuilder"],[8,"ServiceBuilder"],[8,"SingleSigner"],[8,"ProtocolInitializerStorer"],[8,"CertificateHandler"],[13,"RemoteServerTechnical"],[13,"RemoteServerLogical"],[13,"RemoteServerUnreachable"],[13,"JsonParseFailed"],[13,"IOError"],[13,"NoValueError"],[13,"NoStakeForSigner"],[13,"SubsystemUnavailable"],[13,"Registered"],[13,"Signed"],[13,"ProtocolSignerCreationFailure"],[13,"Codec"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
