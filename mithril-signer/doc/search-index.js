var searchIndex = JSON.parse('{\
"mithril_signer":{"doc":"","t":[3,11,11,11,11,11,5,11,0,11,11,0,11,11,11,11,11,11,5,11,11,12,11,11,0,0,11,11,11,11,11,11,12,11,11,11,8,4,3,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,6,3,6,6,6,6,6,6,6,6,13,6,6,6,6,6,8,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Args","augment_args","augment_args_for_update","az","borrow","borrow_mut","build_logger","cast_from","certificate_handler","checked_as","checked_cast_from","entities","from","from_arg_matches","into","into_app","into_app_for_update","log_level","main","overflowing_as","overflowing_cast_from","run_mode","saturating_as","saturating_cast_from","signer","single_signer","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","update_from_arg_matches","verbose","vzip","wrapping_as","wrapping_cast_from","CertificateHandler","CertificateHandlerError","CertificateHandlerHTTPClient","IOError","JsonParseFailed","RemoteServerLogical","RemoteServerTechnical","RemoteServerUnreachable","aggregator_endpoint","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","cell","checked_as","checked_as","checked_cast_from","checked_cast_from","fmt","fmt","from","from","from","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","register_signatures","register_signatures","retrieve_pending_certificate","retrieve_pending_certificate","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0","Config","aggregator_endpoint","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deserialize","fmt","from","into","network","overflowing_as","overflowing_cast_from","party_id","row","run_interval","saturating_as","saturating_cast_from","serialize","title","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","RetrievePendingCertificateFailed","Signer","SignerError","SingleSignaturesComputeFailed","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","cell","certificate_handler","checked_as","checked_as","checked_cast_from","checked_cast_from","current_beacon","eq","fmt","fmt","from","from","into","into","ne","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","run","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","single_signer","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0","0","Bytes","D","MithrilSingleSigner","ProtocolClerk","ProtocolInitializer","ProtocolKeyRegistration","ProtocolLotteryIndex","ProtocolMultiSignature","ProtocolParameters","ProtocolPartyId","ProtocolSigner","ProtocolSignerCreationFailure","ProtocolSignerSecretKey","ProtocolSignerVerificationKey","ProtocolSingleSignature","ProtocolStake","ProtocolStakeDistribution","SingleSigner","SingleSignerError","UnregisteredPartyId","UnregisteredVerificationKey","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","cell","checked_as","checked_as","checked_cast_from","checked_cast_from","compute_single_signatures","compute_single_signatures","create_protocol_signer","eq","fmt","fmt","from","from","into","into","key_decode_hex","key_decode_hex_sig","key_encode_hex","key_encode_hex_sig","ne","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","party_id","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","secret_key","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0"],"q":["mithril_signer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_signer::certificate_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_signer::certificate_handler::CertificateHandlerError","","","","","mithril_signer::entities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_signer::signer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_signer::signer::SignerError","","mithril_signer::single_signer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_signer::single_signer::SingleSignerError"],"d":["CLI args","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Run Mode","","","","","","","","","","","Verbosity level","","","","","","CertificateHandlerHTTPClient is a http client for an â€¦","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","CertificateHandlerHTTPClient factory","","","","","Registers single signatures with the aggregator","","Retrieves a pending certificate from the aggregator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client configuration","Aggregator endpoint","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Cardano network","","","Party Id","","Run Interval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Decode key from hex helper","","Encode key to hex helper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,3,3,2,3,2,3,2,3,2,2,3,2,3,2,2,2,3,2,2,3,2,3,3,2,3,2,4,3,4,3,3,2,3,2,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,5,6,7,8,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,0,0,11,12,11,12,11,12,11,12,11,11,12,12,11,12,11,12,11,11,11,12,11,12,11,11,12,12,11,12,11,12,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,13,14,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,16,15,16,15,16,15,16,15,15,16,15,16,15,17,16,16,15,15,15,16,15,16,15,0,0,0,0,15,16,16,15,16,15,16,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,18],"f":[null,[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["level",4]],["logger",3]],[[]],null,[[],["option",4]],[[],["option",4]],null,[[]],[[["argmatches",3]],["result",4,[["error",3]]]],[[]],[[],["command",6]],[[],["command",6]],[[["",0]],["level",4]],[[]],[[]],[[]],null,[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0],["argmatches",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["cellstruct",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["error",3]]],[[]],[[]],[[]],[[["string",3]]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],[[["",0]],["config",3]],[[["",0],["",0]]],[[],["result",4]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[],["rowstruct",3]],null,[[]],[[]],[[["",0]],["result",4]],[[],["rowstruct",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["cellstruct",3]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[["",0],["signererror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0],["signererror",4]],["bool",0]],[[["box",3,[["certificatehandler",8]]],["box",3,[["singlesigner",8]]]]],[[]],[[]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["cellstruct",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0],["vec",3,[["u8",0]]],["vec",3,[["signerwithstake",3]]],["protocolparameters",3]],["result",4,[["vec",3,[["singlesignature",3]]],["singlesignererror",4]]]],[[["",0],["vec",3,[["u8",0]]],["vec",3,[["signerwithstake",3]]],["protocolparameters",3]],["result",4,[["vec",3,[["singlesignature",3]]],["singlesignererror",4]]]],[[["",0],["stake",6],["protocolparameters",3]],["result",4,[["stmsigner",3,[["blake2b",3]]],["string",3]]]],[[["",0],["singlesignererror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["string",3]]]],[[["str",0]],["result",4,[["stmsig",3,[["blake2b",3]]],["string",3]]]],[[],["result",4,[["string",3],["string",3]]]],[[["stmsig",3]],["result",4,[["string",3],["string",3]]]],[[["",0],["singlesignererror",4]],["bool",0]],[[["u64",0],["mspsk",3]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null],"p":[[3,"Args"],[4,"CertificateHandlerError"],[3,"CertificateHandlerHTTPClient"],[8,"CertificateHandler"],[13,"RemoteServerTechnical"],[13,"RemoteServerLogical"],[13,"RemoteServerUnreachable"],[13,"JsonParseFailed"],[13,"IOError"],[3,"Config"],[4,"SignerError"],[3,"Signer"],[13,"SingleSignaturesComputeFailed"],[13,"RetrievePendingCertificateFailed"],[4,"SingleSignerError"],[3,"MithrilSingleSigner"],[8,"SingleSigner"],[13,"ProtocolSignerCreationFailure"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};