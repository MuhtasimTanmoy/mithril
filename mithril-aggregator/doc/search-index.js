var searchIndex = JSON.parse('{\
"mithril_aggregator":{"doc":"Mithril Aggregator","t":[3,11,11,11,11,11,5,11,11,11,11,11,12,0,0,11,11,11,0,5,11,11,11,11,5,0,11,11,12,11,11,12,12,12,0,11,11,11,11,11,11,11,12,11,11,11,3,6,6,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,17,3,11,11,11,11,11,11,12,11,0,11,12,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,3,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,10,11,12,11,11,10,11,10,11,10,11,10,11,10,11,11,5,5,5,5,5,12,11,11,11,12,10,11,10,11,11,11,12,12,12,11,11,11,11,11,10,11,10,11,10,11,11,11,11,3,8,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["Args","augment_args","augment_args_for_update","az","borrow","borrow_mut","build_logger","cast_from","checked_as","checked_cast_from","clone","clone_into","db_directory","dependency","entities","fmt","from","from_arg_matches","http_server","init_multi_signer","into","into_app","into_app_for_update","log_level","main","multi_signer","overflowing_as","overflowing_cast_from","run_mode","saturating_as","saturating_cast_from","server_ip","server_port","snapshot_interval","snapshot_store","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","update_from_arg_matches","verbose","vzip","wrapping_as","wrapping_cast_from","DependencyManager","MultiSignerWrapper","SnapshotStorerWrapper","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","config","from","into","multi_signer","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","snapshot_storer","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","with_multi_signer","with_snapshot_storer","wrapping_as","wrapping_cast_from","Config","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deserialize","fmt","from","into","network","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","url_snapshot_manifest","vzip","wrapping_as","wrapping_cast_from","SERVER_BASE_PATH","Server","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dependency_manager","from","handlers","into","ip","new","overflowing_as","overflowing_cast_from","port","router","saturating_as","saturating_cast_from","start","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","certificate_certificate_hash","certificate_pending","register_signatures","register_signer","snapshot_digest","snapshots","certificate_certificate_hash","certificate_pending","register_signatures","register_signer","routes","snapshot_digest","snapshots","with_multi_signer","with_snapshot_storer","Bytes","MultiSigner","MultiSignerImpl","ProtocolClerk","ProtocolKeyRegistration","ProtocolLotteryIndex","ProtocolMultiSignature","ProtocolParameters","ProtocolPartyId","ProtocolSignerVerificationKey","ProtocolSingleSignature","ProtocolStake","ProtocolStakeDistribution","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clerk","create_multi_signature","create_multi_signature","current_message","default","from","get_current_message","get_current_message","get_multi_signature","get_multi_signature","get_protocol_parameters","get_protocol_parameters","get_signer","get_signer","get_stake_distribution","get_stake_distribution","into","key_decode_hex","key_decode_hex_multisig","key_decode_hex_sig","key_encode_hex","key_encode_hex_multisig","multi_signatures","new","overflowing_as","overflowing_cast_from","protocol_parameters","register_signer","register_signer","register_single_signature","register_single_signature","saturating_as","saturating_cast_from","signers","single_signatures","stakes","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","update_current_message","update_current_message","update_protocol_parameters","update_protocol_parameters","update_stake_distribution","update_stake_distribution","vzip","wrapping_as","wrapping_cast_from","SnapshotStoreHTTPClient","SnapshotStorer","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","get_snapshot_details","get_snapshot_details","into","list_snapshots","list_snapshots","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","url_manifest","vzip","wrapping_as","wrapping_cast_from"],"q":["mithril_aggregator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::dependency","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::entities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::http_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::http_server::handlers","","","","","","mithril_aggregator::http_server::router","","","","","","","","","mithril_aggregator::multi_signer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::snapshot_store","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Node args","","","","","","","","","","","","Directory to snapshot","","","","Returns the argument unchanged.","","","Init multi signer dependency","Calls <code>U::from(self)</code>.","","","","","","","","Run mode","","","Server listening IP","Server listening port","Snapshot interval, in seconds Defaults to 4 hours","","","","","","","","","Verbosity level","","","","DependencyManager handles the dependencies","MultiSignerWrapper wraps a MultiSigner","SnapshotStorerWrapper wraps a SnapshotStorer","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","DependencyManager factory","","","","","","","","","","","","With MultiSigner","With SnapshotStorer","","","Aggregator configuration","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Cardano network","","","","","","","","","","","","Snapshots manifest location","","","","","Server","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Server factory","","","","","","","Start","","","","","","","","","Certificate by certificate hash","Certificate Pending","Register Signatures","Register Signer","Snapshot by digest","Snapshots","GET /certificate/{certificate_hash}","GET /certificate-pending","POST /register-signatures","POST /register-signer","Routes","GET /snapshot/digest","GET /snapshots","With multi signer middleware","With snapshot storer middleware","","MultiSigner is the cryptographic engine in charge of …","MultiSignerImpl is an implementation of the MultiSigner","","","","","","","","","","","","","","","","","Creates a clerk","Create a multi signature from single signatures","Create a multi signature from single signatures","","","Returns the argument unchanged.","Get current message","Get current message","Retrieves a multi signature from a message","Retrieves a multi signature from a message","Get protocol parameters","Get protocol parameters","Get signer","Get signer verification key","Get stake distribution","Get stake distribution","Calls <code>U::from(self)</code>.","Decode key from hex helper","","","Encode key to hex helper","","","MultiSignerImpl factory","","","","Register a signer","Register a signer","Registers a single signature","Registers a single signature","","","","","","","","","","","Update current message","Update current message","Update protocol parameters","Update protocol parameters","Update stake distribution","Update stake distribution","","","","SnapshotStoreHTTPClient is a http client for an remote …","SnapshotStorer represents a snapshot store interactor","","","","","","","Returns the argument unchanged.","Get snapshot details","Get snapshot details","Calls <code>U::from(self)</code>.","List snapshots","List snapshots","SnapshotStoreHTTPClient factory","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,6,5,5,5,5,6,5,6,5,6,5,6,5,6,5,5,0,0,0,0,0,5,5,5,5,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,6,5,6,5,6,5,5,5,5,0,0,7,7,7,7,7,7,7,8,7,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[null,[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["level",4]],["logger",3]],[[]],[[],["option",4]],[[],["option",4]],[[["",0]],["args",3]],[[["",0],["",0]]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[]],[[["argmatches",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[],["command",6]],[[],["command",6]],[[["",0]],["level",4]],[[]],null,[[]],[[]],null,[[]],[[]],null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0],["argmatches",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],null,[[]],[[]],null,[[["config",3]]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[["",0],["arc",3,[["rwlock",3,[["multisigner",8]]]]]],["",0]],[[["",0],["arc",3,[["rwlock",3,[["snapshotstorer",8]]]]]],["",0]],[[]],[[]],null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],[[["",0]],["config",3]],[[["",0],["",0]]],[[],["result",4]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["",0]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],null,[[]],null,[[]],null,[[["string",3],["u16",0],["arc",3,[["dependencymanager",3]]]]],[[]],[[]],null,null,[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["arc",3,[["rwlock",3,[["multisigner",8]]]]]]],[[]],[[["vec",3,[["singlesignature",3]]],["arc",3,[["rwlock",3,[["multisigner",8]]]]]]],[[["signer",3]]],[[["string",3],["arc",3,[["rwlock",3,[["snapshotstorer",8]]]]]]],[[["arc",3,[["rwlock",3,[["snapshotstorer",8]]]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],[[["arc",3,[["dependencymanager",3]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],[[["",0]],["protocolclerk",6]],[[["",0]],["result",4,[["option",4,[["protocolmultisignature",6]]],["string",3]]]],[[["",0]],["result",4,[["option",4,[["protocolmultisignature",6]]],["string",3]]]],null,[[]],[[]],[[["",0]],["option",4,[["bytes",6]]]],[[["",0]],["option",4,[["bytes",6]]]],[[["",0],["string",3]],["result",4,[["option",4,[["protocolmultisignature",6]]],["string",3]]]],[[["",0],["string",3]],["result",4,[["option",4,[["protocolmultisignature",6]]],["string",3]]]],[[["",0]],["option",4,[["protocolparameters",6]]]],[[["",0]],["option",4,[["protocolparameters",6]]]],[[["",0],["protocolpartyid",6]],["option",4,[["protocolsignerverificationkey",6]]]],[[["",0],["protocolpartyid",6]],["option",4,[["protocolsignerverificationkey",6]]]],[[["",0]],["protocolstakedistribution",6]],[[["",0]],["protocolstakedistribution",6]],[[]],[[["str",0]],["result",4,[["string",3]]]],[[["str",0]],["result",4,[["stmmultisig",3,[["blake2b",3]]],["string",3]]]],[[["str",0]],["result",4,[["stmsig",3,[["blake2b",3]]],["string",3]]]],[[],["result",4,[["string",3],["string",3]]]],[[["stmmultisig",3]],["result",4,[["string",3],["string",3]]]],null,[[]],[[]],[[]],null,[[["",0],["protocolpartyid",6],["protocolsignerverificationkey",6]],["result",4,[["string",3]]]],[[["",0],["protocolpartyid",6],["protocolsignerverificationkey",6]],["result",4,[["string",3]]]],[[["",0],["protocolpartyid",6],["protocolsinglesignature",6],["protocollotteryindex",6]],["result",4,[["string",3]]]],[[["",0],["protocolpartyid",6],["protocolsinglesignature",6],["protocollotteryindex",6]],["result",4,[["string",3]]]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0],["bytes",6]],["result",4,[["string",3]]]],[[["",0],["bytes",6]],["result",4,[["string",3]]]],[[["",0],["protocolparameters",6]],["result",4,[["string",3]]]],[[["",0],["protocolparameters",6]],["result",4,[["string",3]]]],[[["",0],["protocolstakedistribution",6]],["result",4,[["string",3]]]],[[["",0],["protocolstakedistribution",6]],["result",4,[["string",3]]]],[[]],[[]],[[]],null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[["",0],["string",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["string",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["string",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]]],"p":[[3,"Args"],[3,"DependencyManager"],[3,"Config"],[3,"Server"],[3,"MultiSignerImpl"],[8,"MultiSigner"],[3,"SnapshotStoreHTTPClient"],[8,"SnapshotStorer"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};