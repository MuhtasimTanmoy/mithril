var searchIndex = JSON.parse('{\
"mithril_aggregator":{"doc":"","t":[3,4,13,3,13,13,3,13,13,13,3,8,3,4,6,6,6,6,3,4,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["AggregatorRuntime","BeaconStoreError","Codec","Config","Core","CreateArchiveError","DependencyManager","ExistingSigner","ExistingSingleSignature","GenericError","MemoryBeaconStore","MultiSigner","MultiSignerImpl","ProtocolError","ProtocolParameters","ProtocolPartyId","ProtocolSignerVerificationKey","ProtocolStake","Server","SnapshotError","SnapshotStoreHTTPClient","Snapshotter","UnavailableMessage","UploadFileError","az","az","az","az","az","az","az","az","az","az","az","beacon_store","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clerk","clone","clone_into","config","create_multi_signature","create_multi_signature","default","default","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_current_message","get_current_message","get_multi_signature","get_multi_signature","get_protocol_parameters","get_protocol_parameters","get_signer","get_signer","get_signers","get_signers","get_stake_distribution","get_stake_distribution","into","into","into","into","into","into","into","into","into","into","into","key_decode_hex","multi_signer","network","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","register_signer","register_signer","register_single_signature","register_single_signature","run","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","snapshot","snapshot_storer","source","start","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_current_message","update_current_message","update_protocol_parameters","update_protocol_parameters","update_stake_distribution","update_stake_distribution","url_snapshot_manifest","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_beacon_store","with_multi_signer","with_snapshot_storer","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0"],"q":["mithril_aggregator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_aggregator::ProtocolError","","","mithril_aggregator::SnapshotError",""],"d":["AggregatorRuntime","","","Aggregator configuration","","","DependencyManager handles the dependencies","","","","MemoryBeaconStore is in memory <code>BeaconStore</code>","MultiSigner is the cryptographic engine in charge of …","MultiSignerImpl is an implementation of the MultiSigner","","","","","","Server","","SnapshotStoreHTTPClient is a http client for an remote …","Snapshotter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a clerk","","","","Create a multi signature from single signatures","Create a multi signature from single signatures","MemoryBeaconStore factory","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get current message","Get current message","Retrieves a multi signature from a message","Retrieves a multi signature from a message","Get protocol parameters","Get protocol parameters","Get signer","Get signer verification key","Get signers","Get signers","Get stake distribution","Get stake distribution","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Decode key from hex helper","","Cardano network","DependencyManager factory","Server factory","MultiSignerImpl factory","AggregatorRuntime factory","SnapshotStoreHTTPClient factory","Snapshotter factory","","","","","","","","","","","","","","","","","","","","","","","Register a signer","Register a signer","Registers a single signature","Registers a single signature","Run snapshotter loop","","","","","","","","","","","","","","","","","","","","","","","","","","","Start","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update current message","Update current message","Update protocol parameters","Update protocol parameters","Update stake distribution","Update stake distribution","Snapshots manifest location","","","","","","","","","","","","With MultiSigner","With MultiSigner","With SnapshotStorer","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,1,2,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,1,2,4,5,6,7,8,9,10,3,11,1,2,5,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,7,11,11,5,12,7,4,7,11,3,3,11,1,1,2,2,4,5,6,7,8,9,10,3,11,1,2,2,12,7,12,7,12,7,12,7,12,7,12,7,4,5,6,7,8,9,10,3,11,1,2,0,5,11,5,6,7,8,9,10,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,12,7,12,7,8,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,11,10,5,2,6,11,3,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,12,7,12,7,12,7,11,4,5,6,7,8,9,10,3,11,1,2,5,5,5,4,5,6,7,8,9,10,3,11,1,2,4,5,6,7,8,9,10,3,11,1,2,13,14,15,16,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0]],["protocolclerk",6]],[[["",0]],["config",3]],[[["",0],["",0]]],null,[[["",0]],["result",4,[["option",4,[["protocolmultisignature",6]]],["protocolerror",4]]]],[[["",0]],["result",4,[["option",4,[["protocolmultisignature",6]]],["protocolerror",4]]]],[[]],[[]],[[],["result",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["",0]],["option",4,[["bytes",6]]]],[[["",0]],["option",4,[["bytes",6]]]],[[["",0],["string",3]],["result",4,[["option",4,[["protocolmultisignature",6]]],["protocolerror",4]]]],[[["",0],["string",3]],["result",4,[["option",4,[["protocolmultisignature",6]]],["protocolerror",4]]]],[[["",0]],["option",4,[["protocolparameters",6]]]],[[["",0]],["option",4,[["protocolparameters",6]]]],[[["",0],["protocolpartyid",6]],["result",4,[["option",4,[["protocolsignerverificationkey",6]]],["protocolerror",4]]]],[[["",0],["protocolpartyid",6]],["result",4,[["option",4,[["protocolsignerverificationkey",6]]],["protocolerror",4]]]],[[["",0]],["result",4,[["vec",3,[["signerwithstake",3]]],["protocolerror",4]]]],[[["",0]],["result",4,[["vec",3,[["signerwithstake",3]]],["protocolerror",4]]]],[[["",0]],["protocolstakedistribution",6]],[[["",0]],["protocolstakedistribution",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["string",3]]]],null,null,[[["config",3]]],[[["string",3],["u16",0],["arc",3,[["dependencymanager",3]]]]],[[]],[[["u32",0],["string",3],["arc",3,[["rwlock",3,[["beaconstore",8]]]]],["arc",3,[["rwlock",3,[["multisigner",8]]]]]]],[[["string",3]]],[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["protocolpartyid",6],["protocolsignerverificationkey",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolpartyid",6],["protocolsignerverificationkey",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolpartyid",6],["protocolsinglesignature",6],["protocollotteryindex",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolpartyid",6],["protocolsinglesignature",6],["protocollotteryindex",6]],["result",4,[["protocolerror",4]]]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["result",4]],[[["",0],["string",3]]],null,[[["",0]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["bytes",6]],["result",4,[["protocolerror",4]]]],[[["",0],["bytes",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolparameters",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolparameters",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolstakedistribution",6]],["result",4,[["protocolerror",4]]]],[[["",0],["protocolstakedistribution",6]],["result",4,[["protocolerror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["arc",3,[["rwlock",3,[["beaconstore",8]]]]]],["",0]],[[["",0],["arc",3,[["rwlock",3,[["multisigner",8]]]]]],["",0]],[[["",0],["arc",3,[["rwlock",3,[["snapshotstorer",8]]]]]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null],"p":[[4,"ProtocolError"],[4,"SnapshotError"],[4,"BeaconStoreError"],[3,"MemoryBeaconStore"],[3,"DependencyManager"],[3,"Server"],[3,"MultiSignerImpl"],[3,"AggregatorRuntime"],[3,"SnapshotStoreHTTPClient"],[3,"Snapshotter"],[3,"Config"],[8,"MultiSigner"],[13,"ExistingSingleSignature"],[13,"Codec"],[13,"Core"],[13,"CreateArchiveError"],[13,"UploadFileError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};