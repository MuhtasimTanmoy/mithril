(function() {var implementors = {};
implementors["mithril_aggregator"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mithril_aggregator/enum.BeaconStoreError.html\" title=\"enum mithril_aggregator::BeaconStoreError\">BeaconStoreError</a>&gt; for <a class=\"enum\" href=\"mithril_aggregator/enum.ProtocolError.html\" title=\"enum mithril_aggregator::ProtocolError\">ProtocolError</a>","synthetic":false,"types":["mithril_aggregator::multi_signer::ProtocolError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mithril_aggregator/store/enum.VerificationKeyStoreError.html\" title=\"enum mithril_aggregator::store::VerificationKeyStoreError\">VerificationKeyStoreError</a>&gt; for <a class=\"enum\" href=\"mithril_aggregator/enum.ProtocolError.html\" title=\"enum mithril_aggregator::ProtocolError\">ProtocolError</a>","synthetic":false,"types":["mithril_aggregator::multi_signer::ProtocolError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;StakeStoreError&gt; for <a class=\"enum\" href=\"mithril_aggregator/enum.ProtocolError.html\" title=\"enum mithril_aggregator::ProtocolError\">ProtocolError</a>","synthetic":false,"types":["mithril_aggregator::multi_signer::ProtocolError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mithril_aggregator/store/enum.SingleSignatureStoreError.html\" title=\"enum mithril_aggregator::store::SingleSignatureStoreError\">SingleSignatureStoreError</a>&gt; for <a class=\"enum\" href=\"mithril_aggregator/enum.ProtocolError.html\" title=\"enum mithril_aggregator::ProtocolError\">ProtocolError</a>","synthetic":false,"types":["mithril_aggregator::multi_signer::ProtocolError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.61.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"mithril_aggregator/enum.SnapshotError.html\" title=\"enum mithril_aggregator::SnapshotError\">SnapshotError</a>","synthetic":false,"types":["mithril_aggregator::snapshotter::SnapshotError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AdapterError&gt; for <a class=\"enum\" href=\"mithril_aggregator/store/enum.StoreError.html\" title=\"enum mithril_aggregator::store::StoreError\">StoreError</a>","synthetic":false,"types":["mithril_aggregator::store::error::StoreError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AdapterError&gt; for <a class=\"enum\" href=\"mithril_aggregator/store/enum.SingleSignatureStoreError.html\" title=\"enum mithril_aggregator::store::SingleSignatureStoreError\">SingleSignatureStoreError</a>","synthetic":false,"types":["mithril_aggregator::store::single_signature_store::SingleSignatureStoreError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AdapterError&gt; for <a class=\"enum\" href=\"mithril_aggregator/store/enum.VerificationKeyStoreError.html\" title=\"enum mithril_aggregator::store::VerificationKeyStoreError\">VerificationKeyStoreError</a>","synthetic":false,"types":["mithril_aggregator::store::verification_key_store::VerificationKeyStoreError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()