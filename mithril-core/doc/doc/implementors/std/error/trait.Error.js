(function() {var implementors = {};
implementors["mithril"] = [{"text":"impl&lt;PE&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mithril/key_reg/enum.RegisterError.html\" title=\"enum mithril::key_reg::RegisterError\">RegisterError</a>&lt;PE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PE: PairingEngine,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["mithril::key_reg::RegisterError"]},{"text":"impl&lt;PE:&nbsp;PairingEngine, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mithril/mithril_proof/enum.MithrilWitnessError.html\" title=\"enum mithril::mithril_proof::MithrilWitnessError\">MithrilWitnessError</a>&lt;PE, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["mithril::mithril_proof::MithrilWitnessError"]},{"text":"impl&lt;Error:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.i64.html\">i64</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"mithril/proof/trivial/struct.TrivialError.html\" title=\"struct mithril::proof::trivial::TrivialError\">TrivialError</a>&lt;Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["mithril::proof::trivial::TrivialError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mithril/stm/enum.AggregationFailure.html\" title=\"enum mithril::stm::AggregationFailure\">AggregationFailure</a>","synthetic":false,"types":["mithril::stm::AggregationFailure"]},{"text":"impl&lt;PE:&nbsp;PairingEngine, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mithril/stm/enum.VerificationFailure.html\" title=\"enum mithril::stm::VerificationFailure\">VerificationFailure</a>&lt;PE, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["mithril::stm::VerificationFailure"]},{"text":"impl&lt;Proof, PE&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mithril/stm/enum.MultiVerificationFailure.html\" title=\"enum mithril::stm::MultiVerificationFailure\">MultiVerificationFailure</a>&lt;Proof, PE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Proof: <a class=\"trait\" href=\"mithril/mithril_proof/trait.MithrilProof.html\" title=\"trait mithril::mithril_proof::MithrilProof\">MithrilProof</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;PE: PairingEngine,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["mithril::stm::MultiVerificationFailure"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()