var searchIndex = new Map(JSON.parse('[\
["mithril_aggregator",{"doc":"Mithril aggregator The Aggregator is responsible for:","t":"FFKFKFFPFFPPFEFFGPPPFPPPPPPFFFKFPKPPPFGKKGFKFKKGKGKGPPFFPFKPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNONMMNOMNMNMNMNMNNNOCOOOONNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNCOOONNNNNNNNNNNNNNNNNNNNOOONNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNMNMNMNNNNMNMNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOOONNNNNNNNNNNNNOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNOMNMMNNOOMNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMMNNNNNOOOOCOOOMNNOOOOOOOOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNMNMNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOCCCHHFFFFFFFFFFFFFFFFFFFFFFFFKKFFFFFFFFFFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOMNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFIPPPPIPIOONNNOONNNNNNNNNNNONNNOOOOOOOOOONNNNNNOONNNNNNNNNNNOONNNOOOOOOOOOONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNOOOOONOONNNNNNOOOONNNNNNOOOOOOOOOOOOOOOOOOOOOOOONOOOOOONNNNNNNNNNNNNNNNOONNNNNNNNNOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNNOOOOOONNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPKGPKGPKGFFFFFFFPPPPPKKKGPKKPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNMNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOO","n":["AggregatorConfig","AggregatorRunner","AggregatorRunnerTrait","AggregatorRuntime","ArtifactBuilder","CExplorerSignerRetriever","CertificatePendingStore","ChainObserver","CompressedArchiveSnapshotter","Configuration","CreateArchiveError","Critical","DefaultConfiguration","DependencyContainer","DumbSnapshotUploader","DumbSnapshotter","ExecutionEnvironment","ExistingSigner","FailedSignerRecorder","FailedSignerRegistration","FromRegisterSignerAdapter","Gcp","GeneralError","Gzip","InvalidArchiveError","KeepState","Local","LocalSnapshotUploader","MainOpts","MithrilSignerRegisterer","MultiSigner","MultiSignerImpl","Production","ProtocolParametersStorer","ReInit","RegistrationRoundNotYetOpened","RegistrationRoundUnexpectedEpoch","RemoteSnapshotUploader","RuntimeError","SignerRecorder","SignerRegisterer","SignerRegistrationError","SignerRegistrationRound","SignerRegistrationRoundOpener","SignersImporter","SignersImporterPersister","SignersImporterRetriever","SnapshotError","SnapshotUploader","SnapshotUploaderType","Snapshotter","SnapshotterCompressionAlgorithm","StoreError","Test","ToCertificatePendingMessageAdapter","ToEpochSettingsMessageAdapter","UploadFileError","VerificationKeyStore","VerificationKeyStorer","VerifyArchiveError","Zstandard","ZstandardCompressionParameters","adapt","adapt","augment_args","augment_args_for_update","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardano_cli_path","cardano_node_socket_path","cardano_node_version","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cexplorer_pools_url","chain_observer_type","chain_observer_type","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into_box","clone_into_box","close_registration_round","close_registration_round","close_signer_registration_round","close_signer_registration_round","collect","collect","command","command","command_for_update","compute_artifact","compute_protocol_message","compute_protocol_message","config_directory","create_artifact","create_artifact","create_certificate","create_certificate","create_multi_signature","create_multi_signature","create_new_pending_certificate","create_new_pending_certificate","create_open_message","create_open_message","critical","cycle","data_stores_directory","database","db_directory","db_directory","db_directory","db_directory","default","default","default","default","dependency_injection","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","disable_digests_cache","disable_digests_cache","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_pending_certificate","drop_pending_certificate","entities","environment","environment","epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_reader_adapter_params","era_reader_adapter_type","era_reader_adapter_type","erased_serialize","erased_serialize","erased_serialize","erased_serialize","event_store","execute","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","genesis_verification_key","get","get_beacon_from_chain","get_beacon_from_chain","get_current_non_certified_open_message","get_current_non_certified_open_message","get_current_open_message_for_signed_entity_type","get_current_open_message_for_signed_entity_type","get_current_round","get_current_round","get_last_snapshot","get_last_upload","get_network","get_protocol_parameters","get_server_url","get_signers","get_signers","get_sqlite_dir","get_state","get_verification_keys","get_verification_keys","group_id","handle_discrepancies_at_startup","handle_discrepancies_at_startup","inform_new_epoch","inform_new_epoch","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_certificate_chain_valid","is_certificate_chain_valid","keep_state","level","list_allowed_signed_entity_types","list_allowed_signed_entity_types_discriminants","log_level","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mark_open_message_if_expired","mark_open_message_if_expired","network","network","network_magic","new","new","new","new","new","new","new","new","new","new","new","new","new_sample","number_of_workers","open_registration_round","open_registration_round","open_signer_registration_round","open_signer_registration_round","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","persist","precompute_epoch_data","precompute_epoch_data","protocol_parameters","prune_verification_keys","prune_verification_keys","record_signer_registration","register_signer","register_signer","remove","reset_digests_cache","reset_digests_cache","retrieve","retrieve","run","run","run_forever","run_interval","run_mode","safe_epoch_retention_limit","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","save_pending_certificate","save_pending_certificate","save_protocol_parameters","save_verification_key","save_verification_key","serialize","serialize","serialize","serialize","server_ip","server_ip","server_port","server_port","services","signed_entity_types","signer_importer_run_interval","signer_importer_run_interval","snapshot","snapshot","snapshot","snapshot_bucket_name","snapshot_compression_algorithm","snapshot_compression_algorithm","snapshot_directory","snapshot_directory","snapshot_store_type","snapshot_uploader_type","snapshot_uploader_type","snapshot_use_cdn_domain","snapshot_use_cdn_domain","source","source","source","store_retention_limit","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_adapt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_to_internal_server_error","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_era_checker","update_era_checker","update_from_arg_matches","update_from_arg_matches_mut","update_protocol_parameters","update_protocol_parameters","update_stake_distribution","update_stake_distribution","upload_snapshot","upload_snapshot","upload_snapshot","upload_snapshot","verbose","verify_single_signature","verify_single_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","zstandard_parameters","message","message","message","nested_error","nested_error","nested_error","current_round_epoch","received_epoch","cardano_transaction_migration","migration","provider","get_migrations","get_migrations","CardanoTransactionRecord","CardanoTransactionRepository","CertificateRecord","CertificateRecordProvider","CertificateRepository","DeleteCertificateProvider","DeleteEpochSettingProvider","DeleteSignerRegistrationRecordProvider","DeleteStakePoolProvider","EpochSettingProvider","EpochSettingRecord","EpochSettingStore","ImportSignerRecordProvider","InsertCertificateRecordProvider","InsertOrReplaceSignerRegistrationRecordProvider","InsertOrReplaceStakePoolProvider","InsertSignedEntityRecordProvider","OpenMessageRecord","OpenMessageRepository","OpenMessageWithSingleSignaturesRecord","RegisterSignerRecordProvider","SignedEntityRecord","SignedEntityRecordProvider","SignedEntityStoreAdapter","SignedEntityStorer","SignerGetter","SignerRecord","SignerRecordProvider","SignerRegistrationRecord","SignerRegistrationRecordProvider","SignerRegistrationStore","SignerStore","SingleSignatureRecord","SingleSignatureRecordProvider","SingleSignatureRepository","StakePool","StakePoolProvider","StakePoolStore","UpdateEpochSettingProvider","UpdateSingleSignatureRecordProvider","aggregate_verification_key","artifact","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon","block_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_id","certificate_id","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clean_epoch","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_certificate","create_many_certificates","create_open_message","create_single_signature","create_transaction","create_transactions","created_at","created_at","created_at","created_at","created_at","delete","delete","delete_by_ids","delete_certificates","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","expires_at","expires_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_all","get_all","get_all","get_all","get_all","get_all","get_all","get_all","get_all_transactions","get_by_certificate_id","get_by_certificate_id","get_by_certificates_ids","get_by_epoch","get_by_epoch","get_by_epoch","get_by_epoch","get_by_open_message_id","get_by_signed_entity_id","get_by_signed_entity_type","get_by_signer_id","get_by_signer_id_and_epoch","get_certificate","get_certificate_details","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_connection","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_definition","get_expired_open_message","get_last_signed_entities_by_type","get_last_signed_entities_by_type","get_latest_certificates","get_master_certificate_for_epoch","get_open_message","get_open_message_with_single_signatures","get_projection","get_projection","get_projection","get_projection","get_projection","get_projection","get_projection","get_projection","get_projection","get_projection","get_protocol_parameters","get_signed_entities_by_certificates_ids","get_signed_entities_by_certificates_ids","get_signed_entity","get_signed_entity","get_signed_entity_by_certificate_id","get_signed_entity_by_certificate_id","get_signers","get_stakes","get_transaction","get_transactions_up_to","get_up_to","get_verification_keys","hydrate","hydrate","hydrate","hydrate","hydrate","hydrate","hydrate","hydrate","hydrate","hydrate","immutable_file_number","import_many_signers","import_signer","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initiated_at","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_certified","is_certified","is_expired","is_expired","last_registered_at","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lottery_indexes","message","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","open_message_id","open_message_id","open_message_id","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_certificate_id","persist","pool_ticker","protocol_message","protocol_message","protocol_message","protocol_parameters","protocol_version","prune","prune","prune","prune_verification_keys","record_signer_registration","registration_epoch_setting_id","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save_protocol_parameters","save_stakes","save_verification_key","sealed_at","signature","signature","signed_entity_id","signed_entity_type","signed_entity_type","signed_entity_type","signer_id","signer_id","signers","single_signatures","store_signed_entity","store_signed_entity","store_transactions","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_open_message","update_signed_entities","update_signed_entities","updated_at","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DependenciesBuilder","DependenciesBuilderError","DependencyContainer","EpochServiceWrapper","Err","InconsistentState","Initialization","MissingConfiguration","MultiSignerWrapper","Ok","Result","api_version_provider","api_version_provider","az","az","az","beacon_provider","beacon_provider","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_certifier_service","build_dependency_container","build_message_service","build_prover_service","build_ticker_service","cardano_cli_runner","cast_from","cast_from","cast_from","certificate_pending_store","certificate_pending_store","certificate_repository","certificate_repository","certificate_verifier","certificate_verifier","certifier_service","certifier_service","chain_observer","chain_observer","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","config","configuration","create_aggregator_runner","create_event_store","create_genesis_container","create_http_routes","create_signer_importer","deref","deref","deref","deref_mut","deref_mut","deref_mut","digester","digester","drop","drop","drop","epoch_service","epoch_service","era_checker","era_checker","era_reader","era_reader","era_reader_adapter","event_transmitter","event_transmitter","event_transmitter_channel","fmt","fmt","from","from","from","from","from","genesis_verifier","genesis_verifier","get_api_version_provider","get_beacon_provider","get_cardano_cli_runner","get_certificate_pending_store","get_certificate_repository","get_certificate_verifier","get_certifier_service","get_chain_observer","get_epoch_service","get_era_checker","get_era_reader","get_event_transmitter","get_event_transmitter_receiver","get_event_transmitter_sender","get_genesis_verifier","get_immutable_cache_provider","get_immutable_digester","get_immutable_file_observer","get_logger","get_message_service","get_mithril_registerer","get_multi_signer","get_open_message_repository","get_protocol_parameters_store","get_prover_service","get_signable_builder_service","get_signed_entity_service","get_signed_entity_storer","get_signer_store","get_snapshot_uploader","get_snapshotter","get_sqlite_connection","get_sqlite_connection_cardano_transaction","get_stake_distribution_service","get_stake_store","get_ticker_service","get_transaction_parser","get_transaction_repository","get_transaction_store","get_verification_key_store","immutable_cache_provider","immutable_digester","immutable_file_observer","immutable_file_observer","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","message_service","message_service","mithril_registerer","multi_signer","multi_signer","new","open_message_repository","open_message_repository","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","protocol_parameters_store","protocol_parameters_store","prover_service","prover_service","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","signable_builder_service","signable_builder_service","signed_entity_service","signed_entity_service","signed_entity_storer","signed_entity_storer","signer_getter","signer_recorder","signer_registerer","signer_registration_round_opener","signer_store","snapshot_uploader","snapshot_uploader","snapshotter","snapshotter","sqlite_connection","sqlite_connection","sqlite_connection_transaction","stake_distribution_service","stake_distribution_service","stake_store","stake_store","ticker_service","ticker_service","to_string","transaction_parser","transaction_parser","transaction_repository","transaction_sqlite_connection","transaction_store","transaction_store","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vanish","verification_key_store","verification_key_store","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","error","message","OpenMessage","SignerRegistrationsListItemMessage","SignerRegistrationsMessage","SignerTickerListItemMessage","SignersTickersMessage","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","created_at","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expires_at","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_signers_id","has_registered","init","init","init","init","init","into","into","into","into","into","is_certified","is_expired","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","network","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","party_id","party_id","pool_ticker","protocol_message","registered_at","registrations","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","signed_entity_type","signers","signing_at","single_signatures","stake","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Event","EventMessage","EventPersister","EventStore","TransmitterService","action","action","add_header","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","content","content","created_at","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","event_id","fmt","from","from","from","from","from","get_projection","get_transmitter","headers","hydrate","init","init","init","init","init","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","persist","run","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send_event_message","source","source","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AlreadyCertified","Busy","CertificateEpochGap","CertifierService","CertifierServiceError","CouldNotFindLastCertificate","EpochService","EpochServiceError","Expired","MessageService","MessageServiceError","MithrilCertifierService","MithrilEpochService","MithrilMessageService","MithrilProverService","MithrilSignedEntityService","MithrilStakeDistributionService","MithrilTickerService","NoParentCertificateFound","NotFound","NotYetComputed","NotYetInitialized","PendingCertificateDoesNotExist","ProverService","SignedEntityService","StakeDistributionService","StakePoolDistributionServiceError","Technical","TickerService","TransactionsRetriever","Unavailable","UnavailableData","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","compute_transactions_proofs","compute_transactions_proofs","create_artifact","create_artifact","create_certificate","create_certificate","create_open_message","create_open_message","current_aggregate_verification_key","current_aggregate_verification_key","current_protocol_parameters","current_protocol_parameters","current_signers_with_stake","current_signers_with_stake","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_of_current_data","epoch_of_current_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_cardano_transaction_list_message","get_cardano_transaction_list_message","get_cardano_transaction_message","get_cardano_transaction_message","get_certificate_by_hash","get_certificate_by_hash","get_certificate_list_message","get_certificate_list_message","get_certificate_message","get_certificate_message","get_current_epoch","get_current_epoch","get_current_immutable_beacon","get_current_immutable_beacon","get_last_cardano_transaction_commitment","get_last_cardano_transaction_commitment","get_last_signed_mithril_stake_distributions","get_last_signed_mithril_stake_distributions","get_last_signed_snapshots","get_last_signed_snapshots","get_latest_certificates","get_latest_certificates","get_mithril_stake_distribution_list_message","get_mithril_stake_distribution_list_message","get_mithril_stake_distribution_message","get_mithril_stake_distribution_message","get_open_message","get_open_message","get_signed_mithril_stake_distribution_by_id","get_signed_mithril_stake_distribution_by_id","get_signed_snapshot_by_id","get_signed_snapshot_by_id","get_snapshot_list_message","get_snapshot_list_message","get_snapshot_message","get_snapshot_message","get_stake_distribution","get_stake_distribution","get_up_to","inform_epoch","inform_epoch","inform_epoch","inform_epoch","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mark_open_message_if_expired","mark_open_message_if_expired","new","new","new","new","new","new","new","next_aggregate_verification_key","next_aggregate_verification_key","next_protocol_parameters","next_protocol_parameters","next_signers_with_stake","next_signers_with_stake","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","precompute_epoch_data","precompute_epoch_data","protocol_multi_signer","protocol_multi_signer","register_single_signature","register_single_signature","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","technical_subsystem","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcoming_protocol_parameters","upcoming_protocol_parameters","update_protocol_parameters","update_protocol_parameters","update_stake_distribution","update_stake_distribution","verify_certificate_chain","verify_certificate_chain","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","certificate_epoch","current_epoch","error","message"],"q":[[0,"mithril_aggregator"],[1068,"mithril_aggregator::RuntimeError"],[1074,"mithril_aggregator::SignerRegistrationError"],[1076,"mithril_aggregator::database"],[1079,"mithril_aggregator::database::cardano_transaction_migration"],[1080,"mithril_aggregator::database::migration"],[1081,"mithril_aggregator::database::provider"],[2364,"mithril_aggregator::dependency_injection"],[2588,"mithril_aggregator::dependency_injection::DependenciesBuilderError"],[2590,"mithril_aggregator::entities"],[2807,"mithril_aggregator::event_store"],[2966,"mithril_aggregator::services"],[3386,"mithril_aggregator::services::CertifierServiceError"],[3388,"mithril_aggregator::services::StakePoolDistributionServiceError"],[3390,"mithril_common::entities::certificate_pending"],[3391,"mithril_common::messages::certificate_pending"],[3392,"mithril_common::entities::epoch_settings"],[3393,"mithril_common::messages::epoch_settings"],[3394,"clap_builder::builder::command"],[3395,"core::option"],[3396,"config::source"],[3397,"alloc::boxed"],[3398,"core::future::future"],[3399,"core::pin"],[3400,"alloc::string"],[3401,"config::value"],[3402,"config::map"],[3403,"config::error"],[3404,"core::result"],[3405,"mithril_common::entities::certificate"],[3406,"mithril_common::signable_builder::interface"],[3407,"mithril_common::entities::signed_entity_type"],[3408,"mithril_common::entities::beacon"],[3409,"mithril_common::entities::protocol_message"],[3410,"mithril_common"],[3411,"serde::de"],[3412,"erased_serde::ser"],[3413,"erased_serde::ser"],[3414,"mithril_common"],[3415,"core::fmt"],[3416,"core::fmt"],[3417,"std::io::error"],[3418,"clap_builder::parser::matches::arg_matches"],[3419,"clap_builder"],[3420,"mithril_common::entities::cardano_network"],[3421,"mithril_common::entities::epoch"],[3422,"std::path"],[3423,"clap_builder::util::id"],[3424,"mithril_common::entities::protocol_parameters"],[3425,"alloc::vec"],[3426,"mithril_common::entities::signed_entity_type"],[3427,"alloc::sync"],[3428,"core::time"],[3429,"mithril_common::chain_observer::interface"],[3430,"std::path"],[3431,"mithril_common::entities::type_alias"],[3432,"mithril_common::entities::signer"],[3433,"mithril_common::entities::signer"],[3434,"core::error"],[3435,"mithril_common::messages::register_signer"],[3436,"core::any"],[3437,"mithril_common::entities::single_signatures"],[3438,"mithril_persistence::database::version_checker"],[3439,"mithril_common::entities::cardano_transaction"],[3440,"mithril_common::entities::cardano_transaction"],[3441,"mithril_common::entities::cardano_transaction"],[3442,"core::convert"],[3443,"sqlite::connection"],[3444,"mithril_persistence::sqlite"],[3445,"mithril_persistence::sqlite::projection"],[3446,"sqlite::cursor"],[3447,"mithril_persistence::sqlite::entity"],[3448,"warp::reply"],[3449,"warp::reject"],[3450,"warp::filter"],[3451,"core::clone"],[3452,"mithril_common::api_version"],[3453,"mithril_common::beacon_provider"],[3454,"mithril_common::chain_observer::cli_observer"],[3455,"mithril_common::certificate_chain::certificate_verifier"],[3456,"mithril_common::era::era_checker"],[3457,"mithril_common::era::era_reader"],[3458,"tokio::sync::mpsc::unbounded"],[3459,"tokio::sync::mpsc::unbounded"],[3460,"mithril_common::digesters::cache::provider"],[3461,"mithril_common::digesters::immutable_digester"],[3462,"mithril_common::digesters::immutable_file_observer"],[3463,"slog"],[3464,"mithril_common::signable_builder::signable_builder_service"],[3465,"mithril_common::cardano_transaction_parser"],[3466,"mithril_common::signable_builder::cardano_transactions"],[3467,"core::fmt"],[3468,"core::marker"],[3469,"mithril_common::protocol::multi_signer"]],"d":["Configuration structure dedicated to the AggregatorRuntime.","The runner responsibility is to expose a code API for the …","This trait is intended to allow mocking the …","The AggregatorRuntime responsibility is to create a state …","ArtifactBuilder is trait for building an artifact","A SignersImporterRetriever fetching signers data from …","Store for CertificatePending.","Chain observer error.","Compressed Archive Snapshotter create a compressed file.","Aggregator configuration","Set when the snapshotter fails at creating a snapshot.","A Critical error means the Runtime stops and the software …","Default configuration with all the default values for …","","Dummy uploader for test purposes.","Snapshotter that does nothing. It is mainly used for test …","Different kinds of execution environments","Signer is already registered.","Signer recorder failed.","Signer registration failed.","Adapter to convert RegisterSignerMessage to Signer …","Uploader to GCP storage.","General error.","Gzip compression format","Set when the snapshotter creates an invalid snapshot.","Errors that need the runtime to try again without changing …","Uploader to local storage.","LocalSnapshotUploader is a snapshot uploader working using …","Mithril Aggregator Node","Implementation of a SignerRegisterer","MultiSigner is the cryptographic engine in charge of …","MultiSignerImpl is an implementation of the MultiSigner","Production environment, minimum logging, maximum …","Store and get protocol parameters for given epoch.","An error that needs to re-initialize the state machine.","No signer registration round opened yet","Registration round for unexpected epoch","GCPSnapshotUploader is a snapshot uploader working using …","Error encountered or produced by the Runtime. This enum …","Signer recorder trait","Trait to register a signer","Error type for signer registerer service.","Represents the information needed to handle a signer …","Trait to open a signer registration round","Tool that can import a list of signers","Trait that define how a SignersImporter persist the …","Trait that define how a SignersImporter retrieve the …","Snapshotter error type.","SnapshotUploader represents a snapshot uploader interactor","Uploader needed to copy the snapshot once computed.","Define the ability to create snapshots.","Compression algorithm and parameters of the …","Store error.","Test environment, maximum logging, memory stores etc.","Adapter to turn CertificatePending instances into …","Adapter to spawn EpochSettingsMessage from EpochSettings …","Set when the snapshotter fails at uploading the snapshot.","Store for the <code>VerificationKey</code>.","Store and get signers verification keys for given epoch.","Set when the snapshotter fails verifying a snapshot.","Zstandard compression format","Zstandard specific parameters","Method to trigger the conversion","Turn an entity instance into message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano CLI tool path","Path of the socket used by the Cardano CLI tool to …","Cardano node version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Url to CExplorer list of pools to import as signer in the …","Cardano chain observer type","Chain observer type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close a signer registration round","","Close the signer registration round of an epoch.","","","","","application main command","","Compute an artifact","Compute the protocol message","","Directory where configuration file is located","Create an artifact and persist it.","","Tell the certifier to try to create a new certificate.","","Creates a multi signature from single signatures","Creates a multi signature from single signatures","Create a new pending certificate.","","Create new open message","","Create a new Critical error","Perform one tick of the state machine.","Directory to store aggregator data (Certificates, …","database module. This module contains the entities …","Directory of the Cardano node files","Directory of the Cardano node store.","Directory of the Cardano node database","DB directory to snapshot","","","","","Dependency injection module. This module provides tools to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the digest caching strategy","ImmutableDigesterCacheProvider default setting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop the actual pending certificate in the store.","","Entities module","What kind of runtime environment the configuration is …","Execution environment","Registration round epoch","","","","","","","","","","","","","","","","","","","","","Era reader adapter parameters","Era reader adapter type","Era reader adapter type","","","","","Event Store module This module proposes tools to send …","execute command","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Genesis verification key","Fetch the current CertificatePending if any.","Return the current beacon from the chain","Return the current beacon from the chain","Retrieves the current non certified open message.","","Retrieves the current open message for a given signed …","","Get current open round if exists","","Return the last fake snapshot produced.","Return the last upload that was triggered.","Check configuration and return a representation of the …","Get the saved <code>ProtocolParameter</code> for the given Epoch if any.","Build the server URL from configuration.","Returns the list of signers for the given <code>epoch</code>.","","Return the file of the SQLite stores. If the directory …","Return the actual state of the state machine.","Returns a HashMap of Signer indexed by PartyId for the …","","","Handle discrepancies at startup in the protocol parameters …","Handle discrepancies at startup in the protocol parameters …","Ask services to update themselves for the new epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interval between each snapshot, in ms","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if a certificate chain is valid.","","Create a new KeepState error","Level of compression, default to 9.","Create the deduplicated list of allowed signed entity …","Create the deduplicated list of allowed signed entity …","get log level from parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark expired open message.","","Cardano network","Cardano network","Cardano Network Magic number","MultiSignerImpl factory","Create a new instance of the Aggregator Runner.","Create a new instance of the state machine.","MithrilSignerRegisterer factory","Create a new instance.","GCPSnapshotUploader factory","Snapshotter factory","Create a new instance of DumbSnapshotter.","Create a new instance.","Create a new instance.","SignersImporter factory","Create a new instance of AggregatorConfig.","Create a sample configuration mainly for tests","Number of workers when compressing, 0 will disable …","Open a signer registration round","","Open the signer registration round of an epoch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Persist the given list of signers.","Precompute what doesn’t change for the actual epoch","","Protocol parameters","Prune all verification keys that are at or below the given …","","Record a signer registration","Register a signer","","Remove and return the current CertificatePending if any.","Should the immutable cache be reset or not","ImmutableDigesterCacheProvider default setting","Retrieve the signers list.","","Launches an infinite loop ticking the state machine.","Import and persist the signers","Start a loop that call run at the given time interval.","Run Interval is the interval between two runtime cycles in …","Run Mode","Same as the store retention limit but will never yield a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Save the given CertificatePending.","Store the given pending certificate.","","Save the given <code>ProtocolParameter</code> for the given Epoch.","Save the verification key, for the given Signer for the …","","","","","","Server listening IP","Server listening IP","Server listening port","Server listening port","Services","Signed entity types parameters (discriminants names in an …","Time interval at which the signers in …","Signer importer run interval default setting","Create a new snapshot with the given archive name.","","","Bucket name where the snapshots are stored if …","Compression algorithm used for the snapshot archive …","Snapshot compression algorithm default setting","Directory to store snapshot","Directory to store snapshot","Type of snapshot store to use","Type of snapshot uploader to use","Type of snapshot uploader to use","Use CDN domain to construct snapshot urls if …","Use CDN domain to construct snapshot urls default setting …","","","","Max number of records in stores. When new records are …","","","","","","","","","","","","","Method to trigger the conversion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Match the given result and do an early return with an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the EraChecker with EraReader information.","","","","Ask the EpochService to update the protocol parameters.","","Read the stake distribution from the blockchain and store …","","Upload a snapshot","Upload a snapshot","","","Verbosity level","Verify a single signature","Verify a single signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specific parameters when snapshot_compression_algorithm is …","error message","error message","error message","Eventual caught error","Eventual caught error","Eventual caught error","Epoch of the current round","Epoch of the received signer registration","Migration module for cardano transactions store","Migration module","Aggregator related database providers","Get all the migrations required by this version of the …","Get all the migrations required by this version of the …","Cardano Transaction record is the representation of a …","Cardano transaction repository","Certificate record is the representation of a stored …","Simple CertificateRecord provider.","Database frontend API for Certificate queries.","Provider to remove old data from the <code>certificate</code> table","Provider to remove old data from the epoch_setting table","Provider to remove old data from the signer_registration …","Provider to remove old data from the stake_pool table","Simple EpochSettingRecord provider.","Settings for an epoch, including the protocol parameters.","Service to deal with epoch settings (read &amp; write).","Query to update the signer record","Query to insert the certificate record","Query to insert or replace a signer_registration record","Query to update the stake distribution","Query to insert the signed_entity record","OpenMessage","Open message repository","Open Message with associated single signatures if any.","Query to insert the signer record","SignedEntity record is the representation of a stored …","Simple SignedEntityRecord provider.","Service to deal with signed_entity (read &amp; write).","Signed entity storer trait","Service to get SignerRecord.","Signer record is the representation of a stored signer.","Simple SignerRecord provider.","SignerRegistration record is the representation of a …","Simple SignerRegistrationRecord provider.","Service to deal with signer_registration (read &amp; write).","Service to deal with signer (read &amp; write).","SingleSignature record is the representation of a stored …","Simple SingleSignatureRecord provider.","Service to deal with single_signature (read &amp; write).","Stake pool as read from Chain.","Simple StakePool provider.","Service to deal with stake pools (read &amp; write).","Query to update the epoch setting","Query to update the single_signature record","Aggregate verification key Note: used only if signature is …","Raw artifact (in JSON format).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Beacon used to produce the signed message","Block number of the transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Certificate id.","Certificate id for this signed entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all the OpenMessageRecord for the strictly previous …","","","","","","","","","","","","","","","","","Create a new certificate in the database.","Create many certificates at once in the database.","Create a new OpenMessageRecord in the database.","Create a new Single Signature in database","Create a new CardanoTransactionRecord in the database.","Create new CardanoTransactionRecords in the database.","Message creation datetime, it is set by the database.","Message creation datetime, it is set by the database.","Date and time when the signed_entity was created","Date and time when the signer was created.","Date and time when the single_signature was created","Delete the epoch setting data given the Epoch","Delete the epoch setting data given the Epoch","Delete the certificates with with the given ids.","Delete all the given certificates from the database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch of creation of the certificate.","Epoch","Epoch","","","","","","","","","","","","","Message expiration datetime, if it exists.","Message expiration datetime, if it exists.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return all stored records.","Get all CertificateRecords.","Get all EpochSettingRecords.","Get all SignedEntityRecords.","Get all SignerRecords.","","Get all SignerRegistrationRecords.","Get all SingleSignatureRecords.","Return all the CardanoTransactionRecords in the database …","Get CertificateRecords for a given certificate id.","Get record for a given <code>certificate_id</code>.","Get records for a list of given <code>certificates_ids</code>.","Get CertificateRecords for a given Epoch.","Get EpochSettingRecords for a given Epoch for given …","Get SignerRegistrationRecords for a given Epoch.","Get StakePools for a given Epoch for given pool_ids.","Get SingleSignatureRecords for a given Open Message id.","Get SignedEntityRecords for a given signed_entity id.","Get SignedEntityRecords for a given signed entity type.","Get SignerRecords for a given signer id.","Get SignerRegistrationRecords for given signer id and …","Return the certificate corresponding to the given hash if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the expired OpenMessageRecord for the given Epoch …","Get last signed entities by signed entity type","","Return the latest certificates.","Return the first certificate signed per epoch as the …","Return the latest OpenMessageRecord for the given Epoch …","Return an open message with its associated single …","","","","","","","","","","","","Get signed entities type by certificates ids","","Get signed entity type","","Get signed entity type by certificate id","","","","Return the CardanoTransactionRecord for the given …","Return all the CardanoTransactionRecords in the database …","","","","","","","","","","","","","Immutable file number of the transaction","Create many signers at once in the database, their …","Import a signer in the database, its last_registered_at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was initiated","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Has this open message been converted into a certificate?","Has this message been converted into a Certificate?","Has this open message expired","Has this open message expired","Date and time when the signer registered for the last time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lottery indexes","Message that is signed.","Instantiate service","Create a new provider","Create a new instance","Create a new instance","Instantiate a new repository","Create a new provider","Create a new instance","Create a new instance","Create a new EpochSetting service","Instanciate service","Create a new provider","Create a new instance","Create a new SignedEntityStoreAdapter service","Create a new provider","Create a new instance","Create a new instance","Create a new SignerStore service","Create a new provider","Create a new instance","Create a new instance","Create a new SignerRegistrationStore service","Create a new provider","Create a new instance","Create a new SingleSignatureStoreAdapter service","Create a new provider","Create a new instance","Create a new instance","Create a new StakePool service","OpenMessage unique identifier","OpenMessage unique identifier","Open message id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parent Certificate id.","","Pool ticker of the signer.","Structured message that is used to create the signed …","Message used by the Mithril Protocol","Message used by the Mithril Protocol","Protocol parameters.","Protocol Version (semver)","Prune the epoch setting data older than the given epoch.","Prune the epoch setting data older than the given epoch.","Prune the stake pools data older than the given epoch.","","","Registration epoch setting id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was sealed","Signature of the certificate. Note: multi-signature if …","The STM single signature of the message","Signed entity id.","Type of message","Type of message","Signed entity type.","Signer id.","Signer id.","The list of the active signers with their stakes","associated single signatures","Store a signed entity","","","","","","","","","","","Unique hash of the transactionpdates an OpenMessageRecord in the database.","Perform an update for all the given signed entities.","","Date and time when the signer was updated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dependencies container builder","Error that can occure during dependencies initialization …","DependencyManager handles the dependencies","EpochServiceWrapper wraps a EpochService","Contains the error value","The dependency has reached a state where dependencies are …","Unrecoverable system initialization failure","Configuration parameter missing for initialization.","MultiSignerWrapper wraps a MultiSigner","Contains the success value","Result with the DependenciesBuilderError error.","API Version provider","API Version provider","","","","Beacon provider service.","Beacon provider service.","","","","","","","Create CertifierService service","Return an unconfigured DependencyContainer","build HTTP message service","build Prover service","Create TickerService instance.","Cardano CLI Runner for the ChainObserver","","","","Certificate pending store.","Certificate pending store.","Certificate repository.","Certificate store.","Certificate verifier service.","Certificate verifier service.","Certifier service","Certifier Service","Chain observer service.","Chain observer service.","","","","","","","Configuration structure.","Configuration parameters","Create the AggregatorRunner","Create dependencies for the EventStore task.","Create dependencies for genesis commands","Create the HTTP route instance","Create a SignersImporter instance.","","","","","","","Digester service.","Digester service.","","","","Epoch service.","Epoch service","Era checker service","Era checker service","Era reader service","Era reader service","Adapter for EraReader","Event Transmitter Service","Event Transmitter Service","Event transmitter Channel Sender endpoint","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Genesis signature verifier service.","Genesis signature verifier service.","APIVersionProvider service","Return a BeaconProvider instance.","Return a CardanoCliRunner","Get a configured CertificatePendingStore.","Get a configured CertificateRepository.","CertificateVerifier service.","CertifierService service","Return a ChainObserver","EpochService service","EraReader service","EraReader service","TransmitterService service","Return the channel receiver setup for the EventStore. …","Return the EventMessage channel sender.","Return a ProtocolGenesisVerifier","Get an ImmutableFileDigestCacheProvider","Immutable digester.","Return a ImmutableFileObserver instance.","This method does not cache the logger since it is managed …","MessageService service","MithrilSignerRegisterer service","Get a configured multi signer","Get a configured OpenMessageRepository.","Get a configured ProtocolParametersStorer.","ProverService service","SignableBuilderService service","SignedEntityService service","SignedEntityStorer service","SignerStore service","Get a SnapshotUploader","Snapshotter service.","Get SQLite connection","Get SQLite connection for the cardano transactions store","StakeDistributionService service","Return a StakePoolStore","StakeDistributionService service","Transaction parser.","Transaction repository.","Transaction store.","Get a configured VerificationKeyStorer.","Immutable cache provider service.","Immutable file digester service.","Immutable file observer service.","Immutable file observer service.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","HTTP Message service","HTTP message service","Signer registerer service","Multisigner service.","Multisigner service.","Create a new clean dependency builder","Open message repository.","Open message store.","","","","","","","Protocol parameter store.","Protocol parameter store.","Prover service","Prover service","","","","","","","Signable Builder Service","Signable Builder Service","Signed Entity Service","Signed Entity Service","Signed Entity storer","Signed Entity storer","Signer getter service","Signer Recorder","Signer registerer service","Signer registration round opener service","Signer Store","Snapshot uploader service.","Snapshot uploader service.","Snapshotter service.","Snapshotter service.","SQLite database connection","SQLite database connection This is not a real service but …","SQLite database connection for Cardano transactions","Stake Distribution Service","Stake Distribution Service","Stake Store used by the StakeDistributionService It shall …","Stake Store used by the StakeDistributionService It shall …","Ticker Service (TODO: remove BeaconProvider)","Ticker Service","","Cardano transactions parser.","Cardano transactions parser.","Cardano transactions repository.","Cardano transactions SQLite database connection","Cardano transactions store.","Cardano transactions store.","","","","","","","","","","","","","","","","Remove the dependencies builder from memory to release Arc …","Verification key store.","Verification key store.","","","","","","","","","","Eventual nested error","Error context message","OpenMessage","Message structure of a signer registration","Message structure of signer registrations for an epoch.","Message structure of a known signer","Message structure of signers known by the aggregator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message creation datetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch","","","","","","","","","","","","","","","","","","","","","","","","","Message expiration datetime, if it exists.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gather all signers party_id for this open message","True if the signer have registered at least once","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Has this message been converted into a Certificate?","Has this open message expired","","","","","","","","","","","Cardano network of the aggregator","Build a SignerRegistrationsMessage from a list of signers …","","","","","","","","","","","The registered signer party id","The signer party id","The signer pool ticker","Message used by the Mithril Protocol","The epoch at which the registration was sent.","The signer registrations","","","","","","","","","","","","","","","Type of message","Known signers","The epoch at which the registration was able to send …","associated single signatures","The registered signer stake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event persisted in the Event Store.","Event that is sent from a thread to be persisted.","The EventPersister is the adapter to persist EventMessage …","EventMessage receiver service.","The transmitter service is used to allow inter process …","the <code>action</code> of the original EventMessage this Event …","The action represent the action that is going to be …","forge a new instance adding the given header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the <code>content</code> of the original EventMessage this Event …","JSON content of the message, its type is declared in the …","timestamp of event creation in the database.","","","","","","","","","","","","","","","","Sequential number of the event, this is set by the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Clone the internal transmitter and return it.","Headers","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Instanciate an EventPersister","Instanciate the EventMessage receiver service.","Instanciate a new Service by passing a MPSC transmitter.","Instanciate a new EventMessage.","","","","","","","","","","","Save an EventMessage in the database.","Launch the service. It runs until all the transmitters are …","","","","","","","","","","","Craft and send an EventMessage given the serializable data.","the <code>source</code> of the original EventMessage this Event …","The source of the message shall be composed of the name of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The open message is already certified, no more single …","The stake distribution compute is in progress for this …","No certificate for this epoch","CertifierService","Errors dedicated to the CertifierService.","Could not verify certificate chain because could not find …","Service that aggregates all data that don’t change in a …","Errors dedicated to the CertifierService.","The open message is expired, no more single signatures may …","HTTP Message service trait.","Error related to the MessageService","Mithril CertifierService implementation","Implementation of the epoch service.","Implementation of the MessageService","Mithril prover","Mithril ArtifactBuilder Service","Implementation of the stake distribution service.","MithrilTickerService","No parent certificate could be found, this certifier …","OpenMessage not found.","Raised when service has not computed data for its current …","Raised when service has not collected data at least once.","There is no current PendingCertificate","Prover service is the cryptographic engine in charge of …","ArtifactBuilder Service trait","Responsible of synchronizing with Cardano stake …","Errors related to the StakeDistributionService.","Critical errors cannot be recovered.","Service trait with consistent business oriented API.","Transactions retriever","The stake distribution for the given Epoch is not …","One of the data that is held for an epoch duration by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the cryptographic proofs for the given transactions","","Create artifact for a signed entity type and a certificate","","Create a certificate if possible. If the pointed open …","","Create an open message at the given beacon. If the open …","","Get aggregate verification key for current epoch","","Get protocol parameters used in current epoch (associated …","","Get signers with stake for the current epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the current epoch for which the data stored in this …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the list of the last Cardano transactions set …","","Return the information regarding the Cardano transactions …","","Returns a certificate from its hash.","","Return the message representation of the last N …","","Return the message representation of a certificate if it …","","Return the current Epoch as read from the chain.","","Return the current Beacon used for …","","Return the last signed Cardano Transaction Commitment.","","Return a list of signed Mithril stake distribution order …","","Return a list of signed snapshots order by creation date …","","Returns the list of the latest created certificates.","","Return the list of the last Mithril stake distributions …","","Return the information regarding the MSD for the given …","","Return the open message at the given Beacon. If the …","","Return a signed Mithril stake distribution","","Return a signed snapshot","","Return the list of the last signed snapshots. The limit of …","","Return the information regarding the given snapshot","","Return the stake distribution fot the given epoch.","","Get transactions up to given beacon using chronological …","Inform the certifier I have detected a new epoch, it may …","Inform the service a new epoch has been detected, telling …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Mark the open message if it has expired.","","instantiate the service","Create a new service instance","Constructor","Create a new Mithril prover","MithrilSignedEntityService factory","Create a new service instance","Instantiate a new service","Get next aggregate verification key for next epoch","","Get next protocol parameters used in next epoch …","","Get signers with stake for the next epoch","","","","","","","","","","","","","","","","","","","","","","","","Inform the service that it can precompute data for its …","","Get the protocol multi signer for the current epoch","","Add a new single signature for the open message at the …","","","","","","","","","","","","","","","","","","","","","","","","Simple way to nest technical errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get upcoming protocol parameters used in next epoch …","","Insert future protocol parameters in the store based on …","","This launches the stake distribution computation if not …","","Verify the certificate chain and epoch gap. This will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch of the last issued certificate","Given current epoch","Eventual nested error","Error message"],"i":[0,0,0,0,0,0,0,55,0,0,56,41,0,0,0,0,0,55,55,55,0,10,56,15,56,41,10,0,0,0,0,0,8,0,41,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,8,0,0,56,0,0,56,15,0,216,217,7,7,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,9,9,9,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,9,9,12,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,12,19,22,23,24,7,12,7,7,7,30,23,24,7,23,24,23,24,34,36,23,24,23,24,41,42,9,0,7,9,12,13,43,44,11,12,0,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,8,9,10,11,9,12,8,9,10,11,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,23,24,0,9,12,14,8,10,11,14,15,8,8,8,10,10,10,11,11,11,14,14,14,15,15,15,9,9,12,8,9,10,11,0,7,7,9,12,7,8,9,10,11,12,41,41,13,55,55,14,15,56,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,41,13,55,55,14,15,15,56,56,7,7,8,9,61,23,24,23,24,23,24,62,22,44,43,9,64,9,66,67,9,42,66,67,7,64,64,23,24,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,13,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,23,24,41,11,9,9,7,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,23,24,9,13,9,36,24,42,22,43,81,82,44,61,67,86,13,9,11,19,22,23,24,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,85,23,24,9,66,67,79,62,22,61,9,12,84,92,42,86,86,9,7,9,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,61,23,24,64,66,67,8,9,10,11,9,12,9,12,0,9,9,12,95,82,44,9,9,12,9,12,12,9,12,9,12,41,55,56,9,7,8,9,10,11,12,13,14,15,41,55,56,218,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,0,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,23,24,7,7,23,24,23,24,99,43,100,81,7,34,36,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,218,216,217,36,24,42,22,43,100,81,82,44,61,67,86,92,7,8,9,10,11,12,41,13,55,14,15,56,9,219,220,221,219,220,221,222,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,108,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,105,104,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,105,108,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,103,104,105,106,107,108,109,110,111,104,105,106,107,108,109,110,111,112,112,103,113,114,114,106,107,108,109,111,118,121,122,112,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,105,106,107,104,105,119,106,108,109,110,111,124,106,106,106,106,107,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,104,105,105,119,106,106,107,108,109,110,111,124,126,127,128,129,130,131,132,133,114,127,129,129,127,128,132,134,133,129,129,130,132,112,112,127,138,122,128,140,118,129,141,130,142,143,132,144,121,133,145,134,146,147,127,138,122,128,140,118,129,141,130,142,143,132,144,121,133,145,134,146,147,103,148,149,112,112,103,103,104,105,119,106,107,108,109,110,111,124,151,148,149,148,149,148,149,152,153,114,114,114,152,104,105,119,106,107,108,109,110,111,124,104,131,131,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,105,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,106,107,106,107,109,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,111,105,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,106,107,111,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,105,131,109,105,106,107,105,105,118,121,147,152,131,111,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,151,153,152,105,105,111,108,106,107,108,109,111,105,107,148,149,114,104,105,106,107,108,109,110,111,104,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,103,148,149,109,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,114,127,138,122,112,128,140,118,151,103,129,141,149,130,142,143,131,132,144,121,152,133,145,113,134,146,147,153,104,105,119,106,107,108,109,110,111,124,0,0,0,0,158,169,169,169,0,158,0,156,75,156,75,169,156,75,156,75,169,156,75,169,156,156,156,156,156,156,156,75,169,156,75,156,75,156,75,156,75,156,75,156,75,169,156,75,169,75,156,156,156,156,156,156,156,75,169,156,75,169,156,75,156,75,169,156,75,156,75,156,75,156,156,75,156,169,169,156,75,169,169,169,156,75,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,75,156,75,169,156,75,169,156,75,169,156,75,169,156,75,156,156,75,156,156,75,156,75,169,156,75,169,156,75,156,75,156,75,169,156,75,169,156,75,156,75,156,75,75,75,75,75,156,156,75,156,75,156,75,75,156,75,156,75,156,75,169,156,75,156,156,156,75,156,75,169,156,75,169,156,75,169,156,75,169,156,75,169,156,156,75,156,75,169,156,75,169,156,75,169,223,223,0,0,0,0,0,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,191,192,193,194,191,192,193,194,35,191,192,193,194,35,35,191,192,193,194,35,35,35,191,191,191,192,192,192,193,193,193,194,194,194,191,192,193,194,35,35,191,192,193,194,35,35,35,191,192,193,194,35,193,35,191,192,193,194,35,191,192,193,194,35,35,35,191,192,193,194,35,191,192,193,194,194,191,35,191,192,193,194,35,191,192,193,194,192,193,193,35,191,191,35,191,192,193,194,35,191,192,193,194,191,192,193,194,35,194,191,35,192,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,35,191,192,193,194,0,0,0,0,0,198,176,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,176,176,198,176,198,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,176,198,199,162,177,176,198,177,176,198,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,199,162,177,176,198,199,162,177,176,198,199,162,177,176,199,162,198,199,162,177,176,198,199,162,177,176,177,198,176,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,198,199,162,177,176,207,210,207,0,0,207,0,0,207,0,0,0,0,0,0,0,0,0,207,207,208,208,209,0,0,0,0,210,0,0,210,208,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,160,201,187,202,157,203,157,203,204,206,204,206,204,206,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,204,206,207,207,208,208,209,209,210,210,203,206,211,201,202,213,212,207,208,209,210,159,211,159,211,157,203,159,211,159,211,161,212,161,212,187,202,187,202,187,202,157,203,159,211,159,211,157,203,187,202,187,202,159,211,159,211,188,213,214,157,204,203,206,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,157,203,203,206,211,201,202,213,212,204,206,204,206,204,206,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,204,206,204,206,157,203,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,210,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,204,206,204,206,188,213,157,203,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,203,206,211,201,202,213,212,207,208,209,210,224,224,225,225],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[7,[[18,[17]]]],[12,[[18,[17]]]],[19,[[21,[[18,[20]]]]]],[22,[[21,[[18,[20]]]]]],[23,[[21,[[18,[20]]]]]],[24,[[21,[[18,[20]]]]]],[7,[[29,[[27,[25,26]],28]]]],[12,[[29,[[27,[25,26]],28]]]],[[],5],0,[[],5],[[30,-1,31],[[21,[[18,[20]]]]],32],[[23,33],[[21,[[18,[20]]]]]],[[24,33],[[21,[[18,[20]]]]]],0,[[23,33,31],[[21,[[18,[20]]]]]],[[24,33,31],[[21,[[18,[20]]]]]],[[23,33],[[21,[[18,[20]]]]]],[[24,33],[[21,[[18,[20]]]]]],[[34,35],[[21,[[18,[20]]]]]],[[36,35],[[21,[[18,[20]]]]]],[[23,37,33],[[21,[[18,[20]]]]]],[[24,37,33],[[21,[[18,[20]]]]]],[[23,33,38],[[21,[[18,[20]]]]]],[[24,33,38],[[21,[[18,[20]]]]]],[[39,[6,[40]]],41],[42,[[29,[16,41]]]],0,0,0,0,0,0,[[],43],[[],44],[[],11],[[],12],0,[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[29,[8]]],46],[-1,[[29,[9]]],46],[-1,[[29,[10]]],46],[-1,[[29,[11]]],46],0,0,[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[23,[[21,[[18,[20]]]]]],[24,[[21,[[18,[20]]]]]],0,0,0,0,[[8,8],49],[[10,10],49],[[11,11],49],[[14,14],49],[[15,15],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],0,0,0,[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],0,[7,[[51,[16]]]],[[],52],[[],52],[[],52],[[7,53],54],[[8,53],54],[[9,53],54],[[10,53],54],[[11,53],54],[[12,53],54],[[41,53],54],[[41,53],54],[[13,53],54],[[55,53],54],[[55,53],54],[[14,53],54],[[15,53],54],[[56,53],54],[[56,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[57,55],[-1,-1,[]],[11,15],[-1,-1,[]],[58,56],[-1,-1,[]],[59,[[29,[7,60]]]],[59,[[29,[7,60]]]],[39,[[29,[8,-1]]],[]],0,[61,[[51,[[6,[1]]]]]],[23,[[21,[[18,[20]]]]]],[24,[[21,[[18,[20]]]]]],[[23,37],[[21,[[18,[20]]]]]],[[24,37],[[21,[[18,[20]]]]]],[[23,33],[[21,[[18,[20]]]]]],[[24,33],[[21,[[18,[20]]]]]],[62,[[21,[[18,[20]]]]]],[22,[[21,[[18,[20]]]]]],[44,[[51,[[6,[0]]]]]],[43,[[51,[[6,[25]]]]]],[9,[[51,[63]]]],[[64,65],[[21,[[18,[20]]]]]],[9,25],[[66,65],[[21,[[18,[20]]]]]],[[67,65],[[21,[[18,[20]]]]]],[9,68],[42,25],[[66,65],[[21,[[18,[20]]]]]],[[67,65],[[21,[[18,[20]]]]]],[[],[[6,[69]]]],[[64,65,70],[[21,[[18,[20]]]]]],[[64,65,70],[[21,[[18,[20]]]]]],[[23,65],[[21,[[18,[20]]]]]],[[24,65],[[21,[[18,[20]]]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,37],[[21,[[18,[20]]]]]],[[24,37],[[21,[[18,[20]]]]]],[[39,[6,[40]]],41],0,[[9,37],[[51,[[71,[33]]]]]],[9,[[51,[[71,[72]]]]]],[7,73],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,33],[[21,[[18,[20]]]]]],[[24,33],[[21,[[18,[20]]]]]],0,0,0,[74,36],[[[76,[75]]],24],[[77,[6,[0]],[76,[23]]],[[29,[42,41]]]],[[[76,[78]],[76,[66]],[76,[79]],[6,[80]]],22],[[],43],[[[18,[0]],25,49],81],[[68,68,15],[[51,[82]]]],[[],44],[[[18,[83]]],61],[[[18,[83]]],67],[[[76,[84]],[76,[85]]],86],[[80,63,87],13],[[],9],0,[[19,65,88],[[21,[[18,[20]]]]]],[[22,65,88],[[21,[[18,[20]]]]]],[[23,37],[[21,[[18,[20]]]]]],[[24,37],[[21,[[18,[20]]]]]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[[85,[90,[89,[6,[25]]]]],[[21,[[18,[20]]]]]],[23,[[21,[[18,[20]]]]]],[24,[[21,[[18,[20]]]]]],0,[[66,65],[[21,[[18,[20]]]]]],[[67,65],[[21,[[18,[20]]]]]],[[79,25],[[21,[[18,[20]]]]]],[[62,65,91],[[21,[[18,[20]]]]]],[[22,65,91],[[21,[[18,[20]]]]]],[61,[[51,[[6,[1]]]]]],0,0,[84,[[21,[[18,[20]]]]]],[92,[[21,[[18,[20]]]]]],[42,[[29,[16,41]]]],[86,[[51,[16]]]],[[86,77],16],0,0,[9,[[6,[80]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,1],[[51,[16]]]],[[23,1],[[21,[[18,[20]]]]]],[[24,1],[[21,[[18,[20]]]]]],[[64,65,70],[[21,[[18,[20]]]]]],[[66,65,93],[[21,[[18,[20]]]]]],[[67,65,93],[[21,[[18,[20]]]]]],[[8,-1],29,94],[[9,-1],29,94],[[10,-1],29,94],[[11,-1],29,94],0,0,0,0,0,0,0,0,[[95,39],[[51,[0]]]],[[82,39],[[51,[0]]]],[[44,39],[[51,[0]]]],0,0,0,0,0,0,0,0,0,0,[41,[[6,[96]]]],[55,[[6,[96]]]],[56,[[6,[96]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[97,[[51,[91]]]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,37],[[21,[[18,[20]]]]]],[[24,37],[[21,[[18,[20]]]]]],[[7,59],[[29,[16,60]]]],[[7,59],[[29,[16,60]]]],[23,[[21,[[18,[20]]]]]],[24,[[21,[[18,[20]]]]]],[[23,37],[[21,[[18,[20]]]]]],[[24,37],[[21,[[18,[20]]]]]],[[99,87],[[21,[[18,[20]]]]]],[[43,87],[[21,[[18,[20]]]]]],[[100,87],[[21,[[18,[20]]]]]],[[81,87],[[21,[[18,[20]]]]]],0,[[34,38,101],[[21,[[18,[20]]]]]],[[36,38,101],[[21,[[18,[20]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[71,[102]]]],[[],[[71,[102]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[103,65],[[51,[45]]]],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[112,31],[[51,[31]]]],[[112,[71,[31]]],[[51,[[71,[31]]]]]],[[103,65,33,38],[[51,[106]]]],[[113,101,106],[[51,[111]]]],[[114,115,116,117],[[51,[[6,[104]]]]]],[[114,[71,[104]]],[[51,[[71,[104]]]]]],0,0,0,0,0,[[118,65],[[51,[[120,[119]]]]]],[[121,65],[[51,[[120,[110]]]]]],[[122,[123,[39]]],[[51,[[120,[105]]]]]],[[112,[123,[31]]],[[51,[16]]]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],0,0,0,[[104,104],49],[[105,105],49],[[119,119],49],[[106,106],49],[[108,108],49],[[109,109],49],[[110,110],49],[[111,111],49],[[124,124],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],0,0,[[104,53],54],[[105,53],54],[[119,53],54],[[106,53],54],[[107,53],54],[[108,53],54],[[109,53],54],[[110,53],54],[[111,53],54],[[124,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[125,104],[31,105],[-1,-1,[]],[-1,-1,[]],[107,106],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[126,[[21,[[18,[20]]]]]],[127,[[51,[[120,[105]]]]]],[128,[[51,[[120,[119]]]]]],[129,[[51,[[120,[108]]]]]],[130,[[51,[[120,[109]]]]]],[131,[[21,[[18,[20]]]]]],[132,[[51,[[120,[110]]]]]],[133,[[51,[[120,[111]]]]]],[114,[[51,[[71,[104]]]]]],[[127,39],[[51,[[120,[105]]]]]],[[129,39],[[51,[[120,[108]]]]]],[[129,[123,[39]]],[[51,[[120,[108]]]]]],[[127,65],[[51,[[120,[105]]]]]],[[128,65],[[51,[[120,[119]]]]]],[[132,65],[[51,[[120,[110]]]]]],[[134,65],[[51,[[120,[124]]]]]],[[133,135],[[51,[[120,[111]]]]]],[[129,39],[[51,[[120,[108]]]]]],[[129,72],[[51,[[120,[108]]]]]],[[130,25],[[51,[[120,[109]]]]]],[[132,25,65],[[51,[[120,[110]]]]]],[[112,39],[[51,[[6,[-1]]]]],[[136,[105]]]],[[112,39],[[21,[[18,[20]]]]]],[127,137],[138,137],[122,137],[128,139],[140,139],[118,139],[129,139],[141,139],[130,139],[142,139],[143,139],[132,139],[144,139],[121,139],[133,139],[145,139],[134,139],[146,139],[147,139],[[127,39],25],[[138,39],25],[[122,39],25],[[128,39],25],[[140,39],25],[[118,39],25],[[129,39],25],[[141,39],25],[[130,39],25],[[142,39],25],[[143,39],25],[[132,39],25],[[144,39],25],[[121,39],25],[[133,39],25],[[145,39],25],[[134,39],25],[[146,39],25],[[147,39],25],[[103,33],[[51,[[6,[106]]]]]],[[148,72,45],[[21,[[18,[20]]]]]],[[149,72,45],[[21,[[18,[20]]]]]],[[112,45],[[51,[[71,[-1]]]]],[[136,[105]]]],[[112,65],[[51,[[6,[-1]]]]],[[136,[105]]]],[[103,33],[[51,[[6,[106]]]]]],[[103,33],[[51,[[6,[107]]]]]],[[],150],[[],150],[[],150],[[],150],[[],150],[[],150],[[],150],[[],150],[[],150],[[],150],[[151,65],[[21,[[18,[20]]]]]],[[148,[123,[39]]],[[21,[[18,[20]]]]]],[[149,[123,[39]]],[[21,[[18,[20]]]]]],[[148,39],[[21,[[18,[20]]]]]],[[149,39],[[21,[[18,[20]]]]]],[[148,39],[[21,[[18,[20]]]]]],[[149,39],[[21,[[18,[20]]]]]],[[152,65],[[21,[[18,[20]]]]]],[[153,65],[[21,[[18,[20]]]]]],[[114,115],[[51,[[6,[104]]]]]],[[114,37],[[51,[[71,[104]]]]]],[[114,37],[[21,[[18,[20]]]]]],[[152,65],[[21,[[18,[20]]]]]],[154,[[29,[104,155]]]],[154,[[29,[105,155]]]],[154,[[29,[119,155]]]],[154,[[29,[106,155]]]],[154,[[29,[107,155]]]],[154,[[29,[108,155]]]],[154,[[29,[109,155]]]],[154,[[29,[110,155]]]],[154,[[29,[111,155]]]],[154,[[29,[124,155]]]],0,[[131,[90,[25,[6,[25]]]]],[[51,[16]]]],[[131,25,[6,[25]]],[[51,[16]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[76,[139]]],114],[137,127],[137,138],[137,122],[[[76,[137]]],112],[139,128],[139,140],[139,118],[[[76,[139]],[6,[80]]],151],[[[76,[139]]],103],[139,129],[139,141],[[[76,[139]]],149],[139,130],[139,142],[139,143],[[[76,[139]]],131],[139,132],[139,144],[139,121],[[[76,[139]]],152],[139,133],[139,145],[[[76,[139]]],113],[139,134],[139,146],[139,147],[[[76,[139]],[6,[80]]],153],0,0,0,[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],0,[[131,[90,[89,[6,[25]]]]],[[21,[[18,[20]]]]]],0,0,0,0,0,0,[[118,65],[[51,[[120,[119]]]]]],[[121,65],[[51,[[120,[110]]]]]],[[147,65],[[51,[[120,[124]]]]]],[[152,65],[[21,[[18,[20]]]]]],[[131,25],[[21,[[18,[20]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[151,65,70],[[21,[[18,[20]]]]]],[[153,65,88],[[21,[[18,[20]]]]]],[[152,65,93],[[21,[[18,[20]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[148,108],[[21,[[18,[20]]]]]],[[149,108],[[21,[[18,[20]]]]]],[[114,[123,[125]]],[[21,[[18,[20]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,106],[[51,[106]]]],[[148,[71,[108]]],[[21,[[18,[20]]]]]],[[149,[71,[108]]],[[21,[[18,[20]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,[[158,[[76,[157]]]]]],[156,[[158,[75]]]],[156,[[158,[[76,[159]]]]]],[156,[[158,[[76,[160]]]]]],[156,[[158,[[76,[161]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],0,0,[156,[[158,[42]]]],[156,[[158,[162]]]],[156,[[158,[0]]]],[156,[[158,[[0,[[167,[],[[163,[[16,[[0,[164]]]]]],[165,[166]]]],168]]]]]],[[156,39],[[158,[86]]]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],0,0,[45,16],[45,16],[45,16],0,0,0,0,0,0,0,0,0,0,[[169,53],54],[[169,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,169],[40,169],0,0,[156,[[158,[[76,[170]]]]]],[156,[[158,[[76,[171]]]]]],[156,[[158,[[18,[172]]]]]],[156,[[158,[[76,[61]]]]]],[156,[[158,[[76,[112]]]]]],[156,[[158,[[76,[173]]]]]],[156,[[158,[[76,[157]]]]]],[156,[[158,[[76,[78]]]]]],[156,[[158,[74]]]],[156,[[158,[[76,[174]]]]]],[156,[[158,[[76,[175]]]]]],[156,[[158,[[76,[[177,[176]]]]]]]],[156,[[158,[[178,[176]]]]]],[156,[[158,[[179,[176]]]]]],[156,[[158,[[76,[180]]]]]],[156,[[158,[[76,[181]]]]]],[156,[[158,[[76,[182]]]]]],[156,[[158,[[76,[183]]]]]],[156,[[158,[184]]]],[156,[[158,[[76,[159]]]]]],[156,[[158,[[76,[22]]]]]],[156,[[158,[[76,[[185,[34]]]]]]]],[156,[[158,[[76,[103]]]]]],[156,[[158,[[76,[64]]]]]],[156,[[158,[[76,[160]]]]]],[156,[[158,[[76,[186]]]]]],[156,[[158,[[76,[187]]]]]],[156,[[158,[[76,[148]]]]]],[156,[[158,[[76,[131]]]]]],[156,[[158,[[76,[99]]]]]],[156,[[158,[[76,[95]]]]]],[156,[[158,[[76,[139]]]]]],[156,[[158,[[76,[139]]]]]],[156,[[158,[[76,[188]]]]]],[156,[[158,[[76,[153]]]]]],[156,[[158,[[76,[161]]]]]],[156,[[158,[[76,[189]]]]]],[156,[[158,[[76,[114]]]]]],[156,[[158,[[76,[190]]]]]],[156,[[158,[[76,[66]]]]]],0,0,0,0,[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[9,156],0,0,[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,25,[]],0,0,0,0,0,0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[35,35],[191,191],[192,192],[193,193],[194,194],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[[],191],[[],192],[[],193],[[],194],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[29,[191]]],46],[-1,[[29,[192]]],46],[-1,[[29,[193]]],46],[-1,[[29,[194]]],46],[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[[-1,47],[[29,[16,48]]],[]],[45,16],[45,16],[45,16],[45,16],[45,16],0,[[35,35],49],[[191,191],49],[[192,192],49],[[193,193],49],[[194,194],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],[[-1,47],[[29,[16,50]]],[]],0,[[35,53],54],[[191,53],54],[[192,53],54],[[193,53],54],[[194,53],54],[-1,-1,[]],[106,35],[107,35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[35,[[71,[89]]]],0,[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[65,[71,[93]]],191],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[191,-1],29,94],[[192,-1],29,94],[[193,-1],29,94],[[194,-1],29,94],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[176,39,39],176],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[176,176],[[-1,-2],16,[],[]],0,0,0,[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,16],[45,16],[45,16],[45,16],[45,16],0,[[176,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],150],[[[177,[-1]]],[[179,[-1]]],[195,196,197]],0,[154,[[29,[198,155]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[139]]],199],[[[178,[176]]],162],[[[179,[-1]]],[[177,[-1]]],[195,196,197]],[[39,39,39],176],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[[199,176],[[51,[198]]]],[[162,[6,[68]]],[[51,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[177,[176]],39,39,-1,[71,[[16,[39,39]]]]],[[29,[16,25]]],200],0,0,[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[160,37,[123,[115]]],[[21,[[18,[20]]]]]],[[201,37,[123,[115]]],[[21,[[18,[20]]]]]],[[187,33,31],[[21,[[18,[20]]]]]],[[202,33,31],[[21,[[18,[20]]]]]],[[157,33],[[21,[[18,[20]]]]]],[[203,33],[[21,[[18,[20]]]]]],[[157,33,38],[[21,[[18,[20]]]]]],[[203,33,38],[[21,[[18,[20]]]]]],[204,[[51,[205]]]],[206,[[51,[205]]]],[204,[[51,[70]]]],[206,[[51,[70]]]],[204,[[51,[[71,[93]]]]]],[206,[[51,[[71,[93]]]]]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[45,16],[204,[[51,[65]]]],[206,[[51,[65]]]],[[207,53],54],[[207,53],54],[[208,53],54],[[208,53],54],[[209,53],54],[[209,53],54],[[210,53],54],[[210,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[159,45],[[21,[[18,[20]]]]]],[[211,45],[[21,[[18,[20]]]]]],[[159,39],[[21,[[18,[20]]]]]],[[211,39],[[21,[[18,[20]]]]]],[[157,39],[[21,[[18,[20]]]]]],[[203,39],[[21,[[18,[20]]]]]],[[159,45],[[21,[[18,[20]]]]]],[[211,45],[[21,[[18,[20]]]]]],[[159,39],[[21,[[18,[20]]]]]],[[211,39],[[21,[[18,[20]]]]]],[161,[[21,[[18,[20]]]]]],[212,[[21,[[18,[20]]]]]],[161,[[21,[[18,[20]]]]]],[212,[[21,[[18,[20]]]]]],[187,[[21,[[18,[20]]]]]],[202,[[21,[[18,[20]]]]]],[[187,45],[[21,[[18,[20]]]]]],[[202,45],[[21,[[18,[20]]]]]],[[187,45],[[21,[[18,[20]]]]]],[[202,45],[[21,[[18,[20]]]]]],[[157,45],[[21,[[18,[20]]]]]],[[203,45],[[21,[[18,[20]]]]]],[[159,45],[[21,[[18,[20]]]]]],[[211,45],[[21,[[18,[20]]]]]],[[159,39],[[21,[[18,[20]]]]]],[[211,39],[[21,[[18,[20]]]]]],[[157,33],[[21,[[18,[20]]]]]],[[203,33],[[21,[[18,[20]]]]]],[[187,39],[[21,[[18,[20]]]]]],[[202,39],[[21,[[18,[20]]]]]],[[187,39],[[21,[[18,[20]]]]]],[[202,39],[[21,[[18,[20]]]]]],[[159,45],[[21,[[18,[20]]]]]],[[211,45],[[21,[[18,[20]]]]]],[[159,39],[[21,[[18,[20]]]]]],[[211,39],[[21,[[18,[20]]]]]],[[188,65],[[21,[[18,[20]]]]]],[[213,65],[[21,[[18,[20]]]]]],[[214,37],[[21,[[18,[20]]]]]],[[157,65],[[21,[[18,[20]]]]]],[[204,65],[[21,[[18,[20]]]]]],[[203,65],[[21,[[18,[20]]]]]],[[206,65],[[21,[[18,[20]]]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[157,33],[[21,[[18,[20]]]]]],[[203,33],[[21,[[18,[20]]]]]],[[[76,[103]],[76,[113]],[76,[112]],[76,[173]],[76,[180]],[76,[[185,[34]]]],[76,[161]],74,184],203],[[70,[76,[64]],[76,[66]]],206],[[[76,[112]],[76,[148]]],211],[[[76,[214]]],201],[[[76,[148]],[76,[30]],[76,[30]],[76,[30]]],202],[[[76,[153]],[76,[78]]],213],[[[76,[78]],[76,[183]],63],212],[204,[[51,[205]]]],[206,[[51,[205]]]],[204,[[51,[70]]]],[206,[[51,[70]]]],[204,[[51,[[71,[93]]]]]],[206,[[51,[[71,[93]]]]]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[-1,[[16,[-2,49]]],[],[]],[204,[[21,[[18,[20]]]]]],[206,[[21,[[18,[20]]]]]],[204,[[51,[215]]]],[206,[[51,[215]]]],[[157,33,101],[[21,[[18,[20]]]]]],[[203,33,101],[[21,[[18,[20]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,[[18,[210]]]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[40,[[29,[210,-1]]],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,98,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,[[51,[70]]]],[206,[[51,[70]]]],[204,[[21,[[18,[20]]]]]],[206,[[21,[[18,[20]]]]]],[188,[[21,[[18,[20]]]]]],[213,[[21,[[18,[20]]]]]],[[157,65],[[21,[[18,[20]]]]]],[[203,65],[[21,[[18,[20]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0],"c":[],"p":[[5,"CertificatePending",3390],[5,"CertificatePendingMessage",3391],[5,"EpochSettings",3392],[5,"EpochSettingsMessage",3393],[5,"Command",3394],[6,"Option",3395],[5,"MainOpts",0],[6,"ExecutionEnvironment",0],[5,"Configuration",0],[6,"SnapshotUploaderType",0],[5,"ZstandardCompressionParameters",0],[5,"DefaultConfiguration",0],[5,"AggregatorConfig",0],[5,"SignerRegistrationRound",0],[6,"SnapshotterCompressionAlgorithm",0],[1,"tuple"],[10,"Source",3396],[5,"Box",3397],[10,"SignerRegistrationRoundOpener",0],[10,"Future",3398],[5,"Pin",3399],[5,"MithrilSignerRegisterer",0],[10,"AggregatorRunnerTrait",0],[5,"AggregatorRunner",0],[5,"String",3400],[5,"Value",3401],[8,"Map",3402],[6,"ConfigError",3403],[6,"Result",3404],[10,"ArtifactBuilder",0],[5,"Certificate",3405],[10,"Beacon",3406],[6,"SignedEntityType",3407],[10,"MultiSigner",0],[5,"OpenMessage",2590],[5,"MultiSignerImpl",0],[5,"Beacon",3408],[5,"ProtocolMessage",3409],[1,"str"],[8,"StdError",3410],[6,"RuntimeError",0],[5,"AggregatorRuntime",0],[5,"DumbSnapshotUploader",0],[5,"DumbSnapshotter",0],[1,"usize"],[10,"Deserializer",3411],[10,"Serializer",3412],[6,"ErrorImpl",3412],[1,"bool"],[5,"Error",3413],[8,"StdResult",3410],[5,"StructDoc",3414],[5,"Formatter",3415],[8,"Result",3415],[6,"SignerRegistrationError",0],[6,"SnapshotError",0],[6,"ChainObserverError",3416],[5,"Error",3417],[5,"ArgMatches",3418],[8,"Error",3419],[5,"CertificatePendingStore",0],[10,"SignerRegisterer",0],[6,"CardanoNetwork",3420],[10,"ProtocolParametersStorer",0],[5,"Epoch",3421],[10,"VerificationKeyStorer",0],[5,"VerificationKeyStore",0],[5,"PathBuf",3422],[5,"Id",3423],[5,"ProtocolParameters",3424],[5,"Vec",3425],[6,"SignedEntityTypeDiscriminants",3407],[6,"Level",3426],[8,"EpochServiceWrapper",2364],[5,"DependencyContainer",2364],[5,"Arc",3427],[5,"Duration",3428],[10,"ChainObserver",3416],[10,"SignerRecorder",0],[1,"u64"],[5,"RemoteSnapshotUploader",0],[5,"CompressedArchiveSnapshotter",0],[10,"StoreAdapter",3429],[10,"SignersImporterRetriever",0],[10,"SignersImporterPersister",0],[5,"SignersImporter",0],[5,"Path",3422],[8,"StakeDistribution",3430],[8,"PartyId",3430],[5,"HashMap",3431],[5,"Signer",3432],[5,"CExplorerSignerRetriever",0],[5,"SignerWithStake",3432],[10,"Serializer",3433],[10,"Snapshotter",0],[10,"Error",3434],[5,"RegisterSignerMessage",3435],[5,"TypeId",3436],[10,"SnapshotUploader",0],[5,"LocalSnapshotUploader",0],[5,"SingleSignatures",3437],[5,"SqlMigration",3438],[5,"OpenMessageRepository",1081],[5,"CardanoTransactionRecord",1081],[5,"CertificateRecord",1081],[5,"OpenMessageRecord",1081],[5,"OpenMessageWithSingleSignaturesRecord",1081],[5,"SignedEntityRecord",1081],[5,"SignerRecord",1081],[5,"SignerRegistrationRecord",1081],[5,"SingleSignatureRecord",1081],[5,"CertificateRepository",1081],[5,"SingleSignatureRepository",1081],[5,"CardanoTransactionRepository",1081],[8,"TransactionHash",3439],[8,"BlockNumber",3439],[8,"ImmutableFileNumber",3430],[5,"DeleteEpochSettingProvider",1081],[5,"EpochSettingRecord",1081],[5,"EntityCursor",3440],[5,"DeleteSignerRegistrationRecordProvider",1081],[5,"DeleteCertificateProvider",1081],[1,"slice"],[5,"StakePool",1081],[5,"CardanoTransaction",3439],[10,"SignerGetter",1081],[5,"CertificateRecordProvider",1081],[5,"EpochSettingProvider",1081],[5,"SignedEntityRecordProvider",1081],[5,"SignerRecordProvider",1081],[5,"SignerStore",1081],[5,"SignerRegistrationRecordProvider",1081],[5,"SingleSignatureRecordProvider",1081],[5,"StakePoolProvider",1081],[5,"Uuid",3441],[10,"From",3442],[5,"ConnectionThreadSafe",3443],[5,"InsertCertificateRecordProvider",1081],[8,"SqliteConnection",3444],[5,"UpdateEpochSettingProvider",1081],[5,"InsertSignedEntityRecordProvider",1081],[5,"RegisterSignerRecordProvider",1081],[5,"ImportSignerRecordProvider",1081],[5,"InsertOrReplaceSignerRegistrationRecordProvider",1081],[5,"UpdateSingleSignatureRecordProvider",1081],[5,"InsertOrReplaceStakePoolProvider",1081],[5,"DeleteStakePoolProvider",1081],[10,"SignedEntityStorer",1081],[5,"SignedEntityStoreAdapter",1081],[5,"Projection",3445],[5,"EpochSettingStore",1081],[5,"SignerRegistrationStore",1081],[5,"StakePoolStore",1081],[5,"Row",3446],[6,"HydrationError",3447],[5,"DependenciesBuilder",2364],[10,"CertifierService",2966],[8,"Result",2364],[10,"MessageService",2966],[10,"ProverService",2966],[10,"TickerService",2966],[5,"EventStore",2807],[17,"Extract"],[10,"Reply",3448],[17,"Error"],[5,"Rejection",3449],[10,"Filter",3450],[10,"Clone",3451],[6,"DependenciesBuilderError",2364],[5,"APIVersionProvider",3452],[10,"BeaconProvider",3453],[5,"CardanoCliRunner",3454],[10,"CertificateVerifier",3455],[5,"EraChecker",3456],[5,"EraReader",3457],[5,"EventMessage",2807],[5,"TransmitterService",2807],[5,"UnboundedReceiver",3458],[5,"UnboundedSender",3458],[5,"ProtocolGenesisVerifier",3459],[10,"ImmutableFileDigestCacheProvider",3460],[10,"ImmutableDigester",3461],[10,"ImmutableFileObserver",3462],[5,"Logger",3426],[5,"RwLock",3463],[10,"SignableBuilderService",3464],[10,"SignedEntityService",2966],[10,"StakeDistributionService",2966],[10,"TransactionParser",3465],[10,"TransactionStore",3466],[5,"SignerRegistrationsMessage",2590],[5,"SignerRegistrationsListItemMessage",2590],[5,"SignerTickerListItemMessage",2590],[5,"SignersTickersMessage",2590],[10,"Debug",3415],[10,"Sync",3467],[10,"Send",3467],[5,"Event",2807],[5,"EventPersister",2807],[10,"Serialize",3433],[5,"MithrilProverService",2966],[5,"MithrilSignedEntityService",2966],[5,"MithrilCertifierService",2966],[10,"EpochService",2966],[8,"ProtocolAggregateVerificationKey",3468],[5,"MithrilEpochService",2966],[6,"CertifierServiceError",2966],[6,"EpochServiceError",2966],[6,"MessageServiceError",2966],[6,"StakePoolDistributionServiceError",2966],[5,"MithrilMessageService",2966],[5,"MithrilTickerService",2966],[5,"MithrilStakeDistributionService",2966],[10,"TransactionsRetriever",2966],[5,"MultiSigner",3469],[5,"ToCertificatePendingMessageAdapter",0],[5,"ToEpochSettingsMessageAdapter",0],[5,"FromRegisterSignerAdapter",0],[15,"KeepState",1068],[15,"Critical",1068],[15,"ReInit",1068],[15,"RegistrationRoundUnexpectedEpoch",1074],[15,"Initialization",2588],[15,"CertificateEpochGap",3386],[15,"Technical",3388]],"b":[[434,"impl-Debug-for-RuntimeError"],[435,"impl-Display-for-RuntimeError"],[437,"impl-Display-for-SignerRegistrationError"],[438,"impl-Debug-for-SignerRegistrationError"],[441,"impl-Display-for-SnapshotError"],[442,"impl-Debug-for-SnapshotError"],[2441,"impl-Display-for-DependenciesBuilderError"],[2442,"impl-Debug-for-DependenciesBuilderError"],[2446,"impl-From%3CConfigError%3E-for-DependenciesBuilderError"],[2447,"impl-From%3CError%3E-for-DependenciesBuilderError"],[2695,"impl-From%3COpenMessageRecord%3E-for-OpenMessage"],[2696,"impl-From%3COpenMessageWithSingleSignaturesRecord%3E-for-OpenMessage"],[3113,"impl-Debug-for-CertifierServiceError"],[3114,"impl-Display-for-CertifierServiceError"],[3115,"impl-Display-for-EpochServiceError"],[3116,"impl-Debug-for-EpochServiceError"],[3117,"impl-Display-for-MessageServiceError"],[3118,"impl-Debug-for-MessageServiceError"],[3119,"impl-Display-for-StakePoolDistributionServiceError"],[3120,"impl-Debug-for-StakePoolDistributionServiceError"]]}],\
["mithril_build_script",{"doc":"","t":"CHCIFINNNNNHNNHHNHNNNNH","n":["fake_aggregator","get_package_path","open_api","ArtifactId","FakeAggregatorData","FileContent","borrow","borrow_mut","default","fmt","from","generate_artifact_getter","generate_code_for_all_data","generate_code_for_ids","generate_ids_array","generate_list_getter","into","list_json_files_in_folder","load_from_folder","try_from","try_into","type_id","generate_open_api_versions_mapping"],"q":[[0,"mithril_build_script"],[3,"mithril_build_script::fake_aggregator"],[22,"mithril_build_script::open_api"],[23,"std::path"],[24,"core::fmt"],[25,"core::fmt"],[26,"alloc::string"],[27,"alloc::collections::btree::set"],[28,"std::path"],[29,"core::iter::traits::iterator"],[30,"core::result"],[31,"core::any"]],"d":["","","","","In memory representation of a folder containing data …","","","","","","Returns the argument unchanged.","","","","pub(crate) fn $array_name() -&gt; [&amp;’a str; $ids.len]","pub(crate) fn $fun_name() -&gt; &amp;’static str","Calls <code>U::from(self)</code>.","","","","","","Generate the <code>get_open_api_versions_mapping</code> function based …"],"i":[0,0,0,0,0,0,3,3,3,3,3,0,3,3,0,0,3,0,3,3,3,3,0],"f":[0,[1,2],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[3,4],5],[-1,-1,[]],[[1,[8,[6,7]]],9],[3,9],[3,9],[[1,[10,[6]]],9],[[1,7],9],[-1,-2,[],[]],[11,[[0,[[14,[],[[12,[13]]]]]]]],[11,3],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[[[17,[11]]],9]],"c":[],"p":[[1,"str"],[5,"PathBuf",23],[5,"FakeAggregatorData",3],[5,"Formatter",24],[8,"Result",24],[8,"ArtifactId",3],[8,"FileContent",3],[5,"BTreeMap",25],[5,"String",26],[5,"BTreeSet",27],[5,"Path",23],[17,"Item"],[5,"DirEntry",28],[10,"Iterator",29],[6,"Result",30],[5,"TypeId",31],[1,"slice"]],"b":[]}],\
["mithril_client",{"doc":"Define all the tooling necessary to manipulate Mithril …","t":"FFFFFFPPPFFFFFIIFFFPPPFFFGNOONCNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONCNNNNNNNNNNNNNNNNNNNCNOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONCONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOOOOOONCCNONNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOKGFGPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNFPGFPTPTFGFTTTPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPKFGFPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFKNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNN","n":["CardanoTransactionCommitment","CardanoTransactionCommitmentListItem","CardanoTransactionsProofs","CardanoTransactionsSetProof","Client","ClientBuilder","Err","InvalidSetProof","MalformedData","MessageBuilder","MithrilCertificate","MithrilCertificateListItem","MithrilCertificateListItemMetadata","MithrilCertificateMetadata","MithrilError","MithrilResult","MithrilSigner","MithrilStakeDistribution","MithrilStakeDistributionListItem","NoCertifiedTransaction","NonMatchingMerkleRoot","Ok","Snapshot","SnapshotListItem","VerifiedCardanoTransactions","VerifyCardanoTransactionsProofsError","add_feedback_receiver","aggregate_verification_key","aggregate_verification_key","aggregator","aggregator_client","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon","beacon","beacon","beacon","beacon","beacon","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cardano_node_version","cardano_node_version","cardano_transaction","cardano_transaction_client","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate","certificate_client","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certified_transactions","certified_transactions","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","compression_algorithm","compression_algorithm","compute_cardano_transactions_proofs_message","compute_mithril_stake_distribution_message","compute_snapshot_message","created_at","created_at","created_at","created_at","created_at","created_at","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","feedback","fill_protocol_message","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_signers","genesis_signature","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initiated_at","initiated_at","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kes_period","locations","locations","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","match_message","merkle_root","merkle_root","metadata","metadata","mithril_stake_distribution","mithril_stake_distribution_client","multi_signature","new","new","new","non_certified_transactions","operational_certificate","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","party_id","previous_hash","previous_hash","proof","protocol_message","protocol_message","protocol_parameters","protocol_parameters","protocol_parameters","protocol_version","protocol_version","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sealed_at","sealed_at","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signed_message","signed_message","signers","signers_with_stake","size","size","snapshot","snapshot_client","snapshot_downloader","source","stake","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_signers","transactions_hashes","transactions_hashes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_signers","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verification_key","verification_key_signature","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_aggregator_client","with_certificate_verifier","with_immutable_digester","with_logger","with_logger","with_snapshot_downloader","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","source","transactions_hashes","AggregatorClient","AggregatorClientError","AggregatorHTTPClient","AggregatorRequest","ApiVersionMismatch","GetCardanoTransactionCommitment","GetCertificate","GetMithrilStakeDistribution","GetSnapshot","GetTransactionsProofs","IncrementSnapshotStatistic","ListCardanoTransactionCommitments","ListCertificates","ListMithrilStakeDistributions","ListSnapshots","RemoteServerLogical","RemoteServerTechnical","SubsystemError","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_body","get_content","get_content","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","post_content","post_content","route","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","digest","hash","hash","hash","snapshot","transactions_hashes","CardanoTransactionClient","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","get_commitment","get_proofs","init","into","list_commitments","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","CertificateClient","CertificateVerifier","MithrilCertificateVerifier","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get","init","init","into","into","list","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","verify_chain","verify_chain","verify_chain","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Beacon","CardanoTransactionsMerkleRoot","CompressionAlgorithm","Epoch","Gzip","NEXT_SIGNER_RETRIEVAL_OFFSET","NextAggregateVerificationKey","PROTOCOL_PARAMETERS_RECORDING_OFFSET","ProtocolMessage","ProtocolMessagePartKey","ProtocolParameters","SIGNER_RECORDING_OFFSET","SIGNER_RETRIEVAL_OFFSET","SIGNER_SIGNING_OFFSET","SnapshotDigest","TransactionHash","Zstandard","add","add","add_assign","add_assign","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","compare_to_older","compute_hash","compute_hash","compute_hash","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","epoch","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_space_snapshot_ratio","from","from","from","from","from","from","from","get_message_part","has_gap_with","hash","hash","immutable_file_number","init","init","init","init","init","init","into","into","into","into","into","into","iter","k","list","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","m","message_parts","network","new","new","new","next","offset_by","offset_to_next_signer_retrieval_epoch","offset_to_protocol_parameters_recording_epoch","offset_to_recording_epoch","offset_to_signer_retrieval_epoch","offset_to_signer_signing_offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","phi_f","phi_f_fixed","previous","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","set_message_part","sub","sub","sub_assign","sub_assign","tar_file_extension","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CertificateChainValidated","CertificateChainValidationStarted","CertificateValidated","FeedbackReceiver","FeedbackSender","MithrilEvent","SlogFeedbackReceiver","SnapshotDownloadCompleted","SnapshotDownloadProgress","SnapshotDownloadStarted","StackFeedbackReceiver","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","do_erased_serialize","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from","handle_event","handle_event","handle_event","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new_certificate_chain_validation_id","new_snapshot_download_id","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send_event","serialize","stacked_events","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","certificate_chain_validation_id","certificate_chain_validation_id","certificate_chain_validation_id","certificate_hash","digest","download_id","download_id","download_id","downloaded_bytes","size","size","MithrilStakeDistributionClient","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","get","init","into","list","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","NoWorkingLocation","SnapshotClient","SnapshotClientError","add_statistics","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","download_unpack","drop","drop","fmt","fmt","from","from","get","init","init","into","into","list","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","digest","locations","HttpSnapshotDownloader","SnapshotDownloader","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","download_unpack","download_unpack","drop","from","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","probe","probe","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":[[0,"mithril_client"],[772,"mithril_client::VerifyCardanoTransactionsProofsError"],[774,"mithril_client::aggregator_client"],[889,"mithril_client::aggregator_client::AggregatorRequest"],[895,"mithril_client::cardano_transaction_client"],[926,"mithril_client::certificate_client"],[988,"mithril_client::common"],[1297,"mithril_client::feedback"],[1439,"mithril_client::feedback::MithrilEvent"],[1450,"mithril_client::mithril_stake_distribution_client"],[1480,"mithril_client::snapshot_client"],[1543,"mithril_client::snapshot_client::SnapshotClientError"],[1545,"mithril_client::snapshot_downloader"],[1578,"alloc::sync"],[1579,"alloc::string"],[1580,"core::option"],[1581,"std::path"],[1582,"core::result"],[1583,"serde::de"],[1584,"erased_serde::ser"],[1585,"erased_serde::ser"],[1586,"core::fmt"],[1587,"core::fmt"],[1588,"alloc::vec"],[1589,"serde::ser"],[1590,"core::error"],[1591,"mithril_common::entities::certificate"],[1592,"mithril_common::entities::cardano_transactions_set_proof"],[1593,"anyhow"],[1594,"core::any"],[1595,"mithril_common::digesters::immutable_digester"],[1596,"slog"],[1597,"core::fmt"],[1598,"alloc::boxed"],[1599,"core::pin"],[1600,"url"],[1601,"semver"],[1602,"alloc::string"],[1603,"mithril_common::entities::beacon"],[1604,"mithril_common::entities::beacon"],[1605,"core::hash"],[1606,"mithril_common::entities::snapshot"],[1607,"mithril_common::entities::epoch"],[1608,"typenum::uint"],[1609,"typenum::bit"],[1610,"typenum::uint"]],"d":["A commitment that Mithril have certified Cardano …","List item of a Cardano transaction commitment.","A cryptographic proof for a set of Cardano transactions","A cryptographic proof of a set of Cardano transactions is …","Structure that aggregates the available clients for each …","Builder than can be used to create a Client easily or with …","Contains the error value","The verification of an individual …","An individual CardanoTransactionsSetProofMessagePart could …","A MessageBuilder can be used to compute the message of …","A Mithril certificate.","List item of Mithril certificates","CertificateListItemMessage represents the metadata …","CertificateMetadata represents the metadata associated to …","Mithril error type, an alias of anyhow::Error","Mithril result type, an alias of anyhow::Result","An individual signer of a Mithril certificate","A Mithril stake distribution.","List item of Mithril stake distributions.","No certified transactions set proof to verify","Not all certified transactions set proof have the same …","Contains the success value","A Mithril snapshot of a Cardano Node database.","List item of Mithril snapshots","Set of transactions verified by …","Error encountered or produced by the cardano transaction …","Add a feedback receiver to receive events for tasks that …","Aggregate verification key The AVK used to sign during the …","Aggregate verification key The AVK used to sign during the …","Constructs a new <code>ClientBuilder</code> that fetches data from the …","Mechanisms to exchange data with an Aggregator.","","","","","","","","","","","","","","","","","","","Beacon of the Cardano transactions commitment","Beacon of the Cardano transactions commitment","Mithril beacon on the Cardano chain aka BEACON(p,n)","Mithril beacon on the Cardano chain aka BEACON(p,n)","Mithril beacon on the Cardano chain","Mithril beacon on the Cardano chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Client</code> that uses the dependencies provided to …","Cardano node version","Cardano node version","Get the client that fetches and verifies Mithril Cardano …","A client to retrieve from an aggregator cryptographic …","","","","","","","","","","","","","","","","","","","Get the client that fetches and verifies Mithril …","A client which retrieves and validates certificates from …","Hash of the certificate that signs this struct Merkle root.","Hash of the associated certificate","Hash of the associated certificate","Hash of the certificate that validate this proof merkle …","Hash of the associated certificate","Hash of the associated certificate","Hash of the associated certificate","Hash of the associated certificate","Hashes of the certified transactions","Transactions that have been certified","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>mithril-common</code> re-exports","Compression algorithm of the snapshot archive","Compression algorithm of the snapshot archive","Compute message for a Cardano Transactions Proofs.","Compute message for a Mithril stake distribution.","Compute message for a snapshot (based on the directory …","DateTime of creation","DateTime of creation","DateTime of creation","Date and time at which the Mithril Stake Distribution was …","Date and time at which the snapshot was created","Date and time at which the snapshot was created","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digest that is signed by the signer participants","Digest that is signed by the signer participants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Retrieve a dummy proof (for test only)","CertificateMetadata factory","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Epoch at which the Mithril Stake Distribution is created","Epoch at which the Mithril Stake Distribution is created","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Long task feedbacks","Fill the given ProtocolMessage with the data associated …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a set of signers into message parts","Genesis signature created from the original stake …","Hash of the Cardano Transactions commitment","Hash of the Cardano Transactions commitment","Hash of the current certificate Computed from the other …","Hash of the current certificate Computed from the other …","Hash of the Mithril Stake Distribution (different from the …","Hash of the Mithril Stake Distribution (different from the …","","","","","","","","","","","","","","","","","","","Date and time when the certificate was initiated …","Date and time when the certificate was initiated …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The KES period used to compute the verification key …","Locations where the binary content of the snapshot can be …","Locations where the binary content of the snapshot can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that the certificate signed message match the given …","Merkle root of the Cardano transactions commitment","Merkle root of the Cardano transactions commitment","Certificate metadata aka METADATA(p,n)","Certificate metadata aka METADATA(p,n)","Get the client that fetches Mithril stake distributions.","A client to retrieve Mithril stake distributions data from …","STM multi signature created from a quorum of single …","Constructs a new <code>ClientBuilder</code> without any dependency set.","Constructs a new <code>MessageBuilder</code>.","Create a new <code>CardanoTransactionsProofsMessage</code>","Transactions that could not be certified","The encoded operational certificate of stake pool operator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unique identifier of the signer","Hash of the previous certificate in the chain This is …","Hash of the previous certificate in the chain This is …","Proof of the transactions","Structured message that is used to created the signed …","Structured message that is used to created the signed …","Protocol parameters part of METADATA(p,n)","Protocol parameters part of METADATA(p,n)","Protocol parameters used to compute AVK","Protocol Version (semver) Useful to achieve backward …","Protocol Version (semver) Useful to achieve backward …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was sealed Represents …","Date and time when the certificate was sealed Represents …","","","","","","","","","","","","","","Message that is signed by the signers aka H(MSG(p,n) || …","Message that is signed by the signers aka H(MSG(p,n) || …","The list of the active signers with their stakes and …","List of signers with stakes of the Mithril Stake …","Size of the snapshot file in Bytes","Size of the snapshot file in Bytes","Get the client that fetches and downloads Mithril …","A client to retrieve snapshots data from an Aggregator.","Snapshot tarball download and unpack mechanism.","","The signer stake","","","","","","","","","","","","","","","","","The number of signers that contributed to the certificate …","Transactions that have been certified","Hashes of the certified transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a set of signer message parts into a set of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The public key used to authenticate signer signature","The encoded signer ‘Mithril verification key’ …","Verify that all the certified transactions proofs are valid","","","","","","","","","","","","","","","","","","","Set the AggregatorClient that will be used to request data …","Set the CertificateVerifier that will be used to validate …","Set the ImmutableDigester to be used for the message …","Set the Logger to use.","Set the Logger to use.","Set the SnapshotDownloader that will be used to download …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error source","Hashes of the invalid transactions","API that defines a client for the Aggregator","Error tied with the Aggregator client","Responsible for HTTP transport and API version check.","What can be read from an AggregatorClient.","Error raised when the server API version mismatch the …","Get a specific Cardano transaction commitment","Get a specific certificate from the aggregator","Get a specific Mithril stake distribution from the …","Get a specific snapshot from the aggregator","Get proofs that the given set of Cardano transactions is …","Increments the aggregator snapshot download statistics","Lists the aggregator Cardano transaction commitment","Lists the aggregator certificates","Lists the aggregator Mithril stake distribution","Lists the aggregator snapshots","Error raised when querying the aggregator returned a 4XX …","Error raised when querying the aggregator returned a 5XX …","HTTP subsystem error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the request body to send to the aggregator","Get the content back from the Aggregator","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs a new <code>AggregatorHTTPClient</code>","","","","","","","Post information to the Aggregator","","Get the request route relative to the aggregator root …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digest of the snapshot to retrieve","Hash of the certificate to retrieve","Hash of the Mithril stake distribution to retrieve","Hash of the Cardano transaction commitment to retrieve","Snapshot as HTTP request body","Hashes of the transactions to get proofs for.","HTTP client for CardanoTransactionsAPI from the Aggregator","","","","","","","","","","Returns the argument unchanged.","Get the given Cardano transaction commitment data. If it …","Get proofs that the given subset of transactions is …","","Calls <code>U::from(self)</code>.","Fetch a list of signed Cardano transaction commitments.","","","Constructs a new <code>CardanoTransactionClient</code>.","","","","","","","","","","","","","Aggregator client for the Certificate","API that defines how to validate certificates.","Implementation of a CertificateVerifier that can send …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a single certificate full information from the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Fetch a list of certificates","","","","","Constructs a new <code>CertificateClient</code>.","Constructs a new <code>MithrilCertificateVerifier</code>.","","","","","","","","","","","","","","","","","","","Validate the chain starting with the given certificate.","Validate the chain starting with the certificate with …","","","","","","","","Beacon represents a point in the Cardano chain at which a …","The ProtocolMessage part key associated to the Cardano …","Compression algorithm for the snapshot archive artifacts.","Epoch represents a Cardano epoch","Gzip compression format","The epoch offset used to retrieve the signers stake …","The ProtocolMessage part key associated to the Next epoch …","The epoch offset used for aggregator protocol parameters …","ProtocolMessage represents a message that is signed (or …","The key of a ProtocolMessage","Protocol cryptographic parameters","The epoch offset used for signers stake distribution and …","The epoch offset used for signers stake distribution and …","The epoch offset used to retrieve, given the epoch at …","The ProtocolMessage part key associated to the Snapshot …","TransactionHash is the unique identifier of a cardano …","Zstandard compression format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method returns a BeaconOrdering between self and the …","Computes the hash of a Beacon","Computes the hash of the protocol message","Computes the hash of ProtocolParameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano chain epoch number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Those ratio will be multiplied by the snapshot size to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get the message part associated with a key","Check if there is a gap with another Epoch.","","","Number of the last included immutable files for the digest …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Quorum parameter","List all the available algorithms.","","","","","","","","","","","","","Security parameter (number of lotteries)","Map of the messages combined into the digest aka MSG(p,n)","Cardano network","Beacon factory","ProtocolMessage factory","ProtocolParameters factory","Computes the next Epoch","Computes a new Epoch by applying an epoch offset.","Apply the next signer retrieval offset to this epoch","Apply the protocol parameters recording offset to this …","Apply the recording offset to this epoch","Apply the retrieval offset to this epoch","Apply the signer signing offset to this epoch","","","","","","","","","","","","","","","","f in phi(w) = 1 - (1 - f)^w, where w is the stake of a …","phi_f_fixed is a fixed decimal representatio of phi_f used …","Computes the previous Epoch","","","","","","","","","","","","","","","","","","","Set the message part associated with a key Returns …","","","","","Get the extension associated to tar archive using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The whole certificate chain is valid.","A certificate chain validation has started","A individual certificate of a chain have been validated.","A receiver of MithrilEvent.","A sender of MithrilEvent.","Event that can be reported by a FeedbackReceiver.","A FeedbackReceiver that writes the event it receives in a …","A snapshot download has completed","A snapshot download is in progress","A snapshot download has started","A FeedbackReceiver that stacks the events that it receives …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Callback called by a FeedbackSender when it needs to send …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a new SlogFeedbackReceiver.","Create a new StackFeedbackReceiver.","Create a new FeedbackSender.","Generate a random unique identifier to identify a …","Generate a random unique identifier to identify a snapshot …","","","","","","","","","","","","","","","","","Send the given event to the known receivers.","","Returns a copy of the stored stacked events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique identifier used to track this specific certificate …","Unique identifier used to track this specific certificate …","Unique identifier used to track this specific certificate …","The validated certificate hash","Digest of the downloaded snapshot","Unique identifier used to track this specific snapshot …","Unique identifier used to track this specific snapshot …","Unique identifier used to track this specific snapshot …","Number of bytes that have been downloaded","Size of the downloaded archive","Size of the downloaded archive","HTTP client for MithrilStakeDistribution API from the …","","","","","","","","","","Returns the argument unchanged.","Get the given stake distribution data. If it cannot be …","","Calls <code>U::from(self)</code>.","Fetch a list of signed MithrilStakeDistribution","","","Constructs a new <code>MithrilStakeDistributionClient</code>.","","","","","","","","","","","","","Download location does not work","Aggregator client for the snapshot artifact","Error for the Snapshot client","Increments the aggregator snapshot download statistics","","","","","","","","","","","","","","","","","Download and unpack the given snapshot to the given …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the given snapshot data. If it cannot be found, a None …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a list of available snapshots","","","","","Constructs a new <code>SnapshotClient</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","given digest","list of locations tried","A snapshot downloader that only handles download through …","API that defines a snapshot downloader","","","","","","","","","Download and unpack a snapshot archive on the disk.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Constructs a new <code>HttpSnapshotDownloader</code>.","","","Test if the given snapshot location exists.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,6,39,39,0,0,0,0,0,0,0,0,0,0,39,39,6,0,0,0,0,1,16,18,1,0,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,13,14,16,18,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,24,25,5,0,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,5,0,9,13,14,15,22,23,24,25,9,15,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,5,13,14,15,9,16,17,18,19,20,21,22,23,24,25,5,13,14,15,9,16,17,18,19,20,21,22,23,24,25,0,24,25,27,27,27,13,14,22,23,24,25,27,13,14,15,17,18,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,13,14,15,16,17,18,19,20,21,22,23,24,25,24,25,13,14,15,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,13,14,16,18,19,20,21,22,23,24,25,22,23,13,14,15,9,16,17,18,19,20,21,22,23,24,25,14,14,14,21,21,21,23,23,23,24,24,24,25,25,25,13,14,15,16,17,18,19,20,21,22,23,24,25,0,9,13,14,15,9,39,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,21,22,23,24,25,21,16,13,14,16,18,22,23,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,17,20,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,21,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,16,13,14,16,18,5,0,16,1,27,15,15,21,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,21,16,18,19,16,18,17,20,22,17,20,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,17,20,13,14,15,16,17,18,19,20,21,22,23,24,25,16,18,20,22,24,25,5,0,0,39,21,5,13,14,15,9,16,17,18,19,20,21,22,23,24,25,39,17,15,19,1,27,5,13,14,15,9,39,16,16,17,18,19,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,21,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,21,21,15,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,1,27,1,27,1,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,1,27,5,13,14,15,9,39,16,17,18,19,20,21,22,23,24,25,92,92,0,0,0,0,56,55,55,55,55,55,55,55,55,55,55,56,56,56,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,55,55,61,56,55,61,56,55,61,56,55,55,55,55,55,56,56,55,61,56,55,55,50,61,61,56,55,61,56,55,61,56,55,61,56,55,61,61,56,55,61,56,55,50,61,55,61,56,55,61,56,55,56,55,56,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,61,56,55,93,94,95,96,97,98,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,8,66,8,66,8,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,8,66,51,8,66,8,66,8,66,8,66,0,70,0,0,72,67,70,67,0,0,0,67,67,67,70,0,72,67,67,67,67,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,67,70,67,70,69,69,28,71,69,67,28,71,72,69,67,67,70,28,71,72,69,67,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,69,67,67,67,70,28,71,72,69,69,69,67,67,67,70,70,70,28,28,28,72,72,72,69,67,70,28,71,72,69,69,67,67,70,70,28,71,72,72,72,69,67,70,28,71,71,72,28,67,69,67,69,69,67,70,28,71,72,69,67,70,28,71,72,72,71,72,69,67,70,28,71,72,69,67,70,28,71,72,71,28,69,69,28,71,67,67,67,67,67,67,67,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,71,71,67,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,28,67,67,67,67,72,69,67,70,28,71,72,69,67,70,72,69,67,70,28,71,72,69,67,67,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,69,67,70,28,71,72,87,87,87,0,0,0,0,87,87,87,0,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,87,65,87,65,88,89,88,87,65,89,88,87,65,87,89,88,87,65,87,87,87,87,87,87,87,89,88,87,65,2,89,88,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,65,87,87,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,65,87,88,87,65,87,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,89,88,87,65,99,100,101,100,102,102,103,104,103,102,103,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,90,0,0,44,44,90,44,90,44,90,44,90,44,90,44,90,44,90,44,90,44,44,90,90,90,44,90,44,44,90,44,90,44,44,90,44,90,44,44,90,44,90,44,90,44,90,90,44,90,44,90,44,90,44,90,44,90,44,90,44,90,44,90,105,105,0,0,91,91,91,91,91,91,91,91,54,91,91,91,91,91,91,91,91,91,91,54,91,91,91,91,91,91,91,91,91,91,91],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],1],0,0,[[4,4],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[6,[5]]]],0,0,[5,[[3,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[3,[8]]]],0,[9,4],0,0,0,0,0,0,0,[9,[[11,[10]]]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[5,5],[13,13],[14,14],[15,15],[9,9],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,0,0,[[27,16,9],28],[[27,22],[[6,[28]]]],[[27,16,29],[[6,[28]]]],0,0,0,0,0,0,[[],27],[[],13],[[],14],[[],15],[[],17],[[],18],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[-1,[[31,[13]]],32],[-1,[[31,[14]]],32],[-1,[[31,[15]]],32],[-1,[[31,[16]]],32],[-1,[[31,[17]]],32],[-1,[[31,[18]]],32],[-1,[[31,[19]]],32],[-1,[[31,[20]]],32],[-1,[[31,[21]]],32],[-1,[[31,[22]]],32],[-1,[[31,[23]]],32],[-1,[[31,[24]]],32],[-1,[[31,[25]]],32],0,0,[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],[[],13],[[],14],[[],16],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],0,0,[[13,13],35],[[14,14],35],[[15,15],35],[[9,9],35],[[16,16],35],[[17,17],35],[[18,18],35],[[19,19],35],[[20,20],35],[[21,21],35],[[22,22],35],[[23,23],35],[[24,24],35],[[25,25],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],0,[[9,28],26],[[13,37],[[31,[26,38]]]],[[14,37],[[31,[26,38]]]],[[15,37],[[31,[26,38]]]],[[9,37],[[31,[26,38]]]],[[39,37],[[31,[26,38]]]],[[39,37],[[31,[26,38]]]],[[16,37],[[31,[26,38]]]],[[17,37],[[31,[26,38]]]],[[18,37],[[31,[26,38]]]],[[19,37],[[31,[26,38]]]],[[20,37],[[31,[26,38]]]],[[21,37],[[31,[26,38]]]],[[22,37],[[31,[26,38]]]],[[23,37],[[31,[26,38]]]],[[24,37],[[31,[26,38]]]],[[25,37],[[31,[26,38]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[41,[40]]],[[41,[21]]]],0,0,0,0,0,0,0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,28],35],0,0,0,0,[5,[[3,[42]]]],0,0,[4,1],[[],27],[[4,[41,[19]],[41,[10]]],15],0,0,[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[13,-1],31,43],[[14,-1],31,43],[[15,-1],31,43],[[16,-1],31,43],[[17,-1],31,43],[[18,-1],31,43],[[19,-1],31,43],[[20,-1],31,43],[[21,-1],31,43],[[22,-1],31,43],[[23,-1],31,43],[[24,-1],31,43],[[25,-1],31,43],0,0,0,0,0,0,[5,[[3,[44]]]],0,0,[39,[[12,[45]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],0,[15,[[41,[10]]]],0,[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[46,[[31,[16]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[47,[[31,[19]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[[[41,[21]]],[[31,[[41,[40]],48]]]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[15,[[31,[9,39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[50]]],1],[[1,[3,[51]]],1],[[27,[3,[52]]],27],[[1,53],1],[[27,53],27],[[1,[3,[54]]],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[55,55],[[-1,-2],26,[],[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,26],[30,26],[30,26],[[55,55],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[56,37],57],[[56,37],57],[[55,37],57],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,[[12,[10]]]],[[50,55],[[60,[[59,[58]]]]]],[[61,55],[[60,[[59,[58]]]]]],[[],30],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,[41,[63]],53],[[6,[61]]]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[[50,55],[[60,[[59,[58]]]]]],[[61,55],[[60,[[59,[58]]]]]],[55,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,[[12,[45]]]],[-1,-2,[],[]],[-1,10,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[30,-1,[]],[30,-1,[]],[30,26],[-1,-1,[]],[[7,4],[[6,[[12,[13]]]]]],[[7,[11,[-1]]],[[6,[15]]],64],[[],30],[-1,-2,[],[]],[7,[[6,[[41,[14]]]]]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[[[3,[50]]],7],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,26],[30,26],[-1,-1,[]],[-1,-1,[]],[[8,4],[[6,[[12,[16]]]]]],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[8,[[6,[[41,[18]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[50]],[3,[51]],53],8],[[[3,[50]],4,65,53],[[6,[66]]]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,16],[[60,[[59,[58]]]]]],[[8,4],[[6,[16]]]],[[66,16],[[60,[[59,[58]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[67,68]],[[67,67]],[[67,68],26],[[67,67],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[69,69],[67,67],[70,70],[28,28],[71,71],[72,72],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[67,67],73],[[70,70],73],[[-1,-2],73,[],[]],[[-1,-2],73,[],[]],[[69,69],[[31,[74,75]]]],[69,10],[28,10],[71,10],[[],69],[[],67],[[],28],[[],71],[[],72],[30,-1,[]],[30,-1,[]],[67],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[67],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[-1,[[31,[69]]],32],[-1,[[31,[67]]],32],[-1,[[31,[70]]],32],[-1,[[31,[28]]],32],[-1,[[31,[71]]],32],[-1,[[31,[72]]],32],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[[-1,33],[[31,[26,34]]],[]],[30,26],[30,26],[30,26],[30,26],[30,26],[30,26],0,[[69,69],35],[[67,67],35],[[67,68],35],[[67,68],35],[[70,70],35],[[28,28],35],[[71,71],35],[[72,72],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[-1,33],[[31,[26,36]]],[]],[[69,37],[[31,[26,38]]]],[[69,37],[[31,[26,38]]]],[[67,37],[[31,[26,38]]]],[[67,37],[[31,[26,38]]]],[[70,37],[[31,[26,38]]]],[[70,37],[[31,[26,38]]]],[[28,37],[[31,[26,38]]]],[[71,37],[[31,[26,38]]]],[[72,37],[[31,[26,38]]]],[[72,37],[[31,[26,38]]]],[72,76],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[77,71],[-1,-1,[]],[[28,70],[[12,[10]]]],[[67,67],35],[[69,-1],26,78],[[67,-1],26,78],0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],79],0,[[],[[41,[72]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[10,68,68],69],[[],28],[[68,68,76],71],[67,67],[[67,80],[[31,[67,81]]]],[67,67],[67,67],[67,67],[67,[[31,[67,81]]]],[67,67],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[[69,69],[[12,[73]]]],[[67,67],[[12,[73]]]],[[70,70],[[12,[73]]]],0,[71,[[86,[[84,[[84,[[84,[[84,[[84,[82,83]],83]],85]],85]],85]]]]]],[67,[[31,[67,81]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[69,-1],31,43],[[67,-1],31,43],[[70,-1],31,43],[[28,-1],31,43],[[71,-1],31,43],[[72,-1],31,43],[[28,70,10],[[12,[10]]]],[[67,67]],[[67,68]],[[67,67],26],[[67,68],26],[72,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[67,[[31,[80]]]],[-1,[[31,[-2]]],[],[]],[67,[[31,[80]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[87,87],[65,65],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[],88],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[[-1,33],[[31,[26,34]]],[]],[30,26],[30,26],[30,26],[30,26],[[87,87],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,33],[[31,[26,36]]],[]],[[87,37],57],[[87,37],[[31,[26,38]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,87],[[60,[[59,[58]]]]]],[[89,87],[[60,[[59,[58]]]]]],[[88,87],[[60,[[59,[58]]]]]],[[],30],[[],30],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,89],[[],88],[[[11,[[3,[2]]]]],65],[[],10],[[],10],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,87],26],[[87,-1],31,43],[88,[[41,[87]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[30,-1,[]],[30,-1,[]],[30,26],[-1,-1,[]],[[42,4],[[6,[[12,[22]]]]]],[[],30],[-1,-2,[],[]],[42,[[6,[[41,[23]]]]]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[[[3,[50]]],42],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[44,24],[[6,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[[44,24,29],[[6,[26]]]],[30,26],[30,26],[[90,37],57],[[90,37],57],[-1,-1,[]],[-1,-1,[]],[[44,4],[[6,[[12,[24]]]]]],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[44,[[6,[[41,[25]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[50]],[3,[54]],65,53],44],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[30,-1,[]],[30,-1,[]],[[54,4,29,72,4,68],[[60,[[59,[58]]]]]],[[91,4,29,72,4,68],[[60,[[59,[58]]]]]],[30,26],[-1,-1,[]],[[],30],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[[65,53],[[6,[91]]]],[-1,[[26,[-2,35]]],[],[]],[-1,[[26,[-2,35]]],[],[]],[[54,4],[[60,[[59,[58]]]]]],[[91,4],[[60,[[59,[58]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"ClientBuilder",0],[10,"FeedbackReceiver",1297],[5,"Arc",1578],[1,"str"],[5,"Client",0],[8,"MithrilResult",0],[5,"CardanoTransactionClient",895],[5,"CertificateClient",926],[5,"VerifiedCardanoTransactions",0],[5,"String",1579],[1,"slice"],[6,"Option",1580],[5,"CardanoTransactionCommitment",0],[5,"CardanoTransactionCommitmentListItem",0],[5,"CardanoTransactionsProofs",0],[5,"MithrilCertificate",0],[5,"MithrilCertificateListItemMetadata",0],[5,"MithrilCertificateListItem",0],[5,"CardanoTransactionsSetProof",0],[5,"MithrilCertificateMetadata",0],[5,"MithrilSigner",0],[5,"MithrilStakeDistribution",0],[5,"MithrilStakeDistributionListItem",0],[5,"Snapshot",0],[5,"SnapshotListItem",0],[1,"tuple"],[5,"MessageBuilder",0],[5,"ProtocolMessage",988],[5,"Path",1581],[1,"usize"],[6,"Result",1582],[10,"Deserializer",1583],[10,"Serializer",1584],[6,"ErrorImpl",1584],[1,"bool"],[5,"Error",1585],[5,"Formatter",1586],[5,"Error",1586],[6,"VerifyCardanoTransactionsProofsError",0],[5,"SignerWithStake",1587],[5,"Vec",1588],[5,"MithrilStakeDistributionClient",1450],[10,"Serializer",1589],[5,"SnapshotClient",1480],[10,"Error",1590],[5,"Certificate",1591],[5,"CardanoTransactionsSetProof",1592],[5,"Error",1593],[5,"TypeId",1594],[10,"AggregatorClient",774],[10,"CertificateVerifier",926],[10,"ImmutableDigester",1595],[5,"Logger",1596],[10,"SnapshotDownloader",1545],[6,"AggregatorRequest",774],[6,"AggregatorClientError",774],[8,"Result",1586],[10,"Future",1597],[5,"Box",1598],[5,"Pin",1599],[5,"AggregatorHTTPClient",774],[5,"Url",1600],[5,"Version",1601],[10,"ToString",1579],[5,"FeedbackSender",1297],[5,"MithrilCertificateVerifier",926],[5,"Epoch",988],[1,"u64"],[5,"Beacon",988],[6,"ProtocolMessagePartKey",988],[5,"ProtocolParameters",988],[6,"CompressionAlgorithm",988],[6,"Ordering",1602],[6,"BeaconComparison",1603],[6,"BeaconComparisonError",1603],[1,"f64"],[5,"StmParameters",1604],[10,"Hasher",1605],[5,"CompressionAlgorithmIter",1606],[1,"i64"],[6,"EpochError",1607],[5,"UTerm",1608],[5,"B1",1609],[5,"UInt",1608],[5,"B0",1609],[5,"FixedU32",1610],[6,"MithrilEvent",1297],[5,"StackFeedbackReceiver",1297],[5,"SlogFeedbackReceiver",1297],[6,"SnapshotClientError",1480],[5,"HttpSnapshotDownloader",1545],[15,"InvalidSetProof",772],[15,"GetSnapshot",889],[15,"GetCertificate",889],[15,"GetMithrilStakeDistribution",889],[15,"GetCardanoTransactionCommitment",889],[15,"IncrementSnapshotStatistic",889],[15,"GetTransactionsProofs",889],[15,"CertificateChainValidationStarted",1439],[15,"CertificateValidated",1439],[15,"CertificateChainValidated",1439],[15,"SnapshotDownloadStarted",1439],[15,"SnapshotDownloadProgress",1439],[15,"SnapshotDownloadCompleted",1439],[15,"NoWorkingLocation",1543]],"b":[[359,"impl-Display-for-VerifyCardanoTransactionsProofsError"],[360,"impl-Debug-for-VerifyCardanoTransactionsProofsError"],[825,"impl-Display-for-AggregatorClientError"],[826,"impl-Debug-for-AggregatorClientError"],[1005,"impl-Add%3Cu64%3E-for-Epoch"],[1006,"impl-Add-for-Epoch"],[1007,"impl-AddAssign%3Cu64%3E-for-Epoch"],[1008,"impl-AddAssign-for-Epoch"],[1104,"impl-PartialEq-for-Epoch"],[1105,"impl-PartialEq%3Cu64%3E-for-%26Epoch"],[1106,"impl-PartialEq%3Cu64%3E-for-Epoch"],[1132,"impl-Display-for-Beacon"],[1133,"impl-Debug-for-Beacon"],[1134,"impl-Display-for-Epoch"],[1135,"impl-Debug-for-Epoch"],[1136,"impl-Display-for-ProtocolMessagePartKey"],[1137,"impl-Debug-for-ProtocolMessagePartKey"],[1140,"impl-Debug-for-CompressionAlgorithm"],[1141,"impl-Display-for-CompressionAlgorithm"],[1232,"impl-Sub-for-Epoch"],[1233,"impl-Sub%3Cu64%3E-for-Epoch"],[1234,"impl-SubAssign-for-Epoch"],[1235,"impl-SubAssign%3Cu64%3E-for-Epoch"],[1254,"impl-TryInto%3Ci64%3E-for-%26Epoch"],[1256,"impl-TryInto%3Ci64%3E-for-Epoch"],[1355,"impl-Debug-for-MithrilEvent"],[1356,"impl-Display-for-MithrilEvent"],[1503,"impl-Debug-for-SnapshotClientError"],[1504,"impl-Display-for-SnapshotClientError"]]}],\
["mithril_client_cli",{"doc":"A command line interface that uses the Mithril Client …","t":"CCCCGGFFFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["commands","cardano_transaction","mithril_stake_distribution","snapshot","CardanoTransactionCommands","CardanoTransactionCommitmentCommands","CardanoTransactionCommitmentListCommand","CardanoTransactionsCertifyCommand","CardanoTransactionsCommitmentShowCommand","Certify","Commitment","List","Show","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into_box","collect","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Download","List","MithrilStakeDistributionCommands","MithrilStakeDistributionDownloadCommand","MithrilStakeDistributionListCommand","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","clone_into_box","collect","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Download","List","Show","SnapshotCommands","SnapshotDownloadCommand","SnapshotListCommand","SnapshotShowCommand","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into_box","collect","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":[[0,"mithril_client_cli"],[1,"mithril_client_cli::commands"],[4,"mithril_client_cli::commands::cardano_transaction"],[211,"mithril_client_cli::commands::mithril_stake_distribution"],[336,"mithril_client_cli::commands::snapshot"],[503,"clap_builder::builder::command"],[504,"core::option"],[505,"config::source"],[506,"alloc::boxed"],[507,"alloc::string"],[508,"config::value"],[509,"config::map"],[510,"config::error"],[511,"core::result"],[512,"config::builder"],[513,"config::builder"],[514,"core::fmt"],[515,"core::fmt"],[516,"clap_builder"],[517,"clap_builder::util::id"],[518,"core::any"]],"d":["Command module This module holds the subcommands that can …","Commands for the Cardano Transaction Commitment artifact &amp; …","Commands for the Mithril Stake Distribution artifact","Commands for the snapshot artifact","Cardano transactions management","Cardano transactions set","Cardano transaction commitment list command","Clap command to show a given Cardano transaction sets","Clap command to show a given Cardano transaction commitment","Certify that a given list of transaction hashes are …","Cardano transaction commitment commands","List Cardano transaction sets","Show Cardano transaction sets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano transaction certify command","Main command execution","Cardano transaction commitment Show command","Execute Cardano transaction command","Execute Cardano transaction commitment command","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Download and verify the given Mithril Stake Distribution","List certified stake distributions","Mithril Stake Distribution management (alias: msd)","Download and verify a Mithril Stake Distribution …","Mithril stake distribution LIST command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main command execution","Main command execution","Execute Mithril stake distribution command","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Download the snapshot and verify the certificate","List available snapshots","Show detailed informations about a snapshot","Snapshot management","Clap command to download the snapshot and verify the …","Clap command to list existing snapshots","Clap command to show a given snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Command execution","Main command execution","Snapshot Show command","Execute snapshot command","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,6,6,7,7,3,4,5,3,4,5,6,7,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,3,3,4,5,3,4,5,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,30,30,0,0,0,28,29,28,29,30,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,28,28,29,28,29,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,34,34,34,0,0,0,0,31,32,33,31,32,33,34,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,31,31,32,33,31,32,33,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34,31,32,33,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[3,3],[4,4],[5,5],[6,6],[7,7],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[3,[[10,[9]]]],[3,[[15,[[13,[11,12]],14]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,8],[16,8],[16,8],[16,8],[16,8],[[3,[18,[17]]],[[19,[8]]]],[[4,[18,[17]]],[[19,[8]]]],[[5,[18,[17]]],[[19,[8]]]],[[6,[18,[17]]],[[19,[8]]]],[[7,[18,[17]]],[[19,[8]]]],[[3,20],21],[[4,20],21],[[5,20],21],[[6,20],21],[[7,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[15,[3,23]]]],[22,[[15,[4,23]]]],[22,[[15,[5,23]]]],[22,[[15,[6,23]]]],[22,[[15,[7,23]]]],[22,[[15,[3,23]]]],[22,[[15,[4,23]]]],[22,[[15,[5,23]]]],[22,[[15,[6,23]]]],[22,[[15,[7,23]]]],[[],[[2,[24]]]],[[],[[2,[24]]]],[[],[[2,[24]]]],[25,26],[25,26],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,22],[[15,[8,23]]]],[[4,22],[[15,[8,23]]]],[[5,22],[[15,[8,23]]]],[[6,22],[[15,[8,23]]]],[[7,22],[[15,[8,23]]]],[[3,22],[[15,[8,23]]]],[[4,22],[[15,[8,23]]]],[[5,22],[[15,[8,23]]]],[[6,22],[[15,[8,23]]]],[[7,22],[[15,[8,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[28,28],[29,29],[30,30],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[28,[[10,[9]]]],[28,[[15,[[13,[11,12]],14]]]],[[],1],[[],1],[[],1],[[],1],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,8],[16,8],[16,8],[[28,[18,[17]]],[[19,[8]]]],[[29,[18,[17]]],[[19,[8]]]],[[30,[18,[17]]],[[19,[8]]]],[[28,20],21],[[29,20],21],[[30,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[15,[28,23]]]],[22,[[15,[29,23]]]],[22,[[15,[30,23]]]],[22,[[15,[28,23]]]],[22,[[15,[29,23]]]],[22,[[15,[30,23]]]],[[],[[2,[24]]]],[[],[[2,[24]]]],[25,26],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,22],[[15,[8,23]]]],[[29,22],[[15,[8,23]]]],[[30,22],[[15,[8,23]]]],[[28,22],[[15,[8,23]]]],[[29,22],[[15,[8,23]]]],[[30,22],[[15,[8,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[31,31],[32,32],[33,33],[34,34],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[31,[[10,[9]]]],[31,[[15,[[13,[11,12]],14]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,8],[16,8],[16,8],[16,8],[[31,[18,[17]]],[[19,[8]]]],[[32,[18,[17]]],[[19,[8]]]],[[33,[18,[17]]],[[19,[8]]]],[[34,[18,[17]]],[[19,[8]]]],[[31,20],21],[[32,20],21],[[33,20],21],[[34,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[15,[31,23]]]],[22,[[15,[32,23]]]],[22,[[15,[33,23]]]],[22,[[15,[34,23]]]],[22,[[15,[31,23]]]],[22,[[15,[32,23]]]],[22,[[15,[33,23]]]],[22,[[15,[34,23]]]],[[],[[2,[24]]]],[[],[[2,[24]]]],[[],[[2,[24]]]],[25,26],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,[[8,[-2,26]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,22],[[15,[8,23]]]],[[32,22],[[15,[8,23]]]],[[33,22],[[15,[8,23]]]],[[34,22],[[15,[8,23]]]],[[31,22],[[15,[8,23]]]],[[32,22],[[15,[8,23]]]],[[33,22],[[15,[8,23]]]],[[34,22],[[15,[8,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Command",503],[6,"Option",504],[5,"CardanoTransactionsCertifyCommand",4],[5,"CardanoTransactionCommitmentListCommand",4],[5,"CardanoTransactionsCommitmentShowCommand",4],[6,"CardanoTransactionCommands",4],[6,"CardanoTransactionCommitmentCommands",4],[1,"tuple"],[10,"Source",505],[5,"Box",506],[5,"String",507],[5,"Value",508],[8,"Map",509],[6,"ConfigError",510],[6,"Result",511],[1,"usize"],[5,"DefaultState",512],[5,"ConfigBuilder",512],[8,"MithrilResult",513],[5,"Formatter",514],[8,"Result",514],[5,"ArgMatches",515],[8,"Error",516],[5,"Id",517],[1,"str"],[1,"bool"],[5,"TypeId",518],[5,"MithrilStakeDistributionDownloadCommand",211],[5,"MithrilStakeDistributionListCommand",211],[6,"MithrilStakeDistributionCommands",211],[5,"SnapshotDownloadCommand",336],[5,"SnapshotListCommand",336],[5,"SnapshotShowCommand",336],[6,"SnapshotCommands",336]],"b":[]}],\
["mithril_common",{"doc":"Shared datatypes and traits used by Mithril rust projects","t":"KFEPSSEPIICNNNCNCCNNCNNCNCCQNMNNNNNCNNNCNNCCNNNNNNNNFINNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNPPPPFPKFKGPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNPPPPFFIKFGGKPFPPPPPPFFFGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFEPPTFFGIIIIPPPPPPPPPPFFFIPFPPPPSPPPPPPIIIIFIIFIFIPPIGFKIIIIIIIIGIIIIIIIKPFTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHFPFFFFPPPKGFPGPGKGFPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOIPPGGGKPPPFFPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGGPIPPPGPPFPPFPFFFFGFGPFGPFPPPPPIIIIIIIIIIIIIFIIPFPPPTPPTIFGIFITTTFGGFFFFPIIFPIPNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOONNNNNNNNNNNNNNNNNOOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFFFKGGFPCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPPFFGFFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIFFFFFIFFFFKPPFIFPPFFFFFFIFKKKFGMMOONNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNOOOOOOOOOOONONNNNNNNNNNNNNNNNNNNNNONOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPFFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKFFFFKKKNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFPFGFPCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNONNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHFNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNN","n":["BeaconProvider","BeaconProviderImpl","CardanoNetwork","Err","MITHRIL_API_VERSION_HEADER","MITHRIL_SIGNER_VERSION_HEADER","MagicId","Ok","StdError","StdResult","api_version","az","borrow","borrow_mut","cardano_transaction_parser","cast_from","certificate_chain","chain_observer","checked_as","checked_cast_from","crypto_helper","deref","deref_mut","digesters","drop","entities","era","era_deprecate","from","get_current_beacon","get_current_beacon","init","into","lossless_try_into","lossy_into","messages","new","overflowing_as","overflowing_cast_from","protocol","saturating_as","saturating_cast_from","signable_builder","test_utils","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","APIVersionProvider","OpenAPIFileName","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","compute_all_versions_sorted","compute_current_version","compute_current_version_requirement","deref","deref_mut","drop","from","get_open_api_versions_mapping","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","update_open_api_versions","vzip","wrapping_as","wrapping_cast_from","CardanoTransactionParser","DumbTransactionParser","TransactionParser","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parse","parse","parse","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","update_transactions","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","CertificateChainAVKUnmatch","CertificateChainInfiniteLoop","CertificateChainPreviousHashUnmatch","CertificateGenesis","CertificateGenesisProducer","CertificateHashUnmatch","CertificateRetriever","CertificateRetrieverError","CertificateVerifier","CertificateVerifierError","InvalidGenesisCertificateProvided","MithrilCertificateVerifier","VerifyMultiSignature","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","create_genesis_certificate","create_genesis_protocol_message","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_certificate_details","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sign_genesis_protocol_message","source","source","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verify_certificate","verify_certificate","verify_certificate_chain","verify_certificate_chain","verify_genesis_certificate","verify_genesis_certificate","verify_protocol_message","verify_protocol_message","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Build","Bytes","Bytes","CardanoCli","CardanoCliChainObserver","CardanoCliRunner","ChainAddress","ChainObserver","ChainObserverBuilder","ChainObserverError","ChainObserverType","CliRunner","Fake","FakeObserver","General","Int","Int","InvalidContent","InvalidContent","Pallas","PallasChainObserver","TxDatum","TxDatumBuilder","TxDatumError","TxDatumFieldTypeName","TxDatumFieldValue","add_field","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_beacon","datums","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_current_datums","get_current_datums","get_current_datums","get_current_datums","get_current_epoch","get_current_epoch","get_current_epoch","get_current_epoch","get_current_kes_period","get_current_kes_period","get_current_kes_period","get_current_kes_period","get_current_kes_period","get_current_stake_distribution","get_current_stake_distribution","get_current_stake_distribution","get_current_stake_distribution","get_fields_by_type","get_nth_field_by_type","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","launch_epoch","launch_epoch","launch_kes_period","launch_kes_period","launch_stake_distribution","launch_stake_distribution","launch_stake_snapshot","launch_stake_snapshot","launch_stake_snapshot_all_pools","launch_stake_snapshot_all_pools","launch_utxo","launch_utxo","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","new","new","next_epoch","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","set_datums","set_signers","signers","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CodecError","ColdKeyGenerator","CoreRegister","CoreRegister","DESCRIPTION","EraMarkersSigner","EraMarkersVerifier","EraMarkersVerifierError","EraMarkersVerifierSecretKey","EraMarkersVerifierSignature","EraMarkersVerifierVerificationKey","KESPeriod","KesMismatch","KesMismatch","KesPeriodMissing","KesPeriodMissing","KesSignatureInvalid","KesSignatureInvalid","KesSignatureMissing","KesSignatureMissing","KesUpdate","KesUpdate","MKProof","MKTree","MKTreeNode","MKTreeStore","NotEnoughSignatures","OpCert","OpCertInvalid","OpCertInvalid","OpCertMissing","OpCertMissing","PROTOCOL_VERSION","PartyIdMissing","PartyIdMissing","PartyIdNonExisting","PartyIdNonExisting","PoolAddressEncoding","PoolAddressEncoding","ProtocolAggregateVerificationKey","ProtocolAggregationError","ProtocolClerk","ProtocolClosedKeyRegistration","ProtocolGenesisError","ProtocolGenesisSecretKey","ProtocolGenesisSignature","ProtocolGenesisSigner","ProtocolGenesisVerificationKey","ProtocolGenesisVerifier","ProtocolInitializer","ProtocolInitializer","ProtocolInitializer","ProtocolInitializerError","ProtocolInitializerErrorWrapper","ProtocolKey","ProtocolKeyCodec","ProtocolKeyRegistration","ProtocolLotteryIndex","ProtocolMkProof","ProtocolMultiSignature","ProtocolOpCert","ProtocolParameters","ProtocolPartyId","ProtocolRegistrationError","ProtocolRegistrationErrorWrapper","ProtocolSigner","ProtocolSignerVerificationKey","ProtocolSignerVerificationKeySignature","ProtocolSingleSignature","ProtocolStake","ProtocolStakeDistribution","ProtocolVersion","SerDeShelleyFileFormat","SignatureVerification","Sum6KesBytes","TYPE","UsizeConversionInvalid","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_hash","compute_proof","compute_protocol_party_id","compute_protocol_party_id_as_hash","compute_root","contains","create_deterministic_genesis_signer","create_deterministic_signer","create_genesis_verifier","create_non_deterministic_genesis_signer","create_non_deterministic_signer","create_test_genesis_signer","create_test_signer","create_verifier","decode_key","decode_key","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_key","encode_key","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes_hex","from_bytes_hex","from_file","from_file","from_file","from_hex","from_json_hex","from_leaves","from_secret_key","from_secret_key","from_subset_of_leaves","from_verification_key","from_verification_key","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","k","key_decode_hex","key_encode_hex","key_to_bytes_hex","key_to_bytes_hex","key_to_json_hex","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","m","merkle_tree","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","phi_f","reg_parties","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","sign","source","source","source","source","source","start_kes_period","tests_setup","to_bytes_hex","to_bytes_hex","to_file","to_file","to_hex","to_json_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_verification_key","to_verification_key","total_leaves","total_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validate","verify","verify","verify","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","setup_certificate_chain","setup_genesis","setup_message","setup_protocol_parameters","setup_signers_from_stake_distribution","setup_temp_directory_for_signer","CardanoImmutableDigester","DigestComputationError","DumbImmutableDigester","DumbImmutableFileObserver","DummyImmutableDb","DummyImmutablesDbBuilder","FileNameExtraction","FileNumberParsing","FileStemExtraction","ImmutableDigester","ImmutableDigesterError","ImmutableFile","ImmutableFileCreation","ImmutableFileCreationError","ImmutableFileListing","ImmutableFileListingError","ImmutableFileObserver","ImmutableFileObserverError","ImmutableFileSystemObserver","ListImmutablesError","MetadataParsing","Missing","MissingImmutableFolder","NotEnoughImmutable","add_immutable_file","append_immutable_trio","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cache","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","compare","compute_digest","compute_digest","compute_digest","compute_raw_hash","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_last_immutable_number","get_last_immutable_number","get_last_immutable_number","immutables_files","increase","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","last_immutable_number","list_completed_in_dir","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","new","new","non_immutables_files","number","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","path","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_file_size","shall_return","shall_return","source","source","source","source","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_digest","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_immutables","with_non_immutables","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","db_dir","expected_number","found_number","path","path","CacheProviderResult","Err","Get","ImmutableDigesterCacheGetError","ImmutableDigesterCacheProviderError","ImmutableDigesterCacheStoreError","ImmutableFileDigestCacheProvider","Io","Io","JsonDeserialization","JsonImmutableFileDigestCacheProvider","JsonImmutableFileDigestCacheProviderBuilder","JsonSerialization","MemoryImmutableFileDigestCacheProvider","Ok","Store","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","ensure_dir_exist","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","init","init","init","init","init","init","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","reset","reset","reset","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","should_reset_digests_cache","source","source","source","store","store","store","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","with_logger","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Beacon","BeaconComparison","BeaconComparisonError","BeaconOlderThanPreviousBeacon","BlockNumber","BothGreater","CardanoImmutableFilesFull","CardanoImmutableFilesFull","CardanoNetwork","CardanoStakeDistribution","CardanoStakeDistribution","CardanoTransaction","CardanoTransactions","CardanoTransactions","CardanoTransactionsCommitment","CardanoTransactionsMerkleRoot","CardanoTransactionsSetProof","Certificate","CertificateMetadata","CertificatePending","CertificateSignature","ClientError","CompressionAlgorithm","DevNet","Epoch","EpochError","EpochOffset","EpochSettings","Equal","GenesisSignature","GreaterEpoch","GreaterImmutableFileNumber","Gzip","HexEncodedAgregateVerificationKey","HexEncodedDigest","HexEncodedEraMarkersSecretKey","HexEncodedGenesisSecretKey","HexEncodedGenesisVerificationKey","HexEncodedKey","HexEncodedKeySlice","HexEncodedOpCert","HexEncodedSingleSignature","HexEncodedVerificationKey","HexEncodedVerificationKeySignature","ImmutableFileName","ImmutableFileNumber","InternalServerError","LotteryIndex","MagicId","MainNet","MithrilStakeDistribution","MithrilStakeDistribution","MithrilStakeDistribution","MultiSignature","NEXT_SIGNER_RETRIEVAL_OFFSET","NetworkNotMatch","NextAggregateVerificationKey","PROTOCOL_PARAMETERS_RECORDING_OFFSET","PartyId","ProtocolMessage","ProtocolMessagePartKey","ProtocolMessagePartValue","ProtocolParameters","ProtocolVersion","SIGNER_RECORDING_OFFSET","SIGNER_RETRIEVAL_OFFSET","SIGNER_SIGNING_OFFSET","SignedEntity","SignedEntityType","SignedEntityTypeDiscriminants","Signer","SignerWithStake","SingleSignatures","Snapshot","SnapshotDigest","Stake","StakeDistribution","StakeDistributionParty","TestNet","TransactionHash","Zstandard","add","add","add_assign","add_assign","aggregate_verification_key","artifact","as_ref","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon","beacon","beacon","beacon","block_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardano_node_version","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_id","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","code","compare","compare","compare","compare","compare_to_older","compression_algorithm","compute_hash","compute_hash","compute_hash","compute_hash","compute_hash","compute_hash","compute_hash","compute_hash","created_at","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","dummy","dummy","epoch","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_space_snapshot_ratio","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_beacon","from_code","from_id","from_signer","from_signers","from_str","get_epoch","get_id","get_id","get_id","get_json_beacon","get_message_part","get_open_message_timeout","get_signer","get_stake_distribution","has_gap_with","hash","hash","hash","hash","hash","hash","immutable_file_number","immutable_file_number","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initiated_at","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_chaining_to_itself","is_genesis","is_new_beacon","is_new_epoch","iter","k","kes_period","kes_period","label","list","locations","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","m","match_message","merkle_root","merkle_root","message","message","message_parts","metadata","network","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next_protocol_parameters","next_protocol_parameters","next_signers","offset_by","offset_to_next_signer_retrieval_epoch","offset_to_protocol_parameters_recording_epoch","offset_to_recording_epoch","offset_to_signer_retrieval_epoch","offset_to_signer_signing_offset","operational_certificate","operational_certificate","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","party_id","party_id","party_id","party_id","phi_f","phi_f_fixed","previous","previous_hash","protocol_message","protocol_parameters","protocol_parameters","protocol_parameters","protocol_parameters","protocol_version","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sealed_at","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_message_part","signature","signature","signed_entity_id","signed_entity_type","signed_entity_type","signed_message","signers","signers","signers_with_stake","size","stake","stake","sub","sub","sub_assign","sub_assign","tar_file_extension","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_protocol_signature","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction_hash","transactions_hashes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vec_from","verification_key","verification_key","verification_key_signature","verification_key_signature","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","won_indexes","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AdapterFailure","CurrentEraNotFound","EraChecker","EraEpochToken","EraMarker","EraReader","EraReaderAdapter","EraReaderError","SupportedEra","SupportedEraIter","Thales","adapters","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","change_era","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_epoch","current_era","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","dummy","epoch","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eras","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","get_current_epoch","get_current_era_marker","get_current_supported_era","get_next_era_marker","get_next_supported_era","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_era_active","iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new","next","next_back","nth","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","par_bridge","read","read_era_epoch_token","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","size_hint","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","epoch","eras","error","message","Bootstrap","CardanoChain","Dummy","EraMarkersPayloadCardanoChain","EraReaderAdapterBuilder","EraReaderAdapterType","EraReaderBootstrapAdapter","EraReaderCardanoChainAdapter","EraReaderDummyAdapter","EraReaderFileAdapter","File","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_json_hex","from_markers","init","init","init","init","init","init","init","into","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","markers","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","read","read","read","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","set_markers","sign","signature","to_json_hex","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verify_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CardanoTransactionCommitmentListItemMessage","CardanoTransactionCommitmentListMessage","CardanoTransactionCommitmentMessage","CardanoTransactionsProofsMessage","CardanoTransactionsSetProofMessagePart","CertificateListItemMessage","CertificateListItemMessageMetadata","CertificateListMessage","CertificateMessage","CertificateMetadataMessagePart","CertificatePendingMessage","EpochSettingsMessage","FromMessageAdapter","InvalidSetProof","MalformedData","MithrilStakeDistributionListItemMessage","MithrilStakeDistributionListMessage","MithrilStakeDistributionMessage","NoCertifiedTransaction","NonMatchingMerkleRoot","RegisterSignatureMessage","RegisterSignerMessage","SignerMessagePart","SignerWithStakeMessagePart","SnapshotDownloadMessage","SnapshotListItemMessage","SnapshotListMessage","SnapshotMessage","ToMessageAdapter","TryFromMessageAdapter","TryToMessageAdapter","VerifiedCardanoTransactions","VerifyCardanoTransactionsProofsError","adapt","adapt","aggregate_verification_key","aggregate_verification_key","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon","beacon","beacon","beacon","beacon","beacon","beacon","beacon","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardano_node_version","cardano_node_version","cardano_node_version","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certificate_hash","certified_transactions","certified_transactions","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression_algorithm","compression_algorithm","compression_algorithm","created_at","created_at","created_at","created_at","created_at","created_at","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","digest","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","epoch","epoch","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fill_protocol_message","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_signers","genesis_signature","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initiated_at","initiated_at","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kes_period","kes_period","kes_period","locations","locations","locations","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","match_message","merkle_root","merkle_root","metadata","metadata","multi_signature","new","next_protocol_parameters","next_protocol_parameters","next_signers","non_certified_transactions","operational_certificate","operational_certificate","operational_certificate","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","party_id","party_id","party_id","party_id","previous_hash","previous_hash","proof","protocol_message","protocol_message","protocol_parameters","protocol_parameters","protocol_parameters","protocol_parameters","protocol_parameters","protocol_version","protocol_version","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sealed_at","sealed_at","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signed_entity_type","signed_entity_type","signed_message","signed_message","signers","signers","signers_with_stake","size","size","size","source","stake","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_signers","transactions_hashes","transactions_hashes","try_adapt","try_adapt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_signers","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verification_key","verification_key","verification_key","verification_key_signature","verification_key_signature","verification_key_signature","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","won_indexes","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","source","transactions_hashes","EmptySigners","MultiSigner","SignerBuilder","SignerBuilderError","SingleSigner","aggregate_single_signatures","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_multi_signer","build_single_signer","build_test_single_signer","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","compute_aggregate_verification_key","compute_aggregate_verification_key","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","get_party_id","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","restore_signer_from_initializer","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sign","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verify_single_signature","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Artifact","Beacon","CardanoImmutableFilesFullSignableBuilder","CardanoTransactionsSignableBuilder","MithrilSignableBuilderService","MithrilStakeDistributionSignableBuilder","SignableBuilder","SignableBuilderService","TransactionStore","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","compute_protocol_message","compute_protocol_message","compute_protocol_message","compute_protocol_message","compute_protocol_message","compute_protocol_message","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","get_id","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","store_transactions","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Custom","MithrilFixture","MithrilFixtureBuilder","RandomDistribution","SignerFixture","StakeDistributionGenerationMethod","TempDir","Uniform","apispec","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build_path","cardano_cli_stake_distribution","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","compute_and_encode_avk","compute_avk","compute_protocol_party_id_as_hash","create","create_genesis_certificate","create_with_short_path","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_signers_certification","drop","drop","drop","drop","drop","fake_data","fake_keys","fmt","fmt","from","from","from","from","from","generate_shorter_path","init","init","init","init","init","into","into","into","into","into","kes_secret_key_path","kes_secret_key_path","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","operational_certificate","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","party_id","protocol_initializer","protocol_parameters","protocol_signer","protocol_stake_distribution","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_short_path_max_len","sign","sign_all","signer_with_stake","signers","signers_fixture","signers_with_stake","stake_distribution","stake_distribution_parties","test_http_server","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verification_key","verification_key_signature","vzip","vzip","vzip","vzip","vzip","with_party_id_seed","with_protocol_parameters","with_signers","with_stake_distribution","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","seed","APISpec","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","content_type","deref","deref_mut","drop","from","from_file","get_all_spec_files","get_defaut_spec_file","get_era_spec_file","init","into","lossless_try_into","lossy_into","method","overflowing_as","overflowing_cast_from","path","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","validate_conformity","validate_request","validate_response","verify_conformity","vzip","wrapping_as","wrapping_cast_from","beacon","cardano_transactions_commitment","certificate","certificate_pending","digest","epoch_settings","genesis_certificate","mithril_stake_distributions","protocol_parameters","signers","signers_with_stakes","single_signatures","snapshots","aggregate_verification_key","genesis_signature","genesis_verification_key","multi_signature","operational_certificate","signer_verification_key","signer_verification_key_signature","single_signature","TestHttpServer","address","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","test_http_server","test_http_server_with_socket_address","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","url","vzip","wrapping_as","wrapping_cast_from"],"q":[[0,"mithril_common"],[52,"mithril_common::api_version"],[89,"mithril_common::cardano_transaction_parser"],[151,"mithril_common::certificate_chain"],[292,"mithril_common::chain_observer"],[739,"mithril_common::crypto_helper"],[1400,"mithril_common::crypto_helper::tests_setup"],[1406,"mithril_common::digesters"],[1782,"mithril_common::digesters::ImmutableDigesterError"],[1785,"mithril_common::digesters::ImmutableFileCreationError"],[1787,"mithril_common::digesters::cache"],[1994,"mithril_common::entities"],[3307,"mithril_common::era"],[3572,"mithril_common::era::EraReaderError"],[3576,"mithril_common::era::adapters"],[3812,"mithril_common::messages"],[4749,"mithril_common::messages::VerifyCardanoTransactionsProofsError"],[4751,"mithril_common::protocol"],[4875,"mithril_common::signable_builder"],[5004,"mithril_common::test_utils"],[5195,"mithril_common::test_utils::StakeDistributionGenerationMethod"],[5196,"mithril_common::test_utils::apispec"],[5234,"mithril_common::test_utils::fake_data"],[5247,"mithril_common::test_utils::fake_keys"],[5255,"mithril_common::test_utils::test_http_server"],[5287,"core::option"],[5288,"core::future::future"],[5289,"alloc::boxed"],[5290,"core::pin"],[5291,"alloc::sync"],[5292,"core::result"],[5293,"core::any"],[5294,"semver"],[5295,"alloc::vec"],[5296,"semver"],[5297,"std::path"],[5298,"core::fmt"],[5299,"core::fmt"],[5300,"core::error"],[5301,"alloc::string"],[5302,"serde::de"],[5303,"erased_serde::ser"],[5304,"erased_serde::ser"],[5305,"core::fmt"],[5306,"serde_json::value"],[5307,"core::hash"],[5308,"std::path"],[5309,"serde::ser"],[5310,"rand_core"],[5311,"rand_core"],[5312,"core::fmt"],[5313,"typenum::generated::consts"],[5314,"blake2"],[5315,"mithril_stm::stm"],[5316,"ed25519_dalek::signing"],[5317,"ed25519_dalek::verifying"],[5318,"mithril_stm::stm"],[5319,"mithril_stm::stm"],[5320,"core::convert"],[5321,"core::cmp"],[5322,"std::io::error"],[5323,"std::io"],[5324,"digest::digest"],[5325,"core::num::error"],[5326,"serde_json::error"],[5327,"core::time"],[5328,"chrono::offset::utc"],[5329,"chrono::datetime"],[5330,"fixed::types"],[5331,"rayon::iter::par_bridge"],[5332,"serde::de"],[5333,"http::response"],[5334,"core::net::socket_addr"],[5335,"warp::filter"],[5336,"core::marker"],[5337,"core::marker"]],"d":["Provide the current Beacon of a cardano node.","A BeaconProvider using a ChainObserver and a …","","Contains the error value","Mithril API protocol version header name","Mithril Signer node version header name","","Contains the success value","Generic error type","Generic result type","API Version provider service","","","","The module used for parsing Cardano transactions","","Tools to retrieve, validate the Certificate Chain created …","Tools to request metadata, like the current epoch or the …","","","Tools and types to abstract the use of the Mithril STM …","","","Tools to compute mithril digest from a Cardano node …","","The entities used by, and exchanged between, the …","The module used for handling eras","Macro used to mark the code that should be cleaned up when …","Returns the argument unchanged.","Get the current Beacon of the cardano node.","","","Calls <code>U::from(self)</code>.","","","Messages module This module aims at providing shared …","BeaconProviderImpl factory.","","","Protocol module","","","The module used for building signables","Test utilities","","","","","","","","","API Version provider","Open API file name","","","","","","","","","Compute all the sorted list of all versions","Compute the current api version","Compute the current api version requirement","","","","Returns the argument unchanged.","Build Open API versions mapping","","Calls <code>U::from(self)</code>.","","","Version provider factory","","","","","","","","","","","Update open api versions. Test only","","","","Cardano transaction parser","Dumb transaction parser","A parser that can read cardano transactions in a cardano …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Factory","Factory","","","","","Parse the transactions","","","","","","","","","","","","","","","","","Update transactions returned by <code>parse</code>","","","","","","","Error raised when validating the certificate chain if the …","Error raised when validating the certificate chain if the …","Error raised when validating the certificate chain if a …","Error raised when the Genesis Signature stored in a …","CertificateGenesisProducer is in charge of producing a …","Error raised when the hash stored in a Certificate doesn’…","CertificateRetriever is in charge of retrieving a …","CertificateRetriever related errors.","CertificateVerifier is the cryptographic engine in charge …","CertificateVerifier related errors.","Error raised when …","MithrilCertificateVerifier is an implementation of the …","Error raised when the multi signatures verification fails.","","","","","","","","","","","","","","","","","","","","","","","","","Create a Genesis Certificate","Create the Genesis protocol message","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get Certificate details","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","MithrilCertificateVerifier factory","CertificateGenesisProducer factory","","","","","","","","","","","","","","","","","Sign the Genesis protocol message (test only)","","","","","","","","","","","","","","","","","","","","","","","","","Verify if a Certificate is valid and returns the previous …","Verify a certificate","Verify that the Certificate Chain associated to a …","Verify that the Certificate Chain associated to a …","Verify Genesis certificate","Verify Genesis certificate","still a dirty hack to mock the protocol message verify …","still a dirty hack to mock the protocol message verify …","","","","","","","","","","","","","Error raised when building the tx datum failed.","Bytes datum field value.","Bytes datum field value.","Cardano Cli chain observer.","A ChainObserver pulling it’s data using a …","A runner able to request data from a Cardano node using the","ChainAddress represents an on chain address.","Retrieve data from the cardano network","Chain observer builder","ChainObserver related errors.","Type of chain observers available","<code>CliRunner</code> trait defines the asynchronous methods for …","Fake chain observer.","A Fake ChainObserver for testing purpose using fixed data.","Generic ChainObserver error.","Integer datum field value","Integer datum field value","Error raised when the content could not be parsed.","Error raised when the content could not be parsed.","Pallas chain observer.","A runner that uses Pallas library to interact with a …","TxDatum represents transaction Datum.","TxDatumBuilder is a TxDatum builder utility.","TxDatum related errors.","Auto-generated discriminant enum variants","TxDatumFieldValue represents a field value of TxDatum.","Add a field to the builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a TxDatum","Create chain observer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Beacon, used by get_current_epoch","A list of TxDatum, used by get_current_datums","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the datums associated to an address","","","","Retrieve the current epoch of the Cardano network","","","","Retrieve the KES period of an operational certificate","Retrieve the KES period of an operational certificate","","","","Retrieve the current stake distribution of the Cardano …","","","","Retrieves the fields of the datum with given type","Retrieves the nth field of the datum with given type","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Launches the epoch info.","","Launches the kes period.","","Launches the stake distribution.","","Launches the stake snapshot.","","Launches the stake snapshot for all pools.","","Launches a UTxO.","","","","","","","","","","","","","","","","","","","","","","","","","","TxDatumBuilder factory","Chain observer builder factory","CardanoCliChainObserver factory","Creates a new PallasObserver while accepting a fallback …","CardanoCliRunner factory","FakeObserver factory","Increase by one the epoch of the current_beacon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the datums that will used to compute the result of …","Set the signers that will used to compute the result of …","A list of SignerWithStake, used for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error raised when the encoding or decoding fails","","Error raised when a core registration error occurs","Error raised when a core registration error occurs","The description of the Cardano key","A cryptographic signer that is responsible for signing the …","An era markers verifier that checks the authenticity of …","EraMarkersSigner and EraMarkersVerifier related errors.","Wrapper of Ed25519:SigningKey.","Wrapper of Ed25519:Signature.","Wrapper of Ed25519:PublicKey.","The KES period that is used to check if the KES keys is …","Period of key file does not match with period provided by …","Period of key file does not match with period provided by …","Error raised when a KES Period is needed but not provided","Error raised when a KES Period is needed but not provided","Error raised when a KES Signature verification fails","Error raised when a KES Signature verification fails","Error raised when a KES Signature is needed but not …","Error raised when a KES Signature is needed but not …","Error raised when a KES update error occurs","Error raised when a KES update error occurs","A Merkle proof","A Merkle tree","A node of a Merkle tree","A Merkle tree store","Not enough signatures were collected, got this many …","Parsed Operational Certificate","Error raised when an operational certificate is invalid","Error raised when an operational certificate is invalid","Error raised when the operational certificate is missing","Error raised when the operational certificate is missing","The current protocol version","Error raised when a party id is needed but not provided","Error raised when a party id is needed but not provided","Error raised when a party id is not available in the …","Error raised when a party id is not available in the …","Error raised when a pool address encoding fails","Error raised when a pool address encoding fails","Wrapper of MithrilStm:StmAggrVerificationKey.","Alias of MithrilStm:AggregationError.","Alias of MithrilStm:StmClerk.","Alias of a wrapper of MithrilStm:ClosedKeyReg.","ProtocolGenesisSigner and ProtocolGenesisVerifier related …","Wrapper of Ed25519:SigningKey.","Wrapper of Ed25519:Signature.","A protocol Genesis Signer that is responsible for signing …","Wrapper of Ed25519:PublicKey.","A protocol Genesis Verifier that is responsible for …","Alias of a wrapper of MithrilStm:StmInitializer.","Error raised when the underlying protocol initializer fails","Error raised when the underlying protocol initializer fails","Alias of a wrapper of …","New initializer error","A ProtocolKey is a wrapped that add Serialization …","The codec used to serialize/deserialize a ProtocolKey.","Alias of a wrapper of MithrilStm:KeyReg.","Alias of MithrilStm::Index.","Wrapper of MKProof to add serialization utilities.","Wrapper of MithrilStm:StmAggrSig to add serialization …","Wrapper of OpCert to add serialization utilities.","Alias of MithrilStm::StmParameters.","The id of a mithril party.","Alias of a wrapper of …","New registration error","Alias of MithrilStm:StmSigner.","Wrapper of MithrilStm:StmVerificationKeyPoP to add …","Wrapper of KES:Sum6KesSig to add serialization utilities.","Wrapper of MithrilStm:StmSig to add serialization …","Alias of MithrilStm:Stake.","A list of Party Id associated with its Stake.","A protocol version","Trait that allows any structure that implements Serialize …","Error raised when a Signature verification fail","We need to create this struct because the design of …","The type of Cardano key","This error happens when we try to convert a u64 to a usize …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the hash of an OpCert","Generate Merkle proof of memberships in the tree","Compute protocol party id as pool id bech 32","Compute protocol party id as hash","Generate root of the Merkle tree","Check if the proof contains the given leaves","ProtocolGenesisSigner deterministic","EraMarkersSigner deterministic","Create a ProtocolGenesisVerifier","ProtocolGenesisSigner non deterministic","EraMarkersSigner non deterministic","ProtocolGenesisSigner factory","EraMarkersSigner factory","Create a EraMarkersVerifier","Do the decoding of the given key","Do the decoding of the given key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do the encoding of the given key","Do the encoding of the given key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Create an instance from a bytes representation","Create an instance from a bytes representation","Create an instance from a bytes hex representation","Create an instance from a bytes hex representation","Deserialize a type <code>T: Serialize + DeserializeOwned</code> from …","Deserialize a type <code>T: Serialize + DeserializeOwned</code> from …","Deserialize a Cardano key from file. Cardano KES key …","Create a MKTreeNode from a hex representation","Create an instance from a JSON hex representation","Build a MKProof based on the given leaves (<em>Test only</em>).","EraMarkersSigner from EraMarkersVerifierSecretKey","ProtocolGenesisSigner from ProtocolGenesisSecretKey","Build a MKProof based on the given leaves (<em>Test only</em>).","EraMarkersVerifier from EraMarkersVerifierVerificationKey","ProtocolGenesisVerifier from ProtocolGenesisVerificationKey","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Quorum parameter.","Decode key from hex helper","Encode key to hex helper","Create a bytes hash representation of the given key","Create a bytes hash representation of the given key","Create a JSON hash representation of the given key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Security parameter, upper bound on indices.","Unique public key out of the key registration instance.","MKTree factory","OpCert factory / test only","CodecError factory.","MKTreeNode factory","Create a ProtocolKey from the given key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>f</code> in phi(w) = 1 - (1 - f)^w, where w is the stake of a …","Ordered list of registered parties.","Return a reference to its merkle root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Signs a message and returns a EraMarkersVerifierSignature","Signs a message and returns a ProtocolGenesisSignature","","","","","","KES period at which KES key is initalized","Test data builders for Mithril STM types, for testing …","Create a bytes hash representation of the key","Create a bytes hash representation of the key","Serialize a type <code>T: Serialize + DeserializeOwned</code> to file …","Serialize a type <code>T: Serialize + DeserializeOwned</code> to file …","Create a hex representation of the MKTreeNode","Create a JSON hash representation of the key","","","","","","","","","","","","","","EraMarkersVerifier to EraMarkersVerifierVerificationKey","ProtocolGenesisVerifier to ProtocolGenesisVerificationKey","Number of leaves in the Merkle tree","Total stake of the registered parties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a certificate","Verifies the genesis signature of a message","Verifies the signature of a message","Verifies the genesis signature of a message","Verification of a Merkle proof","Verifies the genesis signature of a message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instantiate a certificate chain, use this for tests only.","Instantiate a Genesis Signer and its associated Verifier","Instantiate a ProtocolMessage using fake data, use this …","Instantiate a ProtocolParameters, use this for tests only.","Instantiate a list of protocol signers based on the given …","Create or retrieve a temporary directory for storing …","A digester working directly on a Cardano DB immutables …","Error raised when the digest computation failed.","A ImmutableDigester returning configurable result for …","An ImmutableFileObserver yielding fixed results for tests …","A dummy cardano immutable db.","A DummyImmutableDb builder.","Raised when the immutable file filename extraction fails.","Raised when the immutable file number parsing, from the …","Raised when the immutable file stem extraction fails.","A digester than can compute the digest used for mithril …","ImmutableDigester related Errors.","Represent an immutable file in a Cardano node database …","Raised when ImmutableFile::new fails.","ImmutableFile::new related errors.","Raised when immutable file listing fails.","ImmutableFile::list_completed_in_dir related errors.","Retrieve data on ImmutableFile from a cardano database.","ImmutableFileObserver related errors.","An ImmutableFileObserver using the filesystem.","Error raised when the files listing failed.","Raised when the metadata of a file could not be read.","Raised when the no immutables files were available.","Raised when the “immutable” folder could not be found …","Error raised when there’s less than the required number …","Add an immutable chunk file and its primary &amp; secondary to …","Makes build add another trio of immutables file, that won…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a DummyImmutableDb.","Cache provider to accelerate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the digest","","","Compute the hash of this immutable file.","","","","","","","","","","","","","","","","","","","","","","","","","The dummy cardano db directory path.","","","","","","","","","","","","","","","","The filename","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Get the ImmutableFileNumber of the last immutable file in …","","","The immutables files in the dummy cardano db.","Increase by one the stored immutable file number, return …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the file number of the last immutable","List all <code>ImmutableFile</code> in a given directory.","","","","","","","","","","","","","","","","","","","","","","","ImmutableDigester factory","DumbDigester factory","ImmutableFileSystemObserver factory.","DumbImmutableFileObserver factory.","ImmutableFile factory","DummyImmutablesDbBuilder factory, will create a folder …","Files that doesn’t follow the immutable file name scheme …","The immutable file number","","","","","","","","","","","","","","","","","","","","","","","","The path to the immutable file","","","","","","","","","","","","","","","","","","","","","","","Set the size of all files written by build to the given …","Update the stored immutable file number.","The ImmutableFileNumber that shall be returned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update digest returned by compute_digest","","","","","","","","","","","","Set the immutables file number that will be used to …","Set filenames to write to the db that doesn’t follow the …","","","","","","","","","","","","","","","","","","","","","","","A cardano node DB directory","Expected last ImmutableFileNumber.","Last ImmutableFileNumber found when listing ImmutableFiles.","Path for which file stem extraction failed.","Path for which filename extraction failed.","A specialized result type for …","Contains the error value","Error raised by ImmutableFileDigestCacheProvider::get.","ImmutableFileDigestCacheProvider::get related errors.","ImmutableFileDigestCacheProvider related errors.","ImmutableFileDigestCacheProvider::store related errors.","A cache provider that store individual ImmutableFile …","Raised when an IO error is raised when getting a cache.","Raised when an IO error is raised when storing a cache.","Raised when json cache deserialization fails.","A in memory ImmutableFileDigestCacheProvider.","A JsonImmutableFileDigestCacheProvider builder.","Raised when json cache serialization fails.","A in memory ImmutableFileDigestCacheProvider.","Contains the success value","Error raised by ImmutableFileDigestCacheProvider::store.","","","","","","","","","","","","","","","","","","","Build a JsonImmutableFileDigestCacheProvider based on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set will create the cache directory if it doesn’t …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Build a new MemoryImmutableFileDigestCacheProvider that …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Associate each given immutable files with a cached value …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","JsonImmutableFileDigestCacheProvider factory","JsonImmutableFileDigestCacheProviderBuilder factory.","","","","","","","","","","","","","Reset the stored values","","","","","","","","","","","","","","","Set if existing cached values in the provider must be …","","","","Store the given digests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the Logger to use.","","","","","","","","","","","","","Beacon represents a point in the Cardano chain at which a …","A BeaconComparison is the result of the comparison between …","Beacon::compare_to_older related errors.","Error raised the newest beacon has oldest data than the “…","BlockNumber is the block number of a cardano transaction.","The current beacon has both a newer epoch and newer …","Full Cardano Immutable Files","Full Cardano Immutable Files","The Cardano Network that is being targeted","Cardano Stake Distribution","Cardano Stake Distribution","Cardano transaction representation","Cardano Transactions","Cardano Transactions","Commitment of a set of Cardano transactions","The ProtocolMessage part key associated to the Cardano …","A cryptographic proof of a set of Cardano transactions is …","Certificate represents a Mithril certificate embedding a …","CertificateMetadata represents the metadata associated to …","CertificatePending represents a pending certificate in the …","The signature of a Certificate","Representation of a Client Error raised by an http server","Compression algorithm for the snapshot archive artifacts.","A Cardano private devnet","Epoch represents a Cardano epoch","EpochError is an error triggerred by an Epoch","Error raised when the computation of an epoch using an …","EpochSettings represents the settings of an epoch","The current beacon has an equal epoch and immutable file …","Genesis signature created from the original stake …","The current beacon has a newer epoch than the older beacon.","The current beacon has a newer immutable file number than …","Gzip compression format","Hex encoded Aggregate Verification Key","Hex encoded Sha256 Digest","Hex encoded Era Markers Secret Key","Hex encoded Genesis Secret Key","Hex encoded Genesis Verification Key","Hex encoded key","Hex encoded key slice","Hex encoded Operational Certificate","Hex encoded Single Signature","Hex encoded Verification Key","Hex encoded Verification Key Signature","ImmutableFileName represents the filename, with extension, …","ImmutableFileNumber represents the id of immutable files …","Representation of a Internal Server Error raised by an …","LotteryIndex represents the index of a Mithril single …","Cardano Network magic identifier","The Cardano mainnet network","Mithril Stake Distribution","Mithril stake distribution","Mithril stake distribution","STM multi signature created from a quorum of single …","The epoch offset used to retrieve the signers stake …","Error raised when a comparison between beacons from …","The ProtocolMessage part key associated to the Next epoch …","The epoch offset used for aggregator protocol parameters …","PartyId represents a signing party in Mithril protocol","ProtocolMessage represents a message that is signed (or …","The key of a ProtocolMessage","The value of a ProtocolMessage","Protocol cryptographic parameters","Protocol version","The epoch offset used for signers stake distribution and …","The epoch offset used for signers stake distribution and …","The epoch offset used to retrieve, given the epoch at …","Aggregate for signed entity","The signed entity type that represents a type of data …","Auto-generated discriminant enum variants","Signer represents a signing participant in the network","Signer represents a signing party in the network …","SingleSignatures represent single signatures originating …","Snapshot represents a snapshot file and its metadata","The ProtocolMessage part key associated to the Snapshot …","Stake represents the stakes of a participant in the …","StakeDistribution represents the stakes of multiple …","This represents a stake holder.","A Cardano test network (testnet, preview, or preprod)","TransactionHash is the unique identifier of a cardano …","Zstandard compression format","","","","","Aggregate verification key The AVK used to sign during the …","Artifact","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Beacon of the Cardano transactions set","Mithril beacon on the Cardano chain aka BEACON(p,n)","Current Beacon","Mithril beacon on the Cardano chain","Block number of the transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the Cardano node used to create snapshot …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Certificate id for this signed entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the code (magic) of the network","","","","","This method returns a BeaconOrdering between self and the …","Compression algorithm of the snapshot archive","Computes the hash of a Beacon","Computes the hash of a Certificate","As a sub structure of certificate, Party must be hashable.","Computes the hash of the certificate metadata","Computes the hash of the protocol message","Computes the hash of ProtocolParameters","Computes the hash of Signer","Computes the hash of SignerWithStake","Date and time when the signed_entity was created","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digest that is signed by the signer participants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a dummy proof (for test only)","Create a dummy SignedEntity for Snapshot entity","Create a dummy SignedEntity for MithrilStakeDistribution …","Create a dummy SignedEntity for …","Retrieve a dummy enty (for test only)","Cardano chain epoch number","Current Epoch","Epoch at which the Mithril Stake Distribution is created","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Those ratio will be multiplied by the snapshot size to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a SignedEntityType from beacon and …","Instantiates a CardanoNetwork from its code and magic id","Get the discriminant associated with the given id","Turn a Signer into a SignerWithStake.","Transform a list of signers into a list of `…","","Return the epoch from the intern beacon.","","","","Return a JSON serialized value of the internal beacon","Get the message part associated with a key","Return the associated open message timeout","get a signer from the certificate pending if it has …","Deduce the stake distribution from the metadata signers","Check if there is a gap with another Epoch.","","","","Hash of the Cardano transactions set","Hash of the current certificate Computed from the other …","Hash of the Mithril Stake Distribution (different from the …","Number of the last included immutable files for the digest …","Immutable file number of the transaction","Get the database value from enum’s instance","Get the database value from enum’s instance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was initiated …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the certificate is chaining into itself …","Tell if the certificate is a genesis certificate","Returns true if this comparison result isn’t equal.","Returns true if this comparison have a greater epoch but …","","Quorum parameter","The kes period used to compute the verification key …","The kes period used to compute the verification key …","error label","List all the available algorithms.","Locations where the binary content of the snapshot can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Security parameter (number of lotteries)","Check that the certificate signed message match the given …","Return the hex encoded merkle root of this proof","Merkle root of the Cardano transactions set","error message","error message","Map of the messages combined into the digest aka MSG(p,n)","Certificate metadata aka METADATA(p,n)","Cardano network","Beacon factory","CardanoTransaction factory","Creates a new CardanoTransactionsCommitment","CardanoTransactionsSetProof factory","Certificate factory","CertificateMetadata factory","CertificatePending factory","InternalServerError factory","ClientError factory","MithrilStakeDistribution artifact factory","ProtocolMessage factory","ProtocolParameters factory","Signer factory","SignerWithStake factory","SingleSignature factory","Snapshot factory","Computes the next Epoch","Next Protocol parameters","Next Protocol parameters","Signers that will be able to sign on the next epoch","Computes a new Epoch by applying an epoch offset.","Apply the next signer retrieval offset to this epoch","Apply the protocol parameters recording offset to this …","Apply the recording offset to this epoch","Apply the retrieval offset to this epoch","Apply the signer signing offset to this epoch","The encoded operational certificate of stake pool operator …","The encoded operational certificate of stake pool operator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Party identifier as in the stake distribution","The unique identifier of the signer","The unique identifier of the signer","The unique identifier of the signer","f in phi(w) = 1 - (1 - f)^w, where w is the stake of a …","phi_f_fixed is a fixed decimal representatio of phi_f used …","Computes the previous Epoch","Hash of the previous certificate in the chain This is …","Structured message that is used to created the signed …","Protocol parameters part of METADATA(p,n)","Current Protocol parameters","Current Protocol parameters","Protocol parameters used to sign this stake distribution","Protocol Version (semver) Useful to achieve backward …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was sealed Represents …","","","","","","","","","","","","","","","","","","","","Set the message part associated with a key Returns …","Certificate signature","The single signature of the digest","Signed entity id.","Signed entity type","Signed entity type.","Message that is signed by the signers aka H(MSG(p,n) || …","The list of the active signers with their stakes and …","Current Signers","List of signers with stakes of the Mithril Stake …","Size of the snapshot file in Bytes","Amount of stake owned by the party.","The signer stake","","","","","Get the extension associated to tar archive using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this SingleSignatures to its corresponding …","","","","","","","","","Unique hash of the transaction","Get the hashes of the transactions certified by this proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the given values to a vec of signers.","The public key used to authenticate signer signature","The public key used to authenticate signer signature","The encoded signer ‘Mithril verification key’ …","The encoded signer ‘Mithril verification key’ …","Verify that transactions set proof is valid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The indexes of the won lotteries that lead to the single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Underlying adapter fails to return data.","Data returned from the adapter are inconsistent or …","EraChecker allows the verification of the current era","This is a response from the EraReader. It contains …","Value object that represents a tag of Era change.","The EraReader is responsible of giving the current Era and …","Adapters are responsible of technically reading the …","Error type when EraReader fails to return a EraEpochToken.","The era that the software is running or will run","An iterator over the variants of SupportedEra","Thales era","Module dedicated to EraReaderAdapter implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the current era","","","","","","","","","","","","","","","","","","","","","","","Retrieve the Epoch the checker was the last updated.","Retrieve the current era","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a dummy era (for test only)","Eventual information that advertises the Epoch of …","","","","","","","","","","","","","Retrieve the list of supported eras","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return the epoch the Token has been created at","Return the EraMarker of the current Era.","Try to cast the current EraMarker to a SupportedEra. If it …","Return the EraMarker for the coming Era if any.","Try to cast the next EraMarker to a SupportedEra. If it …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Check if an era is active","","","","","","","","","","","","","","","","","Era name","Era checker factory","Instantiate the EraReader injecting the adapter.","instantiate a new EraMarker.","Instanciate a new EraMarker.","","","","","","","","","","","","","","","","","","","Read era markers from the underlying adapter.","This methods triggers the adapter to read the markers from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current Epoch","Eras given by the adapter","nested underlying adapter error","context message","Bootstrap adapter.","Cardano chain adapter.","Dummy adapter.","Era markers payload","Era adapter builder","Type of era reader adapters available","The goal of the bootstrap adapter is to advertise for the …","Cardano Chain adapter retrieves era markers on chain","Dummy adapter is intended to be used in a test environment …","File adapter is intended to be used in a test environment …","File adapter.","","","","","","","","","","","","","","","","","","","","","","Create era reader adapter from configuration settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decode a EraMarkersPayload from a json hex string","Create a new instance directly from markers","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","List of Era markers","Era reader adapter builder factory","CardanoChainAdapter factory","File adapter factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tells what markers should be sent back by the adapter.","Sign an era markers payload","Era markers signature","Encode this payload to a json hex string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the signature an era markers payload","","","","","","","","","","","","","","","","","","","","","","Message structure of a Cardano Transactions Commitment …","Message structure of a Cardano Transactions Commitments …","Message structure of a Cardano Transactions commitment","A cryptographic proof for a set of Cardano transactions","A cryptographic proof of a set of Cardano transactions is …","Message structure of a certificate list item","CertificateListItemMessage represents the metadata …","Message structure of a certificate list","Message structure of a certificate","CertificateMetadata represents the metadata associated to …","Structure to transport crate::entities::CertificatePending …","EpochSettings represents the settings of an epoch","From message adapter trait","The verification of an individual …","An individual CardanoTransactionsSetProofMessagePart could …","Message structure of a Mithril Stake Distribution list item","Message structure of a Mithril Stake Distribution list","Message structure of a Mithril Stake Distribution","No certified transactions set proof to verify","Not all certified transactions set proof have the same …","Message structure to register single signature.","Register Signer Message","Signer Message","Signer with Stake Message","Message structure of a snapshot","Message structure of a snapshot list item","Message structure of a snapshot list","Message structure of a snapshot","To message adapter trait","TryFrom message adapter trait","TryTo message adapter trait","Set of transactions verified by …","Error encountered or produced by the cardano transaction …","Adapt entity to message","Adapt message to entity","Aggregate verification key The AVK used to sign during the …","Aggregate verification key The AVK used to sign during the …","","","","","","","","","","","","","","","","","","","","","","Beacon of the Cardano transactions commitment","Beacon of the Cardano transactions commitment","Mithril beacon on the Cardano chain aka BEACON(p,n)","Mithril beacon on the Cardano chain aka BEACON(p,n)","Current Beacon","Mithril beacon on the Cardano chain","Mithril beacon on the Cardano chain","Mithril beacon on the Cardano chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano node version","Cardano node version","Cardano node version","","","","","","","","","","","","","","","","","","","","","","Hash of the certificate that signs this struct Merkle root.","Hash of the associated certificate","Hash of the associated certificate","Hash of the certificate that validate this proof merkle …","Hash of the associated certificate","Hash of the associated certificate","Hash of the associated certificate","Hash of the associated certificate","Hashes of the certified transactions","Transactions that have been certified","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compression algorithm of the snapshot archive","Compression algorithm of the snapshot archive","Compression algorithm of the snapshot archive","DateTime of creation","DateTime of creation","DateTime of creation","Date and time at which the Mithril Stake Distribution was …","Date and time at which the snapshot was created","Date and time at which the snapshot was created","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digest that is signed by the signer participants","Digest that is signed by the signer participants","Digest that is signed by the signer participants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Provide a dummy instance for test.","Dummy instance for test purposes.","Retrieve a dummy proof (for test only)","CertificateMetadata factory","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Return a dummy test entity (test-only).","Current Epoch","Epoch at which the Mithril Stake Distribution is created","Epoch at which the Mithril Stake Distribution is created","Epoch at which registration is sent #[…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill the given ProtocolMessage with the data associated …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a set of signers into message parts","Genesis signature created from the original stake …","Hash of the Cardano Transactions commitment","Hash of the Cardano Transactions commitment","Hash of the current certificate Computed from the other …","Hash of the current certificate Computed from the other …","Hash of the Mithril Stake Distribution (different from the …","Hash of the Mithril Stake Distribution (different from the …","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was initiated …","Date and time when the certificate was initiated …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The KES period used to compute the verification key …","The KES period used to compute the verification key …","The KES period used to compute the verification key …","Locations where the binary content of the snapshot can be …","Locations where the binary content of the snapshot can be …","Locations where the binary content of the snapshot can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that the certificate signed message match the given …","Merkle root of the Cardano transactions commitment","Merkle root of the Cardano transactions commitment","Certificate metadata aka METADATA(p,n)","Certificate metadata aka METADATA(p,n)","STM multi signature created from a quorum of single …","Create a new <code>CardanoTransactionsProofsMessage</code>","Next Protocol parameters","Next Protocol parameters","Signers that will be able to sign on the next epoch","Transactions that could not be certified","The encoded operational certificate of stake pool operator …","The encoded operational certificate of stake pool operator …","The encoded operational certificate of stake pool operator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unique identifier of the signer","The unique identifier of the signer","The unique identifier of the signer","The unique identifier of the signer","Hash of the previous certificate in the chain This is …","Hash of the previous certificate in the chain This is …","Proof of the transactions","Structured message that is used to created the signed …","Structured message that is used to created the signed …","Protocol parameters part of METADATA(p,n)","Current Protocol parameters","Current Protocol parameters","Protocol parameters part of METADATA(p,n)","Protocol parameters used to compute AVK","Protocol Version (semver) Useful to achieve backward …","Protocol Version (semver) Useful to achieve backward …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time when the certificate was sealed Represents …","Date and time when the certificate was sealed Represents …","","","","","","","","","","","","","","","","","","","","The single signature of the digest","Signed entity type","Signed entity type","Message that is signed by the signers aka H(MSG(p,n) || …","Message that is signed by the signers aka H(MSG(p,n) || …","Current Signers","The list of the active signers with their stakes and …","List of signers with stakes of the Mithril Stake …","Size of the snapshot file in Bytes","Size of the snapshot file in Bytes","Size of the snapshot file in Bytes","","The signer stake","","","","","","","","","","","","","","","","","","","","","","The number of signers that contributed to the certificate …","Transactions that have been certified","Hashes of the certified transactions","Adapt entity to message","Adapt message to entity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a set of signer message parts into a set of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The public key used to authenticate signer signature","The public key used to authenticate signer signature","The public key used to authenticate signer signature","The encoded signer ‘Mithril verification key’ …","The encoded signer ‘Mithril verification key’ …","The encoded signer ‘Mithril verification key’ …","Verify that all the certified transactions proofs are valid","","","","","","","","","","","","","","","","","","","","","","The indexes of the won lotteries that lead to the single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error source","Hashes of the invalid transactions","Error raised when the list of signers given to the builder …","MultiSigner is the cryptographic engine in charge of …","Allow to build Single Or Multi signers to generate a …","SignerBuilder specific errors","The SingleSigner is the structure responsible for issuing …","Aggregate the given single signatures into a …","","","","","","","","","","","","","Build a MultiSigner based on the registered parties","Build non deterministic SingleSigner and …","Build deterministic SingleSigner and ProtocolInitializer …","","","","","","","","","","","","","Compute aggregate verification key from stake distribution","Compute aggregate verification key from stake distribution","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the partyId associated with this Signer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","SignerBuilder constructor.","","","","","","","","","Restore a SingleSigner based on the registered parties and …","","","","","","","","","Issue a single signature for the given message.","","","","","","","","","","","","","","","","","","","","","","Verify a single signature","","","","","","","","","","","","","Artifact is a trait for types that represent signed …","Beacon trait","This structure is responsible of calculating the message …","A CardanoTransactionsSignableBuilder builder","Mithril Signable Builder Service","A MithrilStakeDistributionSignableBuilder builder","SignableBuilder is trait for building a protocol message …","ArtifactBuilder Service trait","Cardano transactions store","","","","","","","","","","","","","","","","","","","","","","","","","Compute a protocol message","Compute signable from signed entity type","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get artifact identifier","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","MithrilSignableBuilderService factory","Constructor","Constructor","","","","","","","","","","","","","","","","","","","","","Store list of transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use a custom stake distribution","A fixture of Mithril data types.","A builder of mithril types.","Each party will have a random stake.","A signer fixture, containing a signer entity with its …","Methods that can be used to generate the stake …","A builder of temp directory for tests purpose.","Make a stake distribution where all parties will have the …","Tools to helps validate conformity to an OpenAPI …","","","","","","","","","","","","","","","","Transform the specified parameters to a MithrilFixture.","Create a directory based on the builder configuration in …","Generate the path of the temp directory (no IO operation …","Get the stake distribution formated as a cardano-cli …","","","","","","","","","","","","","","","","","","","","","","Compute the Aggregate Verification Key for this fixture …","Compute the Aggregate Verification Key for this fixture.","Compute the party id hash","Create on disk a temp directory based on the given module …","Create a genesis certificate using the fixture signers for …","Create on disk a temp directory based on the given module …","","","","","","","","","","","","If set the generated signers won’t be certified (meaning …","","","","","","Fake data builders for testing.","Pre hex encoded StmTypes for testing.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Change path generation in order to guarantee a path that …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the path to this signer kes secret key","The path to this signer kes secret key file","","","","","","","","","","","MithrilFixture factory.","<code>TempDir</code> builder factory","Decode this signer operational certificate if any","","","","","","","","","","","Shortcut to get the party id from the inner signer with …","A ProtocolSigner.","Get the fixture protocol parameters.","A ProtocolSigner.","Get the fixture protocol stake distribution.","","","","","","","","","","","Set the max len that a short path can have","Sign the given protocol message.","Make all underlying signers sign the given message, filter …","A SignerWithStake.","Get the fixture signers.","Get the fixture signers.","Get the fixture signers with stake.","Get the fixture stake distribution.","Get certificate metadata signers","Define a HttpServer for test that can be configured using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode this signer verification key certificate","Decode this signer verification key signature certificate …","","","","","","Set the seed used to generated the party ids","Set the protocol_parameters.","Set the number of signers that will be generated.","Set the generation method used to compute the stake …","","","","","","","","","","","The randomizer seed","APISpec helps validate conformity to an OpenAPI …","","","","","","","Sets the content type to specify/check, note that it …","","","","Returns the argument unchanged.","APISpec factory from spec","Get all spec files","Get default spec file","Get spec file for era","","Calls <code>U::from(self)</code>.","","","Sets the method to specify/check.","","","Sets the path to specify/check.","","","","","","","","Validates conformity of a value against a schema","Validates if a request is valid","Validates if a response is valid","Verify conformity helper of API Specs","","","","Fake Beacon","Fake Cardano Transactions","Fake Certificate","Fake CertificatePending","Fake Digest","Fake EpochSettings","Fake Genesis Certificate","Fake Mithril Stake Distribution","Fake ProtocolParameters","Fake Signers","Fake SignersWithStake","Fake SingleSignatures","Fake Snapshots","A list of pre json hex encoded …","A list of pre json hex encoded Ed25519:Signature.","A list of pre json hex encoded ed25519_dalek::VerifyingKey","A list of pre json hex encoded MithrilStm:StmAggrSig","A list of pre json hex encoded OpCert","A list of pre json hex encoded …","A list of pre json hex encoded KES:Sum6KesSig","A list of pre json hex encoded MithrilStm:StmSig","A HTTP server for test","Get the test server address","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Spawn a TestHttpServer using the given warp filters","Spawn a TestHttpServer using the given warp filters","","","","","","Get the server url","","",""],"i":[0,0,0,19,0,0,0,19,0,0,0,8,8,8,0,8,0,0,8,8,0,8,8,0,8,0,0,0,8,4,8,8,8,8,8,0,8,8,8,0,8,8,0,0,8,8,8,8,8,8,8,8,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,26,24,26,24,26,24,26,24,26,24,26,24,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,27,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,24,26,26,24,26,24,26,24,39,39,39,39,0,39,0,0,0,0,39,0,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,35,35,44,35,38,39,44,35,38,39,44,35,38,39,35,38,38,39,39,44,35,38,39,39,41,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,35,38,39,38,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,44,35,38,39,48,44,48,48,48,44,48,48,44,35,38,39,44,35,38,39,44,35,38,39,53,55,51,57,0,0,0,0,0,0,0,0,57,0,63,55,51,63,53,57,0,0,0,0,0,0,50,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,50,54,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,52,55,56,57,52,55,56,57,58,58,50,58,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,57,55,51,50,57,63,53,52,55,51,50,54,67,68,56,58,57,52,55,57,52,52,52,55,55,55,57,57,57,55,51,50,57,63,63,53,53,52,55,55,51,51,50,56,57,57,63,63,53,52,55,55,55,51,50,54,67,68,56,58,57,9,67,68,58,9,67,68,58,9,9,67,68,58,9,67,68,58,52,52,55,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,72,56,72,56,72,56,72,56,72,56,72,56,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,50,54,67,68,56,58,58,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,55,51,50,57,58,58,58,63,53,52,55,56,57,63,53,55,51,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,63,53,52,55,51,50,54,67,68,56,58,57,0,0,263,94,111,0,0,0,0,0,0,0,264,95,263,94,263,94,263,94,264,95,0,0,0,0,236,0,263,94,263,94,0,263,94,263,94,263,94,0,0,0,0,0,0,0,0,0,0,0,264,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,111,236,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,77,69,78,79,80,81,82,77,69,78,79,80,81,82,69,86,69,69,86,81,45,89,45,45,89,45,89,89,92,92,86,77,94,95,69,96,97,89,78,40,45,79,80,80,81,82,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,77,69,89,78,45,79,80,81,82,77,69,89,78,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,92,92,69,80,81,82,69,69,69,80,80,80,81,81,81,82,82,82,77,69,89,78,45,79,80,81,82,94,94,95,95,69,96,96,97,97,89,78,40,40,45,79,80,81,82,86,99,77,94,95,69,69,96,97,89,78,40,45,79,80,80,80,80,80,81,81,82,82,82,82,82,82,82,82,82,82,82,32,82,32,82,111,111,77,80,82,81,89,45,81,78,79,80,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,99,0,0,32,82,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,99,265,86,69,96,80,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,99,265,81,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,77,69,89,78,45,79,80,81,82,89,45,94,95,96,97,40,69,0,32,82,111,111,80,82,77,69,78,79,80,81,82,94,95,96,97,40,80,78,79,86,265,86,77,94,95,69,96,97,89,78,40,45,79,80,80,81,82,82,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,69,49,78,79,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,86,77,94,95,69,96,97,89,78,40,45,79,80,81,82,0,0,0,0,0,0,0,141,0,0,0,0,140,140,140,0,0,0,139,0,138,0,0,0,0,141,139,138,139,141,125,127,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,127,0,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,128,128,128,128,130,131,132,128,132,137,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,125,131,132,143,137,128,127,125,138,139,140,141,128,128,128,128,128,128,138,138,139,139,140,140,141,141,131,132,143,137,128,127,125,138,139,139,139,140,140,141,141,141,11,143,137,125,137,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,125,128,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,128,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,128,128,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,127,137,137,138,139,140,141,128,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,132,131,132,143,137,128,127,125,138,139,140,141,127,127,131,132,143,137,128,127,125,138,139,140,141,131,132,143,137,128,127,125,138,139,140,141,266,266,266,267,268,0,269,150,0,0,0,0,148,149,148,0,0,149,0,269,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,145,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,147,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,145,148,148,149,149,150,150,146,145,147,147,148,148,148,149,149,149,150,150,150,144,146,147,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,146,145,147,148,149,150,146,145,147,148,149,150,144,146,147,146,145,147,148,149,150,146,145,147,148,149,150,145,148,149,150,144,146,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,146,145,147,148,149,150,145,146,145,147,148,149,150,146,145,147,148,149,150,0,0,0,175,0,155,154,169,0,154,169,0,154,169,0,166,0,0,0,0,0,0,0,12,0,0,176,0,155,158,155,155,173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,154,169,158,74,175,166,74,0,0,0,0,0,0,74,74,74,0,0,0,0,0,0,0,166,0,0,0,12,0,173,74,74,74,74,33,167,154,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,156,33,161,172,25,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,172,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,167,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,12,25,156,157,158,33,159,160,161,74,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,12,25,156,157,158,33,159,160,161,74,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,74,166,154,76,12,74,166,154,76,29,172,29,33,159,160,34,30,170,76,167,29,156,160,74,162,163,164,34,30,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,12,156,159,161,74,163,164,165,166,34,30,154,169,170,76,171,172,173,172,29,12,156,159,161,74,163,164,165,166,34,30,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,157,167,167,167,169,29,162,165,29,155,175,12,25,156,157,33,159,160,161,74,74,74,162,163,164,165,166,34,30,154,169,170,76,171,172,173,29,29,29,155,155,155,175,175,175,12,12,12,156,156,156,74,74,74,163,163,163,164,164,164,166,166,166,34,34,34,154,154,154,169,169,169,170,170,170,76,76,76,171,171,171,172,172,172,173,173,173,29,12,156,159,161,74,163,164,165,166,34,30,154,169,170,76,171,172,173,29,29,155,175,175,12,12,25,156,157,158,33,159,160,161,74,74,176,176,162,163,164,165,166,166,34,30,167,154,169,169,170,76,171,172,173,173,173,29,155,175,12,25,156,157,158,33,159,159,160,161,74,176,162,163,163,163,163,164,165,166,34,30,30,167,154,154,154,169,170,170,76,76,76,171,172,173,169,12,154,76,159,154,169,156,165,172,169,34,169,161,160,74,29,12,74,156,33,165,29,25,154,169,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,160,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,33,33,155,155,173,30,170,76,164,173,172,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,30,33,157,156,163,164,34,33,29,29,25,156,157,33,160,161,163,164,165,34,30,170,76,171,172,74,161,162,161,74,74,74,74,74,74,170,76,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,12,33,74,166,154,76,159,170,76,171,30,30,74,33,33,160,161,162,165,160,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,160,29,12,156,159,161,74,163,164,165,166,34,30,154,169,170,76,171,172,173,34,33,171,167,161,167,33,160,161,165,172,159,76,74,74,74,74,173,29,155,12,25,156,157,158,33,159,160,161,74,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,171,29,175,12,74,176,166,169,173,25,157,29,155,175,12,25,156,157,157,158,33,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,74,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,170,170,76,170,76,157,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,171,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,29,155,175,12,25,156,157,158,33,159,160,161,74,176,162,163,164,165,166,34,30,167,154,169,170,76,171,172,173,203,203,0,0,0,0,0,0,0,0,199,0,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,23,205,200,201,203,202,199,23,205,200,201,203,202,199,200,201,202,199,200,201,202,199,23,23,23,205,200,201,203,202,199,23,205,200,201,203,202,199,200,199,200,199,23,205,200,201,203,202,199,199,200,200,201,199,200,200,200,201,201,201,199,199,199,199,200,199,200,201,203,203,202,199,199,23,205,200,201,203,202,199,199,201,201,201,201,201,23,205,200,201,203,202,199,23,205,200,201,203,202,199,202,23,199,202,23,205,200,201,203,202,199,23,205,200,201,203,202,199,200,23,205,200,201,202,202,202,23,205,200,201,203,202,199,23,205,200,201,203,202,199,202,204,205,23,205,200,201,203,202,199,23,205,200,201,203,202,199,200,199,202,203,200,201,202,199,203,199,23,205,200,201,203,202,199,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,23,205,200,201,203,202,199,270,270,271,271,208,208,208,0,0,0,0,0,0,0,208,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,207,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,208,209,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,208,209,208,209,213,207,211,212,208,209,210,208,209,208,208,208,209,209,209,208,209,208,208,209,213,207,211,212,208,209,210,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,209,207,211,212,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,211,212,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,208,209,210,209,209,209,208,209,208,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,209,213,207,211,212,208,209,210,213,207,211,212,208,209,210,213,207,211,212,208,209,210,0,0,0,0,0,0,0,0,0,0,0,0,0,233,233,0,0,0,233,233,0,0,0,0,0,0,0,0,0,0,0,0,0,272,273,198,220,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,198,220,221,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,215,216,217,218,226,227,230,232,215,218,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,230,231,232,216,217,226,227,230,232,216,217,218,219,220,222,223,224,225,226,227,228,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,230,231,232,216,217,218,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,198,220,221,222,197,223,224,225,226,227,228,229,230,231,232,222,226,227,229,216,217,218,215,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,217,217,217,224,224,224,225,225,225,227,227,227,228,228,228,229,229,229,230,230,230,231,231,231,232,232,232,216,217,218,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,215,216,217,218,215,233,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,224,225,226,227,228,229,230,231,232,224,198,216,217,198,220,226,227,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,219,223,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,224,225,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,198,216,217,198,220,198,218,221,222,221,218,224,225,229,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,224,225,228,229,198,220,197,198,220,219,221,222,223,226,219,223,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,219,223,216,217,218,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,228,221,228,198,220,221,223,226,230,231,232,233,224,216,217,218,215,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,233,219,218,197,274,275,216,217,218,215,233,198,198,219,220,221,222,197,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,224,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,224,225,229,224,225,229,218,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,228,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,216,217,218,215,233,198,219,220,221,222,197,223,224,225,226,227,228,229,230,231,232,276,276,240,0,0,0,0,234,234,238,237,240,234,238,237,240,234,238,237,240,237,237,237,234,238,237,240,234,238,237,240,234,238,237,240,234,237,234,238,237,240,234,238,237,240,234,238,237,240,237,240,240,234,238,237,240,238,234,238,237,240,234,238,237,240,234,238,237,240,234,238,237,240,237,234,238,237,240,234,238,237,240,237,234,238,237,240,234,238,237,240,238,240,234,238,237,240,234,238,237,240,234,238,237,240,234,238,237,240,234,238,237,240,234,234,238,237,240,234,238,237,240,234,238,237,240,0,0,0,0,0,0,0,0,0,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,241,243,244,245,246,247,245,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,168,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,168,168,168,168,248,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,244,245,246,247,254,0,0,254,0,0,0,254,0,249,254,250,124,251,249,254,250,124,251,249,254,250,124,251,249,251,251,250,249,254,250,124,251,249,254,250,124,251,249,254,250,124,251,250,124,251,250,124,251,250,250,124,251,250,251,249,249,254,250,124,251,249,254,250,124,251,249,249,254,250,124,251,0,0,250,124,249,254,250,124,251,251,249,254,250,124,251,249,254,250,124,251,124,124,249,254,250,124,251,249,254,250,124,251,250,251,124,249,254,250,124,251,249,254,250,124,251,124,124,250,124,250,249,254,250,124,251,249,254,250,124,251,251,124,250,124,250,250,250,250,250,0,250,124,251,249,254,250,124,251,249,254,250,124,251,249,254,250,124,251,249,254,250,124,251,249,254,250,124,251,124,124,249,254,250,124,251,249,249,249,249,249,254,250,124,251,249,254,250,124,251,277,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,0,0,258,258,258,258,258,258,258,258,258],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[2,-1,[]],[2,-1,[]],0,[2,3],0,0,0,[-1,-1,[]],[4,[[7,[[6,[5]]]]]],[8,[[7,[[6,[5]]]]]],[[],2],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],0,[[[10,[9]],[10,[11]],12],8],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[16,16],[[-1,-2],3,[],[]],[[],[[19,[[18,[17]]]]]],[16,[[19,[17]]]],[16,[[19,[20]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],[[22,[21,17]]]],[[],2],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[[[10,[23]]],16],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,[22,[21,17]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],24],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[25]]],26],[[],24],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[[27,28,29],[[7,[[6,[5]]]]]],[[26,28,29],[[7,[[6,[5]]]]]],[[24,28,29],[[7,[[6,[5]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,[18,[25]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[30,29,31,32],[[19,[33]]]],[31,[[19,[34]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[[35,36],37],[[38,36],37],[[38,36],37],[[39,36],37],[[39,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,39],[-1,-1,[]],[[41,42],[[7,[[6,[5]]]]]],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,[10,[41]]],44],[[[1,[[10,[45]]]]],35],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[35,34],[[14,[32,0]]]],[38,[[1,[46]]]],[39,[[1,[46]]]],[-1,47,[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[48,33,49],[[7,[[6,[5]]]]]],[[44,33,49],[[7,[[6,[5]]]]]],[[48,33,49],[[7,[[6,[5]]]]]],[[48,33,49],[[7,[[6,[5]]]]]],[[48,33,49],[[7,[[6,[5]]]]]],[[44,33,49],[[7,[[6,[5]]]]]],[[48,34,33],13],[[48,34,33],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,51],50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,[[14,[52,53]]]],[54,[[19,[[10,[9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[52,52],[55,55],[56,56],[57,57],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,[[],50],[[],58],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[57]]],59],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[52,52],13],[[55,55],13],[[57,57],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[63,36],37],[[63,36],37],[[53,36],37],[[53,36],37],[[52,36],37],[[55,36],[[14,[3,64]]]],[[55,36],37],[[51,36],37],[[51,36],[[14,[3,64]]]],[[50,36],37],[[56,36],37],[[57,36],37],[[57,36],37],[65,63],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,55],[51,55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,66],[[7,[[6,[5]]]]]],[[67,66],[[7,[[6,[5]]]]]],[[68,66],[[7,[[6,[5]]]]]],[[58,66],[[7,[[6,[5]]]]]],[9,[[7,[[6,[5]]]]]],[67,[[7,[[6,[5]]]]]],[68,[[7,[[6,[5]]]]]],[58,[[7,[[6,[5]]]]]],[[9,69],[[7,[[6,[5]]]]]],[[9,69],[[7,[[6,[5]]]]]],[[67,69],[[7,[[6,[5]]]]]],[[68,69],[[7,[[6,[5]]]]]],[[58,69],[[7,[[6,[5]]]]]],[9,[[7,[[6,[5]]]]]],[67,[[7,[[6,[5]]]]]],[68,[[7,[[6,[5]]]]]],[58,[[7,[[6,[5]]]]]],[[52,55],[[19,[[18,[70]]]]]],[[52,55,2],[[19,[70]]]],[[55,-1],3,71],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,[[7,[[6,[5]]]]]],[56,[[7,[[6,[5]]]]]],[[72,42],[[7,[[6,[5]]]]]],[[56,42],[[7,[[6,[5]]]]]],[72,[[7,[[6,[5]]]]]],[56,[[7,[[6,[5]]]]]],[[72,42],[[7,[[6,[5]]]]]],[[56,42],[[7,[[6,[5]]]]]],[72,[[7,[[6,[5]]]]]],[56,[[7,[[6,[5]]]]]],[[72,42],[[7,[[6,[5]]]]]],[[56,42],[[7,[[6,[5]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],50],[[57,73,12,[1,[56]]],54],[[[6,[72]]],67],[[28,12,67],68],[[73,73,12],56],[[[1,[29]]],58],[58,[[1,[74]]]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,-1],14,75],[[51,-1],14,75],[[50,-1],14,75],[[57,-1],14,75],[[58,[18,[52]]],3],[[58,[18,[76]]],3],0,[63,[[1,[46]]]],[53,[[1,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[77,77],[69,69],[78,78],[79,79],[80,80],[81,81],[[[82,[-1]]],[[82,[-1]]],[83,84,85]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[69,47],[[86,[87,[80]]],[[19,[81]]]],[69,[[14,[88,0]]]],[69,47],[86,[[19,[80]]]],[[81,[87,[80]]],[[19,[3]]]],[[],45],[[],89],[45,79],[[],45],[[],89],[-1,45,[90,91]],[-1,89,[90,91]],[89,78],[42,[[19,[[82,[-1]]]]],[83,84]],[42,[[19,[[82,[-1]]]]],[83,84]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[80,-1,[]],[2,-1,[]],[2,-1,[]],[[[82,[-1]]],-2,[83,84],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[77]]],59],[-1,[[14,[69]]],59],[-1,[[14,[89]]],59],[-1,[[14,[78]]],59],[-1,[[14,[45]]],59],[-1,[[14,[79]]],59],[-1,[[14,[80]]],59],[-1,[[14,[81]]],59],[-1,[[14,[[82,[-2]]]]],59,[92,83,84]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[-1,[[19,[47]]],[83,84]],[-1,[[19,[47]]],[83,84]],[[69,69],13],[[80,80],13],[[81,81],13],[[[82,[-1]],[82,[-1]]],13,[83,84,93]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[94,36],37],[[94,36],37],[[95,36],37],[[95,36],37],[[69,36],37],[[96,36],37],[[96,36],37],[[97,36],37],[[97,36],37],[[89,36],37],[[78,36],37],[[40,36],37],[[40,36],37],[[45,36],37],[[79,36],37],[[80,36],37],[[81,36],37],[[[82,[-1]],36],37,[83,84,98]],[-1,-1,[]],[30,99],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[82,[69]]],69],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,80],[25,80],[47,80],[-1,-1,[]],[42,80],[-1,-1,[]],[[[82,[81]]],81],[-1,-1,[]],[100,[[82,[100]]]],[[[103,[[102,[101]]]]],[[82,[[103,[[102,[101]]]]]]]],[104,[[82,[104]]]],[81,[[82,[81]]]],[105,[[82,[105]]]],[106,[[82,[106]]]],[[[107,[[102,[101]]]]],[[82,[[107,[[102,[101]]]]]]]],[69,[[82,[69]]]],[108,[[82,[108]]]],[109,[[82,[109]]]],[[[87,[110]]],[[19,[32]]]],[[[87,[110]]],[[19,[[82,[100]]]]]],[42,[[19,[32]]]],[42,[[19,[[82,[100]]]]]],[-1,[[14,[111,0]]],[[112,[28]]]],[-1,[[14,[111,0]]],[[112,[28]]]],[-1,[[14,[77,0]]],[[112,[28]]]],[42,[[19,[80]]]],[42,[[19,[[82,[-1]]]]],[83,84]],[[[87,[-1]]],[[19,[81]]],[[113,[80]],85]],[114,89],[115,45],[[[87,[-1]],[87,[-1]]],[[19,[81]]],[[113,[80]],85]],[116,78],[49,79],[[80,-1],3,71],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[117,[[14,[-1,96]]],84],[-1,[[14,[118,96]]],83],[100,47],[100,47],[-1,[[19,[47]]],[83,84]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[87,[80]],119],[[19,[86]]]],[[120,121,121,104],69],[[42,65],96],[[[18,[110]]],80],[-1,[[82,[-1]]],[83,84]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],0,0,[81,80],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[77,-1],14,75],[[69,-1],14,75],[[89,-1],14,75],[[78,-1],14,75],[[45,-1],14,75],[[79,-1],14,75],[[80,-1],14,75],[[81,-1],14,75],[[[82,[-1]],-2],14,[],75],[[89,[87,[110]]],122],[[45,[87,[110]]],32],[94,[[1,[46]]]],[95,[[1,[46]]]],[96,[[1,[46]]]],[97,[[1,[46]]]],[40,[[1,[46]]]],0,0,[32,47],[[[82,[100]]],47],[[111,-1],[[14,[3,0]]],[[112,[28]]]],[[111,-1],[[14,[3,0]]],[[112,[28]]]],[80,47],[[[82,[-1]]],[[19,[47]]],[83,84]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[80,47],[78,116],[79,49],[86,2],0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[86,[[14,[80,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[47,[[14,[[82,[-1]],-2]]],[92,83,84],[]],[42,[[14,[[82,[-1]],-2]]],[92,83,84],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,[[14,[3,94]]]],[[49,[87,[110]],32],[[19,[3]]]],[[78,[87,[110]],122],[[19,[3]]]],[[79,[87,[110]],32],[[19,[3]]]],[81,[[19,[3]]]],[[[82,[105]],[87,[110]],32],[[19,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[121,121],[[3,[[18,[33]],79]]]],[[],[[3,[45,79]]]],[[],34],[[],99],[[123,99],[[18,[124]]]],[[88,13],[[1,[73]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[125,126],[127,127],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[127,125],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[128,128],[[-1,-2],3,[],[]],[[128,128],129],[[-1,-2],129,[],[]],[[130,28,29],[[7,[[6,[5]]]]]],[[131,28,29],[[7,[[6,[5]]]]]],[[132,28,29],[[7,[[6,[5]]]]]],[128,[[14,[[133,[-1]],134]]],[135,136]],[[],132],[[],137],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[128,128],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[128,36],37],[[138,36],37],[[138,36],37],[[139,36],37],[[139,36],37],[[140,36],37],[[140,36],37],[[141,36],37],[[141,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[134,139],[140,139],[-1,-1,[]],[142,140],[139,141],[134,141],[-1,-1,[]],[11,[[7,[[6,[5]]]]]],[143,[[7,[[6,[5]]]]]],[137,[[7,[[6,[5]]]]]],0,[137,[[19,[121]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,[[1,[126]]]],[28,[[14,[[18,[128]],139]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[[10,[144]]]],43],131],[[42,13],132],[73,143],[[],137],[73,[[14,[128,140]]]],[42,127],0,0,[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[[128,128],[[1,[129]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,121],127],[[137,[1,[121]]],137],0,[138,[[1,[46]]]],[139,[[1,[46]]]],[140,[[1,[46]]]],[141,[[1,[46]]]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[132,47],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,[87,[126]]],127],[[127,[87,[42]]],127],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[145,[[19,[146]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],147],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[145,145],[[148,36],37],[[148,36],37],[[149,36],37],[[149,36],37],[[150,36],37],[[150,36],37],[-1,-1,[]],[-1,-1,[]],[[[22,[151,152]]],147],[-1,-1,[]],[134,148],[153,148],[-1,-1,[]],[153,149],[134,149],[-1,-1,[]],[-1,-1,[]],[149,150],[148,150],[[144,[18,[128]]],[[7,[[6,[5]]]]]],[[146,[18,[128]]],[[7,[[6,[5]]]]]],[[147,[18,[128]]],[[7,[[6,[5]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,146],[[28,42],145],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[144,[[7,[[6,[5]]]]]],[146,[[7,[[6,[5]]]]]],[147,[[7,[[6,[5]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[145,13],145],[148,[[1,[46]]]],[149,[[1,[46]]]],[150,[[1,[46]]]],[[144,[18,[[3,[151,152]]]]],[[7,[[6,[5]]]]]],[[146,[18,[[3,[151,152]]]]],[[7,[[6,[5]]]]]],[[147,[18,[[3,[151,152]]]]],[[7,[[6,[5]]]]]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[145,43],145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[74,74],-1,[]],[[74,121],-1,[]],[[74,121],3],[[74,74],3],0,0,[154,42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[29,29],[155,155],[12,12],[25,25],[156,156],[157,157],[158,158],[33,33],[159,159],[160,160],[161,161],[74,74],[162,162],[163,163],[164,164],[165,165],[166,166],[34,34],[30,30],[[[167,[-1]]],[[167,[-1]]],[168,85]],[154,154],[169,169],[170,170],[76,76],[171,171],[172,172],[173,173],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[74,74],129],[[166,166],129],[[154,154],129],[[76,76],129],[12,174],[[-1,-2],129,[],[]],[[-1,-2],129,[],[]],[[-1,-2],129,[],[]],[[-1,-2],129,[],[]],[[29,29],[[14,[155,175]]]],0,[29,47],[33,47],[159,47],[160,47],[34,47],[30,47],[170,47],[76,47],0,[[],29],[[],156],[[],160],[[],74],[[],162],[[],163],[[],164],[[],34],[[],30],[[],172],[[],173],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[74,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[74,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[29]]],59],[-1,[[14,[12]]],59],[-1,[[14,[156]]],59],[-1,[[14,[159]]],59],[-1,[[14,[161]]],59],[-1,[[14,[74]]],59],[-1,[[14,[163]]],59],[-1,[[14,[164]]],59],[-1,[[14,[165]]],59],[-1,[[14,[166]]],59],[-1,[[14,[34]]],59],[-1,[[14,[30]]],59],[-1,[[14,[154]]],59],[-1,[[14,[169]]],59],[-1,[[14,[170]]],59],[-1,[[14,[76]]],59],[-1,[[14,[171]]],59],[-1,[[14,[172]]],59],[-1,[[14,[173]]],59],0,[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[],157],[[],[[167,[172]]]],[[],[[167,[165]]]],[[],[[167,[156]]]],[[],169],0,0,0,[[29,29],13],[[155,155],13],[[175,175],13],[[12,12],13],[[25,25],13],[[156,156],13],[[157,157],13],[[33,33],13],[[159,159],13],[[160,160],13],[[161,161],13],[[74,74],13],[[74,121],13],[[74,121],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[34,34],13],[[30,30],13],[[154,154],13],[[169,169],13],[[170,170],13],[[76,76],13],[[171,171],13],[[172,172],13],[[173,173],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[29,36],37],[[29,36],37],[[155,36],37],[[175,36],37],[[175,36],37],[[12,36],37],[[12,36],37],[[25,36],37],[[156,36],37],[[157,36],37],[[158,36],37],[[33,36],37],[[159,36],37],[[160,36],37],[[161,36],37],[[74,36],37],[[74,36],37],[[176,36],37],[[176,36],37],[[162,36],37],[[163,36],37],[[164,36],37],[[165,36],37],[[166,36],37],[[166,36],37],[[34,36],37],[[30,36],37],[[[167,[-1]],36],37,[168,98]],[[154,36],37],[[169,36],37],[[169,36],[[14,[3,64]]]],[[170,36],37],[[76,36],37],[[171,36],37],[[172,36],37],[[173,36],[[14,[3,64]]]],[[173,36],37],[173,177],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[76,159],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,163],[42,163],[178,163],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[99,30],[-1,-1,[]],[-1,-1,[]],[169,154],[-1,-1,[]],[169,154],[-1,-1,[]],[76,170],[-1,-1,[]],[-1,-1,[]],[124,76],[124,76],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[154,29],169],[[47,[1,[121]]],[[14,[12,0]]]],[2,[[19,[154]]]],[[170,179],76],[[[18,[76]]],[[18,[159]]]],[42,[[14,[154,-1]]],[]],[169,74],[156,47],[165,47],[172,47],[169,[[19,[47]]]],[[34,166],[[1,[180]]]],[169,[[1,[181]]]],[[161,182],[[1,[170]]]],[160,183],[[74,74],13],[[29,-1],3,71],[[12,-1],3,71],[[74,-1],3,71],0,0,0,0,0,[154,2],[169,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,13],[33,13],[155,13],[155,13],0,0,0,0,0,[[],[[18,[173]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[33,34],13],[157,47],0,0,0,0,0,0,[[47,121,126],29],[[42,184,126],25],[[47,29],156],[[[18,[185]],81],157],[[47,29,160,34,31,158],33],[[186,30,[188,[187]],[188,[187]],[18,[159]]],160],[[29,169,30,30,[18,[170]],[18,[170]]],161],[47,163],[[47,47],164],[[74,[18,[76]],30],165],[[],34],[[121,121,177],30],[[182,189,[1,[190]],[1,[191]],[1,[192]]],170],[[182,189,[1,[190]],[1,[191]],[1,[192]],179],76],[[182,193,[18,[194]]],171],[[47,29,121,[18,[47]],173,17],172],[74,74],0,0,0,[[74,195],[[14,[74,176]]]],[74,74],[74,74],[74,74],[74,[[14,[74,176]]]],[74,74],0,0,[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[[29,29],[[1,[129]]]],[[12,12],[[1,[129]]]],[[33,33],[[1,[129]]]],[[74,74],[[1,[129]]]],[[166,166],[[1,[129]]]],[[154,154],[[1,[129]]]],[[76,76],[[1,[129]]]],0,0,0,0,0,[30,196],[74,[[14,[74,176]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[29,-1],14,75],[[12,-1],14,75],[[156,-1],14,75],[[159,-1],14,75],[[161,-1],14,75],[[74,-1],14,75],[[163,-1],14,75],[[164,-1],14,75],[[165,-1],14,75],[[166,-1],14,75],[[34,-1],14,75],[[30,-1],14,75],[[154,-1],14,75],[[169,-1],14,75],[[170,-1],14,75],[[76,-1],14,75],[[171,-1],14,75],[[172,-1],14,75],[[173,-1],14,75],[[34,166,180],[[1,[180]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[74,74],-1,[]],[[74,121],-1,[]],[[74,121],3],[[74,74],3],[173,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,109],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,[157,[[87,[185]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[197,[[14,[157,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[198,[[14,[33,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[42,[[14,[154,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[74,[[14,[195,-1]]],[]],[-1,[[14,[-2]]],[],[]],[74,[[14,[195,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],[[18,[170]]],[[113,[170]]]],0,0,0,0,[157,[[19,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,199,74],3],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[200,200],[201,201],[202,202],[199,199],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[23,74],[23,199],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[200]]],59],[-1,[[14,[199]]],59],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[],199],0,[[200,200],13],[[201,201],13],[[199,199],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],[[18,[199]]]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[200,36],37],[[201,36],37],[[203,36],37],[[203,36],37],[[202,36],37],[[199,36],[[14,[3,64]]]],[[199,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,[[14,[199,-1]]],[]],[201,74],[201,200],[201,[[19,[199]]]],[201,[[1,[200]]]],[201,[[19,[[1,[199]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,199],13],[[],202],[202,2],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[199,74],23],[[[10,[204]]],205],[[42,[1,[74]]],200],[[74,200,[1,[200]]],201],[202,[[1,[-1]]],[]],[202,[[1,[-1]]],[]],[[202,2],[[1,[-1]]],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[206,[-2]]],[],[]],[204,[[7,[[6,[5]]]]]],[[205,74],[[14,[201,203]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[200,-1],14,75],[[199,-1],14,75],[202,[[3,[2,[1,[2]]]]]],[203,[[1,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[42,[[14,[199,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[207,[10,[9]]],[[14,[[10,[204]],0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[208,208],[209,209],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],210],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[208]]],59],[-1,[[14,[209]]],59],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[208,208],13],[[209,209],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[208,36],37],[[208,36],37],[[209,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,[[19,[209]]]],[[[18,[200]]],210],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[208,[1,[47]]],207],[[66,[10,[9]],116],211],[73,212],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[213,[[7,[[6,[5]]]]]],[211,[[7,[[6,[5]]]]]],[212,[[7,[[6,[5]]]]]],[210,[[7,[[6,[5]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[208,-1],14,75],[[209,-1],14,75],[[210,[18,[200]]],3],[[209,89],[[14,[209,0]]]],0,[209,[[19,[47]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[209,116],[[14,[3,0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[83,214]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[215,42],0,0,0,0,0,0,0,[215,[[87,[185]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[216,216],[217,217],[218,218],[215,215],[198,198],[219,219],[220,220],[221,221],[222,222],[197,197],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,0,0,0,0,0,[[],216],[[],217],[[],218],[[],219],[[],220],[[],222],[[],223],[[],224],[[],225],[[],226],[[],227],[[],228],[[],230],[[],231],[[],232],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[14,[216]]],59],[-1,[[14,[217]]],59],[-1,[[14,[218]]],59],[-1,[[14,[198]]],59],[-1,[[14,[219]]],59],[-1,[[14,[220]]],59],[-1,[[14,[221]]],59],[-1,[[14,[222]]],59],[-1,[[14,[197]]],59],[-1,[[14,[223]]],59],[-1,[[14,[224]]],59],[-1,[[14,[225]]],59],[-1,[[14,[226]]],59],[-1,[[14,[227]]],59],[-1,[[14,[228]]],59],[-1,[[14,[229]]],59],[-1,[[14,[230]]],59],[-1,[[14,[231]]],59],[-1,[[14,[232]]],59],0,0,0,[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[[-1,60],[[14,[3,61]]],[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[],216],[[],217],[[],198],[[],220],[[],221],[[],222],[[],197],[[],223],[[],224],[[],225],[[],226],[[],227],[[],228],[[],229],[[],230],[[],231],[[],232],0,0,0,0,[[216,216],13],[[217,217],13],[[218,218],13],[[215,215],13],[[198,198],13],[[219,219],13],[[220,220],13],[[221,221],13],[[222,222],13],[[197,197],13],[[223,223],13],[[224,224],13],[[225,225],13],[[226,226],13],[[227,227],13],[[228,228],13],[[229,229],13],[[230,230],13],[[231,231],13],[[232,232],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[-1,60],[[14,[3,62]]],[]],[[215,34],3],[[216,36],37],[[217,36],37],[[218,36],37],[[215,36],37],[[233,36],37],[[233,36],37],[[198,36],37],[[219,36],37],[[220,36],37],[[221,36],37],[[222,36],37],[[197,36],37],[[223,36],37],[[224,36],37],[[225,36],37],[[226,36],37],[[227,36],37],[[228,36],37],[[229,36],37],[[230,36],37],[[231,36],37],[[232,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[76,224],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[18,[76]]],[[18,[224]]]],0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[198,34],13],0,0,0,0,0,[[42,[18,[197]],[18,[185]]],218],0,0,0,0,0,0,0,[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[216,-1],14,75],[[217,-1],14,75],[[218,-1],14,75],[[198,-1],14,75],[[219,-1],14,75],[[220,-1],14,75],[[221,-1],14,75],[[222,-1],14,75],[[197,-1],14,75],[[223,-1],14,75],[[224,-1],14,75],[[225,-1],14,75],[[226,-1],14,75],[[227,-1],14,75],[[228,-1],14,75],[[229,-1],14,75],[[230,-1],14,75],[[231,-1],14,75],[[232,-1],14,75],0,0,0,0,0,0,0,0,0,0,0,[233,[[1,[46]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],0,[218,[[18,[185]]]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[33,[[14,[198,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[157,[[14,[197,-1]]],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[[18,[224]]],[[19,[[18,[76]]]]]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[218,[[14,[215,233]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[234,[87,[171]],34],[[14,[235,236]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[237,234],[[237,76,[1,[28]]],[[19,[[3,[238,239]]]]]],[[237,76,[1,[28]]],[[19,[[3,[238,239]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[234,31],[237,31],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[[237,36],37],[[240,36],37],[[240,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[238,182],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[76]],30],[[19,[237]]]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[[237,182,239],[[19,[238]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[238,34],[[19,[[1,[171]]]]]],[-1,47,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[234,34,171],[[19,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[241,-1],[[7,[[6,[5]]]]],242],[[243,169],[[7,[[6,[5]]]]]],[[244,169],[[7,[[6,[5]]]]]],[[245,74],[[7,[[6,[5]]]]]],[[246,29],[[7,[[6,[5]]]]]],[[247,29],[[7,[[6,[5]]]]]],[[],245],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[168,47],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[241]],[10,[241]],[10,[241]]],244],[[[10,[130]],28,43],246],[[[10,[27]],[10,[248]],28,43],247],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[168,-1],14,75],[[168,-1],14,75],[[168,-1],14,75],[[168,-1],14,75],[[248,[87,[25]]],[[7,[[6,[5]]]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[249,250],[251,73],[251,73],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[250,250],[124,124],[251,251],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[250,252],[250,31],[124,47],[[-1,-1],73,[[113,[47]]]],[[250,29],33],[[-1,-1],73,[[113,[47]]]],[[],249],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[249,249],[2,3],[2,3],[2,3],[2,3],[2,3],0,0,[[250,36],37],[[124,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[251,251],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,[[1,[28]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[30,[18,[124]],123],250],[[-1,-1],251,[[113,[47]]]],[124,[[1,[191]]]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[124,182],0,[250,30],0,[250,123],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[251,2],251],[[124,34],[[1,[171]]]],[[250,34],[[18,[171]]]],0,[250,[[18,[170]]]],[250,[[18,[124]]]],[250,[[18,[76]]]],[250,183],[250,[[18,[159]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,189],[124,[[1,[190]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[249,[253,[110]]],249],[[249,30],249],[[249,2],249],[[249,254],249],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[255,42],255],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[42,255],[[],[[18,[47]]]],[[],47],[199,47],[[],2],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[[255,42],255],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[[255,42],255],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[255,70,70],[[14,[255,47]]]],[[255,-1],[[14,[255,47]]],83],[[255,[257,[256]]],[[14,[255,47]]]],[[[18,[47]],42,42,42,-1,[257,[256]]],3,83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],29],[121,[[18,[156]]]],[47,33],[[],161],[29,[[18,[110]]]],[[],162],[42,33],[121,[[18,[165]]]],[[],30],[2,[[18,[170]]]],[2,[[18,[76]]]],[[[18,[194]]],171],[121,[[18,[172]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],[[],[[253,[42]]]],0,[258,259],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[2,-1,[]],[2,-1,[]],[2,3],[258,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,[[3,[-2,13]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,258,[260,85,261,262]],[[-1,259],258,[260,85,261,262]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[258,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[6,"Option",5287],[1,"usize"],[1,"tuple"],[10,"BeaconProvider",0],[10,"Future",5288],[5,"Box",5289],[5,"Pin",5290],[5,"BeaconProviderImpl",0],[10,"ChainObserver",292],[5,"Arc",5291],[10,"ImmutableFileObserver",1406],[6,"CardanoNetwork",1994],[1,"bool"],[6,"Result",5292],[5,"TypeId",5293],[5,"APIVersionProvider",52],[5,"Version",5294],[5,"Vec",5295],[8,"StdResult",0],[5,"VersionReq",5294],[8,"OpenAPIFileName",52],[5,"HashMap",5296],[5,"EraChecker",3307],[5,"CardanoTransactionParser",89],[5,"CardanoTransaction",1994],[5,"DumbTransactionParser",89],[10,"TransactionParser",89],[5,"Path",5297],[5,"Beacon",1994],[5,"ProtocolParameters",1994],[8,"ProtocolAggregateVerificationKey",739],[8,"ProtocolGenesisSignature",739],[5,"Certificate",1994],[5,"ProtocolMessage",1994],[5,"CertificateGenesisProducer",151],[5,"Formatter",5298],[8,"Result",5298],[5,"CertificateRetrieverError",151],[6,"CertificateVerifierError",151],[5,"ProtocolGenesisError",739],[10,"CertificateRetriever",151],[1,"str"],[5,"Logger",5299],[5,"MithrilCertificateVerifier",151],[5,"ProtocolGenesisSigner",739],[10,"Error",5300],[5,"String",5301],[10,"CertificateVerifier",151],[8,"ProtocolGenesisVerificationKey",739],[5,"TxDatumBuilder",292],[6,"TxDatumFieldValue",292],[5,"TxDatum",292],[6,"TxDatumError",292],[5,"ChainObserverBuilder",292],[6,"TxDatumFieldTypeName",292],[5,"CardanoCliRunner",292],[6,"ChainObserverType",292],[5,"FakeObserver",292],[10,"Deserializer",5302],[10,"Serializer",5303],[6,"ErrorImpl",5303],[5,"Error",5304],[6,"ChainObserverError",292],[5,"Error",5298],[5,"Error",5305],[8,"ChainAddress",292],[5,"CardanoCliChainObserver",292],[5,"PallasChainObserver",292],[5,"OpCert",739],[6,"Value",5306],[10,"Hasher",5307],[10,"CliRunner",292],[5,"PathBuf",5297],[5,"Epoch",1994],[10,"Serializer",5308],[5,"SignerWithStake",1994],[5,"Sum6KesBytes",739],[5,"EraMarkersVerifier",739],[5,"ProtocolGenesisVerifier",739],[5,"MKTreeNode",739],[5,"MKProof",739],[5,"ProtocolKey",739],[10,"Serialize",5308],[10,"DeserializeOwned",5302],[10,"Clone",5309],[5,"MKTree",739],[1,"slice"],[8,"ProtocolPartyId",739],[5,"EraMarkersSigner",739],[10,"CryptoRng",5310],[10,"RngCore",5310],[10,"ProtocolKeyCodec",739],[10,"PartialEq",5311],[6,"ProtocolRegistrationErrorWrapper",739],[6,"ProtocolInitializerErrorWrapper",739],[5,"CodecError",739],[6,"EraMarkersVerifierError",739],[10,"Debug",5298],[8,"ProtocolParameters",739],[5,"Signature",5312],[8,"U32",5313],[8,"Blake2b",5314],[5,"StmAggrSig",5315],[5,"SigningKey",5316],[5,"VerifyingKey",5317],[8,"StmVerificationKeyPoP",5315],[5,"StmAggrVerificationKey",5315],[5,"Sum6KesSig",5318],[5,"StmSig",5315],[1,"u8"],[10,"SerDeShelleyFileFormat",739],[10,"AsRef",5319],[10,"Into",5319],[8,"EraMarkersVerifierSecretKey",739],[8,"ProtocolGenesisSecretKey",739],[8,"EraMarkersVerifierVerificationKey",739],[8,"HexEncodedKeySlice",1994],[8,"HexEncodedKey",1994],[8,"MKTreeStore",739],[5,"PublicKey",5320],[1,"u64"],[8,"EraMarkersVerifierSignature",739],[8,"ProtocolStakeDistribution",739],[5,"SignerFixture",5004],[5,"DummyImmutableDb",1406],[8,"ImmutableFileNumber",1994],[5,"DummyImmutablesDbBuilder",1406],[5,"ImmutableFile",1406],[6,"Ordering",5311],[10,"ImmutableDigester",1406],[5,"CardanoImmutableDigester",1406],[5,"DumbImmutableDigester",1406],[8,"Output",5321],[5,"Error",5322],[10,"Write",5323],[10,"Digest",5324],[5,"DumbImmutableFileObserver",1406],[6,"ImmutableFileObserverError",1406],[6,"ImmutableFileListingError",1406],[6,"ImmutableFileCreationError",1406],[6,"ImmutableDigesterError",1406],[5,"ParseIntError",5325],[5,"ImmutableFileSystemObserver",1406],[10,"ImmutableFileDigestCacheProvider",1787],[5,"JsonImmutableFileDigestCacheProviderBuilder",1787],[5,"JsonImmutableFileDigestCacheProvider",1787],[5,"MemoryImmutableFileDigestCacheProvider",1787],[6,"ImmutableDigesterCacheGetError",1787],[6,"ImmutableDigesterCacheStoreError",1787],[6,"ImmutableDigesterCacheProviderError",1787],[8,"ImmutableFileName",1994],[8,"HexEncodedDigest",1994],[5,"Error",5326],[6,"SignedEntityTypeDiscriminants",1994],[6,"BeaconComparison",1994],[5,"CardanoTransactionsCommitment",1994],[5,"CardanoTransactionsSetProof",1994],[6,"CertificateSignature",1994],[5,"StakeDistributionParty",1994],[5,"CertificateMetadata",1994],[5,"CertificatePending",1994],[5,"EpochSettings",1994],[5,"InternalServerError",1994],[5,"ClientError",1994],[5,"MithrilStakeDistribution",1994],[6,"ProtocolMessagePartKey",1994],[5,"SignedEntity",1994],[10,"Artifact",4875],[6,"SignedEntityType",1994],[5,"Signer",1994],[5,"SingleSignatures",1994],[5,"Snapshot",1994],[6,"CompressionAlgorithm",1994],[8,"MagicId",1994],[6,"BeaconComparisonError",1994],[6,"EpochError",1994],[1,"f64"],[8,"StdError",0],[8,"Stake",1994],[8,"ProtocolMessagePartValue",1994],[5,"Duration",5327],[8,"PartyId",1994],[8,"StakeDistribution",1994],[8,"BlockNumber",1994],[8,"TransactionHash",1994],[8,"ProtocolVersion",1994],[5,"Utc",5328],[5,"DateTime",5329],[8,"ProtocolSignerVerificationKey",739],[8,"ProtocolSignerVerificationKeySignature",739],[8,"ProtocolOpCert",739],[8,"KESPeriod",739],[8,"ProtocolSingleSignature",739],[8,"LotteryIndex",1994],[1,"i64"],[8,"U8F24",5330],[5,"CardanoTransactionsSetProofMessagePart",3812],[5,"CertificateMessage",3812],[6,"SupportedEra",3307],[5,"EraMarker",3307],[5,"EraEpochToken",3307],[5,"SupportedEraIter",3307],[6,"EraReaderError",3307],[10,"EraReaderAdapter",3307],[5,"EraReader",3307],[5,"IterBridge",5331],[5,"EraReaderAdapterBuilder",3576],[6,"EraReaderAdapterType",3576],[5,"EraMarkersPayloadCardanoChain",3576],[5,"EraReaderDummyAdapter",3576],[5,"EraReaderCardanoChainAdapter",3576],[5,"EraReaderFileAdapter",3576],[5,"EraReaderBootstrapAdapter",3576],[10,"Deserialize",5302],[5,"VerifiedCardanoTransactions",3812],[5,"CardanoTransactionCommitmentMessage",3812],[5,"CardanoTransactionCommitmentListItemMessage",3812],[5,"CardanoTransactionsProofsMessage",3812],[5,"CertificateListItemMessageMetadata",3812],[5,"CertificateListItemMessage",3812],[5,"CertificatePendingMessage",3812],[5,"EpochSettingsMessage",3812],[5,"CertificateMetadataMessagePart",3812],[5,"SignerWithStakeMessagePart",3812],[5,"SignerMessagePart",3812],[5,"MithrilStakeDistributionMessage",3812],[5,"MithrilStakeDistributionListItemMessage",3812],[5,"RegisterSignatureMessage",3812],[5,"RegisterSignerMessage",3812],[5,"SnapshotMessage",3812],[5,"SnapshotDownloadMessage",3812],[5,"SnapshotListItemMessage",3812],[6,"VerifyCardanoTransactionsProofsError",3812],[5,"MultiSigner",4751],[8,"ProtocolMultiSignature",739],[8,"ProtocolAggregationError",739],[5,"SignerBuilder",4751],[5,"SingleSigner",4751],[8,"ProtocolInitializer",739],[6,"SignerBuilderError",4751],[10,"SignableBuilder",4875],[10,"Beacon",4875],[10,"SignableBuilderService",4875],[5,"MithrilSignableBuilderService",4875],[5,"MithrilStakeDistributionSignableBuilder",4875],[5,"CardanoImmutableFilesFullSignableBuilder",4875],[5,"CardanoTransactionsSignableBuilder",4875],[10,"TransactionStore",4875],[5,"MithrilFixtureBuilder",5004],[5,"MithrilFixture",5004],[5,"TempDir",5004],[8,"HexEncodedAgregateVerificationKey",1994],[1,"array"],[6,"StakeDistributionGenerationMethod",5004],[5,"APISpec",5196],[5,"Bytes",5332],[5,"Response",5333],[5,"TestHttpServer",5255],[6,"SocketAddr",5334],[10,"Filter",5335],[10,"Send",5336],[10,"Sync",5336],[8,"ProtocolRegistrationError",739],[8,"ProtocolInitializerError",739],[8,"ProtocolClosedKeyRegistration",739],[15,"NotEnoughImmutable",1782],[15,"FileStemExtraction",1785],[15,"FileNameExtraction",1785],[8,"CacheProviderResult",1787],[15,"CurrentEraNotFound",3572],[15,"AdapterFailure",3572],[10,"FromMessageAdapter",3812],[10,"ToMessageAdapter",3812],[10,"TryFromMessageAdapter",3812],[10,"TryToMessageAdapter",3812],[15,"InvalidSetProof",4749],[15,"RandomDistribution",5195]],"b":[[203,"impl-Display-for-CertificateRetrieverError"],[204,"impl-Debug-for-CertificateRetrieverError"],[205,"impl-Debug-for-CertificateVerifierError"],[206,"impl-Display-for-CertificateVerifierError"],[462,"impl-Display-for-ChainObserverError"],[463,"impl-Debug-for-ChainObserverError"],[464,"impl-Debug-for-TxDatumError"],[465,"impl-Display-for-TxDatumError"],[467,"impl-Display-for-TxDatumFieldTypeName"],[468,"impl-Debug-for-TxDatumFieldTypeName"],[469,"impl-Debug-for-TxDatumFieldValue"],[470,"impl-Display-for-TxDatumFieldValue"],[473,"impl-Display-for-ChainObserverType"],[474,"impl-Debug-for-ChainObserverType"],[479,"impl-From%3C%26TxDatumFieldValue%3E-for-TxDatumFieldTypeName"],[480,"impl-From%3CTxDatumFieldValue%3E-for-TxDatumFieldTypeName"],[1028,"impl-Debug-for-ProtocolRegistrationErrorWrapper"],[1029,"impl-Display-for-ProtocolRegistrationErrorWrapper"],[1030,"impl-Display-for-ProtocolInitializerErrorWrapper"],[1031,"impl-Debug-for-ProtocolInitializerErrorWrapper"],[1033,"impl-Debug-for-CodecError"],[1034,"impl-Display-for-CodecError"],[1035,"impl-Display-for-EraMarkersVerifierError"],[1036,"impl-Debug-for-EraMarkersVerifierError"],[1039,"impl-Debug-for-ProtocolGenesisError"],[1040,"impl-Display-for-ProtocolGenesisError"],[1060,"impl-From%3C%26CardanoTransaction%3E-for-MKTreeNode"],[1061,"impl-From%3CCardanoTransaction%3E-for-MKTreeNode"],[1062,"impl-From%3CString%3E-for-MKTreeNode"],[1064,"impl-From%3C%26str%3E-for-MKTreeNode"],[1068,"impl-From%3CSignature%3E-for-ProtocolKey%3CSignature%3E"],[1069,"impl-From%3CStmAggrSig%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CStmAggrSig%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E"],[1070,"impl-From%3CSigningKey%3E-for-ProtocolKey%3CSigningKey%3E"],[1071,"impl-From%3CMKProof%3E-for-ProtocolKey%3CMKProof%3E"],[1072,"impl-From%3CVerifyingKey%3E-for-ProtocolKey%3CVerifyingKey%3E"],[1073,"impl-From%3CVerificationKeyPoP%3E-for-ProtocolKey%3CVerificationKeyPoP%3E"],[1074,"impl-From%3CStmAggrVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CStmAggrVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E"],[1075,"impl-From%3COpCert%3E-for-ProtocolKey%3COpCert%3E"],[1076,"impl-From%3CSum6KesSig%3E-for-ProtocolKey%3CSum6KesSig%3E"],[1077,"impl-From%3CStmSig%3E-for-ProtocolKey%3CStmSig%3E"],[1287,"impl-TryFrom%3CString%3E-for-ProtocolKey%3CT%3E"],[1288,"impl-TryFrom%3C%26str%3E-for-ProtocolKey%3CT%3E"],[1550,"impl-Debug-for-ImmutableFileObserverError"],[1551,"impl-Display-for-ImmutableFileObserverError"],[1552,"impl-Display-for-ImmutableFileListingError"],[1553,"impl-Debug-for-ImmutableFileListingError"],[1554,"impl-Display-for-ImmutableFileCreationError"],[1555,"impl-Debug-for-ImmutableFileCreationError"],[1556,"impl-Debug-for-ImmutableDigesterError"],[1557,"impl-Display-for-ImmutableDigesterError"],[1567,"impl-From%3CError%3E-for-ImmutableFileListingError"],[1568,"impl-From%3CImmutableFileCreationError%3E-for-ImmutableFileListingError"],[1571,"impl-From%3CImmutableFileListingError%3E-for-ImmutableDigesterError"],[1572,"impl-From%3CError%3E-for-ImmutableDigesterError"],[1860,"impl-Display-for-ImmutableDigesterCacheGetError"],[1861,"impl-Debug-for-ImmutableDigesterCacheGetError"],[1862,"impl-Display-for-ImmutableDigesterCacheStoreError"],[1863,"impl-Debug-for-ImmutableDigesterCacheStoreError"],[1864,"impl-Debug-for-ImmutableDigesterCacheProviderError"],[1865,"impl-Display-for-ImmutableDigesterCacheProviderError"],[1870,"impl-From%3CError%3E-for-ImmutableDigesterCacheGetError"],[1871,"impl-From%3CError%3E-for-ImmutableDigesterCacheGetError"],[1873,"impl-From%3CError%3E-for-ImmutableDigesterCacheStoreError"],[1874,"impl-From%3CError%3E-for-ImmutableDigesterCacheStoreError"],[1877,"impl-From%3CImmutableDigesterCacheStoreError%3E-for-ImmutableDigesterCacheProviderError"],[1878,"impl-From%3CImmutableDigesterCacheGetError%3E-for-ImmutableDigesterCacheProviderError"],[2075,"impl-Add-for-Epoch"],[2076,"impl-Add%3Cu64%3E-for-Epoch"],[2077,"impl-AddAssign%3Cu64%3E-for-Epoch"],[2078,"impl-AddAssign-for-Epoch"],[2477,"impl-SignedEntity%3CSnapshot%3E"],[2478,"impl-SignedEntity%3CMithrilStakeDistribution%3E"],[2479,"impl-SignedEntity%3CCardanoTransactionsCommitment%3E"],[2495,"impl-PartialEq-for-Epoch"],[2496,"impl-PartialEq%3Cu64%3E-for-%26Epoch"],[2497,"impl-PartialEq%3Cu64%3E-for-Epoch"],[2582,"impl-Display-for-Beacon"],[2583,"impl-Debug-for-Beacon"],[2585,"impl-Display-for-BeaconComparisonError"],[2586,"impl-Debug-for-BeaconComparisonError"],[2587,"impl-Display-for-CardanoNetwork"],[2588,"impl-Debug-for-CardanoNetwork"],[2597,"impl-Display-for-Epoch"],[2598,"impl-Debug-for-Epoch"],[2599,"impl-Debug-for-EpochError"],[2600,"impl-Display-for-EpochError"],[2605,"impl-Debug-for-ProtocolMessagePartKey"],[2606,"impl-Display-for-ProtocolMessagePartKey"],[2611,"impl-Debug-for-SignedEntityType"],[2612,"impl-Display-for-SignedEntityType"],[2617,"impl-Display-for-CompressionAlgorithm"],[2618,"impl-Debug-for-CompressionAlgorithm"],[2636,"impl-From%3CString%3E-for-InternalServerError"],[2637,"impl-From%3C%26str%3E-for-InternalServerError"],[2638,"impl-From%3CError%3E-for-InternalServerError"],[2647,"impl-From%3CSignedEntityType%3E-for-SignedEntityTypeDiscriminants"],[2649,"impl-From%3C%26SignedEntityType%3E-for-SignedEntityTypeDiscriminants"],[2654,"impl-From%3CSignerFixture%3E-for-SignerWithStake"],[2655,"impl-From%3C%26SignerFixture%3E-for-SignerWithStake"],[3020,"impl-Sub-for-Epoch"],[3021,"impl-Sub%3Cu64%3E-for-Epoch"],[3022,"impl-SubAssign%3Cu64%3E-for-Epoch"],[3023,"impl-SubAssign-for-Epoch"],[3107,"impl-TryInto%3Ci64%3E-for-%26Epoch"],[3109,"impl-TryInto%3Ci64%3E-for-Epoch"],[3416,"impl-Debug-for-EraReaderError"],[3417,"impl-Display-for-EraReaderError"],[3419,"impl-Display-for-SupportedEra"],[3420,"impl-Debug-for-SupportedEra"],[3670,"impl-Debug-for-AdapterType"],[3671,"impl-Display-for-AdapterType"],[4256,"impl-Display-for-VerifyCardanoTransactionsProofsError"],[4257,"impl-Debug-for-VerifyCardanoTransactionsProofsError"],[4799,"impl-Debug-for-SignerBuilderError"],[4800,"impl-Display-for-SignerBuilderError"],[4967,"impl-Serialize-for-dyn+Artifact"],[4968,"impl-Serialize-for-dyn+Artifact+%2B+Sync"],[4969,"impl-Serialize-for-dyn+Artifact+%2B+Send+%2B+Sync"],[4970,"impl-Serialize-for-dyn+Artifact+%2B+Send"]]}],\
["mithril_doc",{"doc":"Commands to generate a markdown documentation for the …","t":"KYKYFFFNNNNNNNNNNNNNNNNNOOONNOOONONNMMNNNNNNNNNNNNONENONNNNNNNNNNNNNN","n":["Documenter","Documenter","DocumenterDefault","DocumenterDefault","FieldDoc","GenerateDocCommands","StructDoc","add_param","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","command","command_for_update","command_line_long","command_line_short","data","default","default","default_value","description","environment_variable","eq","example","execute","execute_with_configurations","extract","extract","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into","is_mandatory","merge_struct_doc","mithril_doc_derive","new","parameter","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"mithril_doc"],[69,"alloc::string"],[70,"core::option"],[71,"clap_builder::builder::command"],[72,"core::result"],[73,"core::fmt"],[74,"core::fmt"],[75,"clap_builder"],[76,"clap_builder::util::id"],[77,"core::any"]],"d":["Extractor for struct without Default trait.","To extract doc from a struct.","Extractor for struct with Default trait.","To extract doc from a struct with Default trait.","Information to document a field","Generate documentation","Information about the struct.","Add information about one parameter.","","","","","","","","","","","","","","","","","Long option for the command line","Short option for the command line","List of fields","","","Default value","Description of the parameter","Environment variable","","Usage example","Generate the command line documentation.","Generate the command line documentation with config info.","Extract information used to generate documentation.","Extract information used to generate documentation.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is a mandatory parameter","Merge two StructDoc into a third one.","","Create an empty struct.","Name of the parameter","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,8,8,7,1,8,7,1,8,7,1,8,7,1,8,8,8,7,7,1,7,1,7,7,7,8,7,8,8,18,19,7,1,8,7,1,8,8,8,8,7,1,8,7,1,0,1,7,7,1,8,7,1,8,7,1,8,7,1,8,8,8],"f":[0,0,0,0,0,0,0,[[1,2,2,[4,[3]],[4,[3]],[4,[3]]],5],[6,6],[6,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[1,1],[8,8],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],6],[[],6],0,0,0,[[],7],[[],1],0,0,0,[[8,8],9],0,[[8,6],[[10,[5,3]]]],[[8,6,[11,[1]]],[[10,[5,3]]]],[[],1],[[],1],[[7,12],13],[[1,12],13],[[8,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,[[10,[8,15]]]],[14,[[10,[8,15]]]],[[],[[4,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,1],1],0,[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[8,14],[[10,[5,15]]]],[[8,14],[[10,[5,15]]]]],"c":[],"p":[[5,"StructDoc",0],[1,"str"],[5,"String",69],[6,"Option",70],[1,"tuple"],[5,"Command",71],[5,"FieldDoc",0],[5,"GenerateDocCommands",0],[1,"bool"],[6,"Result",72],[1,"slice"],[5,"Formatter",73],[8,"Result",73],[5,"ArgMatches",74],[8,"Error",75],[5,"Id",76],[5,"TypeId",77],[10,"Documenter",0],[10,"DocumenterDefault",0]],"b":[]}],\
["mithril_doc_derive",{"doc":"","t":"YY","n":["Documenter","DocumenterDefault"],"q":[[0,"mithril_doc_derive"]],"d":["To extract doc from a struct.","To extract doc from a struct with Default trait."],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]}],\
["mithril_persistence",{"doc":"Shared datatypes and traits used to for the persistence …","t":"CCCPGFFFFIFPFNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNRFGPFFKFKIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMMNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNRRFKKCNNNNNNNNNNMNMNMNNNNNNNNNNNNMNNNNNNNNNGFFPPRFPPPRFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["database","sqlite","store","Aggregator","ApplicationNodeType","DatabaseVersion","DatabaseVersionChecker","DatabaseVersionProvider","DatabaseVersionUpdater","DbVersion","SignedEntityTypeHydrator","Signer","SqlMigration","add_migration","alterations","application_type","apply","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","compare","create_table_if_not_exists","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_application_version","get_connection","get_connection","get_definition","get_definition","get_projection","hydrate","hydrate","init","init","init","init","init","init","init","into","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","updated_at","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Entity","EntityCursor","HydrationError","InvalidData","Projection","ProjectionField","Provider","SourceAlias","SqLiteEntity","SqliteConnection","WhereCondition","add_field","and_where","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","default","default","default","definition","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","expand","expand","find","find","fmt","fmt","fmt","from","from","from","from","from","from","from","get_connection","get_definition","get_fields","get_iterator","get_projection","hydrate","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new","new","next","or_where","output_type","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vacuum_database","vzip","vzip","vzip","vzip","vzip","vzip","where_in","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Key","Record","StakeStore","StakeStorer","StorePruner","adapter","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","get_adapter","get_adapter","get_max_records","get_max_records","get_stakes","get_stakes","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","prune","prune","saturating_as","saturating_cast_from","save_stakes","save_stakes","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","AdapterError","DumbStoreAdapter","FailStoreAdapter","GeneralError","InitializationError","Key","MemoryAdapter","OpeningStreamError","ParsingDataError","QueryError","Record","SQLiteAdapter","SQLiteResultIterator","StoreAdapter","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","cjk_compat_variants","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","get_iter","get_iter","get_iter","get_iter","get_iter","get_last_n_records","get_last_n_records","get_last_n_records","get_last_n_records","get_last_n_records","get_record","get_record","get_record","get_record","get_record","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","new","new","next","nfc","nfd","nfkc","nfkd","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","record_exists","record_exists","record_exists","record_exists","record_exists","remove","remove","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","store_record","store_record","store_record","store_record","store_record","stream_safe","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":[[0,"mithril_persistence"],[3,"mithril_persistence::database"],[244,"mithril_persistence::sqlite"],[447,"mithril_persistence::store"],[490,"mithril_persistence::store::adapter"],[722,"mithril_common"],[723,"core::option"],[724,"core::cmp"],[725,"core::fmt"],[726,"core::fmt"],[727,"mithril_common::entities::signed_entity_type"],[728,"core::result"],[729,"sqlite::cursor"],[730,"slog"],[731,"core::any"],[732,"sqlite::value"],[733,"alloc::vec"],[734,"std::collections::hash::map"],[735,"sqlite::cursor"],[736,"tokio::sync::rwlock"],[737,"core::marker"],[738,"core::marker"],[739,"core::future::future"],[740,"core::pin"],[741,"mithril_common::entities::type_alias"],[742,"unicode_normalization::replace"],[743,"core::hash"],[744,"core::cmp"],[745,"serde::ser"],[746,"serde::de"],[747,"core::cmp"],[748,"sqlite::connection"],[749,"unicode_normalization::recompose"],[750,"unicode_normalization::decompose"],[751,"core::error"],[752,"unicode_normalization::stream_safe"]],"d":["database module. This module contains providers and …","SQLite module. This module provides a minimal yet useful …","Define a generic way to store data with the Store Adapters…","Aggregator node type","Application using a database","Entity related to the <code>db_version</code> database table.","Struct to perform application version check in the …","Provider for the DatabaseVersion entities using the …","Write Provider for the DatabaseVersion entities. This will …","Database version.","Helper struct to hydrate SignedEntityType.","Signer node type","Represent a file containing SQL structure or data …","Register a migration.","SQL statements to alter the database.","Name of the application.","Apply migrations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method to create the table at the beginning of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Read the application version from the database.","","","","","","Create a SignedEntityType from data coming from the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","DatabaseVersionProvider constructor.","DatabaseVersionUpdater constructor.","constructor","ApplicationNodeType constructor.","Create a new SQL migration instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Persist the given entity and return the projection of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date of the last version upgrade","Version of the database structure.","The semver version this migration targets.","","","","","","","","","","","","","","","","","","","","","","Entity type returned by the result cursor.","Database query result Iterator wrapper. This wrapper …","SqLite hydration error","data do not conform to expectations","Projection is a definition of field mapping during a query.","Each projection field is defined by","A Provider is able to performe queries on a database and …","Handful tool to store SQL source aliases.","How to hydrate an entity from a SQLite result row","Type of the connection used in Mithril","Where condition builder.","Add a new field to the definition. This is one of the …","Add a new parameter using a AND operator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Field definition. Some field definitions can be fairly …","","","","","","","","","","","","","","","","","","","Turn the condition into a SQL string representation.","Turn the Projection into a string suitable for use in SQL …","Perform the parametrized definition query.","Perform the parametrized definition query.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a Projection from a list of tuples …","Returns the argument unchanged.","Returns the argument unchanged.","Share the connection.","Return the definition of this provider, ie the actual SQL …","Returns the list of the ProjectionFields of this …","get an iterator from the current alias map","Construct a Projection that will allow to hydrate this …","This method is intended to be used when creating new …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Field name alias, this is the output name of the field.","Instanciate a new condition from an expression.","EntityCursor constructor.","ProjectionField constructor","Instanciate a new Projection","Create a new alias from a <code>&amp;[(name, alias)]</code> list","Spawning entities from Result iterator. This iterator will …","Add a new condition with a OR operator","This indicates the SQL type of the output data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do a vacuum on the given connection, this will reconstruct …","","","","","","","Instanciate a condition with a <code>IN</code> statement.","","","","","","","","","","","","","The key type","The record type","A StakeStorer that use a StoreAdapter to store data.","Represent a way to store the stake of mithril party …","Implementing this trait will make store able to limit the …","Define a generic way to store data with the Store Adapter, …","","","","","","","","","","Returns the argument unchanged.","This trait requires a way to get the internal adapter.","","Return the maximum number of elements that can exist in …","","Get the stakes of all party at a given <code>epoch</code>.","","","Calls <code>U::from(self)</code>.","","","StakeStore factory","","","Prune elements exceeding the specified limit.","Prune elements exceeding the specified limit.","","","Save the stakes in the store for a given <code>epoch</code>.","","","","","","","","","","StoreAdapter related errors","A StoreAdapter that store one fixed data record, for …","A StoreAdapter which always fails, for testing purpose.","Generic StoreAdapter error.","Error raised when the store initialization fails.","The key type","A StoreAdapter that store data in memory.","Error raised when the opening of a IO stream fails.","Error raised when the parsing of a IO stream fails.","Error while querying the subsystem.","The record type","Store adapter for SQLite3","Iterator over SQLite adapter results.","Represent a way to store Key/Value pair data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get an iterator over the stored values, from the latest to …","","","","","Get the last <code>n</code> records in the store","","","","","Get the record stored using the given <code>key</code>.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","MemoryAdapter factory","Create a new SQLiteAdapter instance.","Create a new instance of the iterator.","DumbStoreAdapter factory","FailStoreAdapter factory","","","","","","","","","","","","","","","","","","Check if a record exist for the given <code>key</code>.","","","","","remove values from store","","","","","","","","","","","","","","","","","","Store the given <code>record</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,0,0,0,0,0,0,0,6,0,1,2,7,1,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,6,7,6,7,2,2,9,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,6,7,2,6,6,6,7,7,7,2,2,2,6,6,7,2,9,15,71,1,6,7,2,9,9,15,9,15,7,71,7,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,1,6,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,15,6,7,6,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,7,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,9,15,71,1,6,7,2,31,0,0,20,0,0,0,0,0,0,0,18,26,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,27,27,26,18,27,35,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,18,31,31,20,20,27,26,32,35,18,18,20,27,31,31,18,27,33,33,26,32,35,18,20,27,26,32,35,18,20,27,32,26,32,35,18,20,27,26,32,35,18,20,27,35,26,32,35,18,27,32,26,35,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,27,20,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,26,32,35,18,20,27,0,26,32,35,18,20,27,26,26,32,35,18,20,27,26,32,35,18,20,27,40,40,0,0,0,0,46,46,46,46,46,46,46,46,46,46,40,46,40,46,47,46,46,46,46,46,46,46,46,40,40,46,46,47,46,46,46,46,46,46,46,46,46,0,0,0,55,55,41,0,55,55,55,41,0,0,0,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,66,53,54,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,55,55,56,60,66,53,54,55,41,56,60,53,54,41,56,60,53,54,41,56,60,53,54,56,60,66,53,54,55,56,60,66,53,54,55,66,56,60,66,53,54,55,56,60,66,53,54,55,66,66,66,66,66,66,66,66,66,66,66,66,66,56,60,66,53,54,66,66,66,66,66,56,60,66,53,54,55,56,60,66,53,54,55,41,56,60,53,54,41,56,60,53,54,56,60,66,53,54,55,56,60,66,53,54,55,55,41,56,60,53,54,66,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55,56,60,66,53,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],0,0,[1,[[4,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,6],[7,7],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[2,2],8],[[-1,-2],8,[],[]],[[9,6],[[4,[3]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[[6,6],11],[[7,7],11],[[2,2],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[6,12],13],[[6,12],13],[[7,12],13],[[2,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,6],[[4,[[5,[7]]]]]],[9,14],[15,14],[[9,16],17],[[15,16],17],[[],18],[[10,16],[[21,[19,20]]]],[22,[[21,[7,20]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,9],[14,15],[[23,6,14],1],[16,[[4,[6]]]],[[24,16],2],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[[7,7],[[5,[8]]]],[[2,2],[[5,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,7],[[4,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[18,16,16,16],3],[[26,26],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[27,27],[[-1,-2],3,[],[]],[[],26],[[],18],[[],27],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[26,[[3,[17,[29,[28]]]]]],[[18,27],17],[[[31,[],[[30,[-1]]]],26],[[4,[[32,[-1]]]]],33],[[[31,[],[[30,[-1]]]],26],[[4,[[32,[-1]]]]],33],[[20,12],13],[[20,12],13],[[27,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[34,[[3,[16,16,16]]]]],18],[-1,-1,[]],[-1,-1,[]],[[[31,[],[[30,[-1]]]]],14,33],[[[31,[],[[30,[-1]]]],16],17,33],[18,[[29,[35]]]],[27,[[36,[17,17]]]],[[],18],[22,[[21,[33,20]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[16,[29,[28]]],26],[37,[[32,[-1]]],[]],[[16,16,16],35],[[[29,[35]]],18],[[[34,[[3,[16,16]]]]],27],[[[32,[-1]]],[[5,[-1]]],33],[[26,26],26],0,[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,[[4,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,[29,[28]]],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[10,-1,[]],[10,-1,[]],[10,3],[-1,-1,[]],[[[40,[],[[38,[-1]],[39,[-2]]]]],[[43,[[42,[41]]]]],[44,45],[44,45]],[46,[[43,[[42,[41]]]]]],[[[40,[],[[38,[-1]],[39,[-2]]]]],[[5,[10]]],[44,45],[44,45]],[46,[[5,[10]]]],[[47,48],[[50,[[42,[49]]]]]],[[46,48],[[50,[[42,[49]]]]]],[[],10],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[[[42,[41]],[5,[10]]],46],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[[[40,[],[[38,[-1]],[39,[-2]]]]],[[50,[[42,[49]]]]],[44,45],[44,45]],[[[40,[],[[38,[-1]],[39,[-2]]]]],[[50,[[42,[49]]]]],[44,45],[44,45]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,48,51],[[50,[[42,[49]]]]]],[[46,48,51],[[50,[[42,[49]]]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[52,[-2]]],[],[]],[[],[[53,[-1,-2]]],[],[]],[[],[[54,[-1,-2]]],[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[[55,12],13],[[55,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[41,[],[[38,[-1]],[39,[-2]]]]],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]]],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59]],[[[60,[-1,-2]]],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62]],[[[53,[-1,-2]]],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44]],[[[54,[-1,-2]]],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44]],[[[41,[],[[38,[-1]],[39,[-2]]]],10],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]],10],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59]],[[[60,[-1,-2]],10],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62]],[[[53,[-1,-2]],10],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44]],[[[54,[-1,-2]],10],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44]],[[[41,[],[[38,[-1]],[39,[-2]]]],-1],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]],-3],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59],[]],[[[60,[-1,-2]],-3],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62],[]],[[[53,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[[[54,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2,-3]]],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,3,[]],[-1,[[3,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[3,[-2,-3,-4]]],[],[],[],[]],[-1,[[3,[-2,-3,-4,-5]]],[],[],[],[],[]],[[[5,[[29,[[3,[-1,-2]]]]]]],[[21,[[56,[-1,-2]],55]]],[57,58,45,44,59],[45,44,59]],[[16,[64,[14]]],[[21,[[60,[-1,-2]],55]]],61,62],[[65,16],[[21,[[66,[-1]],55]]],62],[[],[[53,[-1,-2]]],[],[]],[[],[[54,[-1,-2]]],[],[]],[[[66,[-1]]],[[5,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[68,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[68,[-2]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[-1,[[3,[-2,11]]],[],[]],[[[41,[],[[38,[-1]],[39,[-2]]]],-1],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]],-3],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59],[]],[[[60,[-1,-2]],-3],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62],[]],[[[53,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[[[54,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[[[41,[],[[38,[-1]],[39,[-2]]]],-1],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]],-3],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59],[]],[[[60,[-1,-2]],-3],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62],[]],[[[53,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[[[54,[-1,-2]],-3],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,[[5,[69]]]],[[[41,[],[[38,[-1]],[39,[-2]]]],-1,-2],[[50,[[42,[49]]]]],[],[]],[[[56,[-1,-2]],-3,-4],[[50,[[42,[49]]]]],[57,58,45,44,59],[45,44,59],[],[]],[[[60,[-1,-2]],-3,-4],[[50,[[42,[49]]]]],[45,44,61,62],[45,44,61,62],[],[]],[[[53,[-1,-2]],-3,-4],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[],[]],[[[54,[-1,-2]],-3,-4],[[50,[[42,[49]]]]],[63,59,45,44],[59,45,44],[],[]],[-1,[[70,[-2]]],[],[]],[-1,17,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"DatabaseVersionChecker",3],[5,"SqlMigration",3],[1,"tuple"],[8,"StdResult",722],[6,"Option",723],[6,"ApplicationNodeType",3],[5,"DatabaseVersion",3],[6,"Ordering",724],[5,"DatabaseVersionProvider",3],[1,"usize"],[1,"bool"],[5,"Formatter",725],[8,"Result",725],[8,"SqliteConnection",244],[5,"DatabaseVersionUpdater",3],[1,"str"],[5,"String",726],[5,"Projection",244],[6,"SignedEntityType",727],[6,"HydrationError",244],[6,"Result",728],[5,"Row",729],[5,"Logger",730],[8,"DbVersion",3],[5,"TypeId",731],[5,"WhereCondition",244],[5,"SourceAlias",244],[6,"Value",732],[5,"Vec",733],[17,"Entity"],[10,"Provider",244],[5,"EntityCursor",244],[10,"SqLiteEntity",244],[1,"slice"],[5,"ProjectionField",244],[5,"Iter",734],[5,"CursorWithOwnership",729],[17,"Key"],[17,"Record"],[10,"StorePruner",447],[10,"StoreAdapter",490],[5,"Box",735],[5,"RwLock",736],[10,"Sync",737],[10,"Send",737],[5,"StakeStore",447],[10,"StakeStorer",447],[5,"Epoch",738],[10,"Future",739],[5,"Pin",740],[8,"StakeDistribution",741],[5,"Replacements",742],[5,"DumbStoreAdapter",490],[5,"FailStoreAdapter",490],[6,"AdapterError",490],[5,"MemoryAdapter",490],[10,"Hash",743],[10,"Eq",724],[10,"Clone",744],[5,"SQLiteAdapter",490],[10,"Serialize",745],[10,"DeserializeOwned",746],[10,"PartialEq",724],[5,"Arc",747],[5,"Connection",748],[5,"SQLiteResultIterator",490],[5,"Recompositions",749],[5,"Decompositions",750],[10,"Error",751],[5,"StreamSafe",752],[5,"SignedEntityTypeHydrator",3]],"b":[[99,"impl-Debug-for-ApplicationNodeType"],[100,"impl-Display-for-ApplicationNodeType"],[321,"impl-Display-for-HydrationError"],[322,"impl-Debug-for-HydrationError"],[561,"impl-Debug-for-AdapterError"],[562,"impl-Display-for-AdapterError"]]}],\
["mithril_signer",{"doc":"Mithril Signer crate documentation","t":"PPKGFPFPFPFFPPPPPFFPPPFFKPPPPPPKGGKPPFFGKGFFPNOOMNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNMNNOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOMNMNMNOOMNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOCCCHHFFNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNN","n":["Adapter","AggregateVerificationKeyComputationFailed","AggregatorClient","AggregatorClientError","AggregatorHTTPClient","ApiVersionMismatch","Configuration","Critical","DefaultConfiguration","FileParse","FromEpochSettingsAdapter","FromPendingCertificateMessageAdapter","HTTPClientCreation","IOError","Init","JsonParseFailed","KeepState","MithrilProtocolInitializerBuilder","MithrilSingleSigner","NoStakeForSelf","NoStakeForSigner","NoValueError","ProductionServiceBuilder","ProtocolInitializerStore","ProtocolInitializerStorer","ProtocolSignerCreationFailure","ProxyCreation","Registered","RemoteServerLogical","RemoteServerTechnical","RemoteServerUnreachable","Runner","RunnerError","RuntimeError","ServiceBuilder","SignatureFailed","Signed","SignerRunner","SignerServices","SignerState","SingleSigner","SingleSignerError","StateMachine","ToRegisterSignerMessageAdapter","Unregistered","adapt","aggregator_endpoint","api_version_provider","associate_signers_with_stake","associate_signers_with_stake","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","beacon_provider","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build_era_reader_adapter","build_sqlite_connection","can_i_sign","can_i_sign","cardano_cli_path","cardano_node_socket_path","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_handler","chain_observer","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into_box","collect","compute_aggregate_verification_key","compute_aggregate_verification_key","compute_message","compute_message","compute_single_signature","compute_single_signature","compute_single_signatures","compute_single_signatures","cycle","data_stores_directory","database","db_directory","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","digester","disable_digests_cache","do_erased_serialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_checker","era_reader","era_reader_adapter_params","era_reader_adapter_type","era_reader_adapter_type","erased_serialize","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_adapter","get_current_beacon","get_current_beacon","get_epoch_settings","get_epoch_settings","get_last_protocol_initializer","get_last_protocol_initializer","get_max_records","get_network","get_party_id","get_party_id","get_pending_certificate","get_pending_certificate","get_protocol_initializer","get_protocol_initializer","get_sqlite_file","get_state","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_critical","is_init","is_registered","is_signed","is_unregistered","kes_secret_key_path","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","network","network_magic","new","new","new","new","new","new","operational_certificate_path","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","override_chain_observer_builder","override_immutable_file_observer_builder","party_id","prepare_request_builder","protocol_initializer_store","register_signatures","register_signatures","register_signer","register_signer","register_signer_to_aggregator","register_signer_to_aggregator","relay_endpoint","reset_digests_cache","retrieve_epoch_settings","retrieve_epoch_settings","retrieve_pending_certificate","retrieve_pending_certificate","run","run_interval","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save_protocol_initializer","save_protocol_initializer","send_single_signature","send_single_signature","serialize","signable_builder_service","single_signer","source","source","stake_store","store_retention_limit","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_adapt","try_adapt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_era_checker","update_era_checker","update_stake_distribution","update_stake_distribution","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","message","message","nested_error","nested_error","epoch","epoch","epoch","signed_entity_type","cardano_transaction_migration","migration","provider","get_migrations","get_migrations","CardanoTransactionRecord","CardanoTransactionRepository","az","az","block_number","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","create_transaction","create_transactions","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","from","get_projection","get_transaction","hydrate","immutable_file_number","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","store_transactions","to_owned","transaction_hash","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":[[0,"mithril_signer"],[665,"mithril_signer::RuntimeError"],[669,"mithril_signer::SignerState"],[673,"mithril_signer::database"],[676,"mithril_signer::database::cardano_transaction_migration"],[677,"mithril_signer::database::migration"],[678,"mithril_signer::database::provider"],[748,"mithril_common::messages::epoch_settings"],[749,"mithril_common::entities::epoch_settings"],[750,"mithril_common::entities::epoch"],[751,"mithril_common::entities::signer"],[752,"core::future::future"],[753,"alloc::boxed"],[754,"core::pin"],[755,"mithril_common::entities::type_alias"],[756,"mithril_common::entities::protocol_parameters"],[757,"std::path"],[758,"core::option"],[759,"mithril_common::crypto_helper::cardano::key_certification"],[760,"mithril_common::crypto_helper::types::alias"],[761,"mithril_common"],[762,"mithril_common::chain_observer::interface"],[763,"alloc::sync"],[764,"mithril_common::era::era_reader"],[765,"mithril_persistence::database::version_checker"],[766,"alloc::vec"],[767,"mithril_persistence::sqlite"],[768,"mithril_common::entities::certificate_pending"],[769,"config::source"],[770,"alloc::string"],[771,"config::value"],[772,"config::map"],[773,"config::error"],[774,"core::result"],[775,"mithril_common::entities::signer"],[776,"mithril_common::entities::protocol_message"],[777,"mithril_common::entities::single_signatures"],[778,"serde::de"],[779,"erased_serde::ser"],[780,"erased_serde::ser"],[781,"mithril_doc"],[782,"core::fmt"],[783,"core::fmt"],[784,"mithril_common::entities::epoch"],[785,"tokio::sync::rwlock"],[786,"mithril_common::entities::cardano_network"],[787,"mithril_common::entities::type_alias"],[788,"core::time"],[789,"reqwest::async_impl::request"],[790,"serde::ser"],[791,"core::error"],[792,"mithril_common::messages::certificate_pending"],[793,"mithril_common::messages::register_signer"],[794,"core::any"],[795,"mithril_common::entities::cardano_transaction"],[796,"mithril_common::entities::cardano_transaction"],[797,"sqlite::cursor"],[798,"mithril_persistence::sqlite::entity"]],"d":["Adapter error","Avk computation Error","Trait for mocking and testing a <code>AggregatorClient</code>","Error structure for the Aggregator Client.","AggregatorHTTPClient is a http client for an aggregator","Incompatible API version error","Client configuration","Critical error means the runtime will exit and the …","Default configuration with all the default values for …","Parse file error","Adapter to convert EpochSettingsMessage to EpochSettings.","Adapter to turn CertificatePendingMessage instances into …","HTTP client creation error","Mostly network errors.","Starting state","Could not parse response.","KeepState error means the runtime will keep its state and …","This is responsible of creating new instances of …","Implementation of the SingleSigner.","Could not associate my node with a stake.","Could not find the stake for one of the signers.","Value was expected from a subsystem but None was returned.","Create a SignerService instance for Production environment.","Implementation of the ProtocolInitializerStorer","Store the ProtocolInitializer used for each Epoch. This is …","Cryptographic Signer creation error.","Proxy creation error","<code>Registered</code> state. The Signer has successfuly registered …","The aggregator host responded it cannot fulfill our …","The aggregator host has returned a technical error.","Could not reach aggregator.","This trait is mainly intended for mocking.","This type represents the errors thrown from the Runner.","RuntimeError Error kinds tied to their faith in the state …","The ServiceBuilder is intended to manage Services instance …","Signature Error","<code>Signed</code> state. The Signer has signed the message for the …","Controller methods for the Signer’s state machine.","This structure groups all the services required by the …","Different possible states of the state machine.","The SingleSigner is the structure responsible of issuing …","SingleSigner error structure.","The state machine is responsible of the execution of the …","Adapter to create RegisterSignerMessage from Signer …","Hold the latest known epoch in order to help …","Method to convert.","Aggregator endpoint","API version provider","From a list of signers, associate them with the stake read …","","","","","","","","","","","","","","","","","","","","Beacon provider service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a SignerService instance.","Build a Services for the Production environment.","Create a ProtocolInitializer instance.","Create era reader adapter from configuration settings.","Build a SQLite connection.","Check if all prerequisites for signing are met.","","Cardano CLI tool path","Path of the socket used by the Cardano CLI tool to …","","","","","","","","","","","","","","","","","","","Certificate handler service","Chain Observer service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute aggregate verification key from stake distribution","Compute aggregate verification key from stake distribution","Create the message to be signed with the single signature.","","Create the single signature.","","Computes single signatures","","Perform a cycle of the state machine.","Directory to store signer data (Stakes, Protocol …","database module. This module contains the entities …","Directory to snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digester service","Disable immutables digests cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Era checker service","Era reader service","Era reader adapter parameters","Era reader adapter type","Era reader adapter type","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Fetch the current beacon from the Cardano node.","","Fetch the current epoch settings if any.","","Return the list of the N last saved protocol initializers …","","","Return the CardanoNetwork value from the configuration.","Get party id","Get party id","Fetch the current pending certificate if any.","","Fetch a protocol initializer if any saved for the given …","","Create the SQL store directory if not exist and return the …","Return the current state of the state machine.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Easy matching Critical errors.","Returns <code>true</code> if the state in <code>Init</code>","Returns <code>true</code> if the state in <code>Registered</code>","Returns <code>true</code> if the state in <code>Signed</code>","Returns <code>true</code> if the state in <code>Unregistered</code>","File path to the KES secret key of the pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano network","Cardano Network Magic number useful for TestNet &amp; DevNet","AggregatorHTTPClient factory","Create a new ProtocolInitializerStore.","Create a new Runner instance.","Create a new production service builder.","Create a new StateMachine instance.","Create a new instance of the MithrilSingleSigner.","File path to the operational certificate of the pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Override default chain observer builder.","Override immutable file observer builder.","Party Id","Forge a client request adding protocol version in the …","ProtocolInitializer store","Registers single signatures with the aggregator.","","Registers signer with the aggregator.","","Register the signer verification key to the aggregator.","","Relay endpoint","If set the existing immutables digests cache will be reset.","Retrieves epoch settings from the aggregator","","Retrieves a pending certificate from the aggregator","","Launch the state machine until an error occurs or it is …","Run Interval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Save a protocol initializer for the given Epoch.","","Send the single signature to the aggregator in order to be …","","","Signable Builder Service","SingleSigner service","","","Stake store service","Store retention limit. If set to None, no limit will be …","","","","","","","","","","Adapter method","Method to trigger the conversion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the current era and update the EraChecker.","","Read the stake distribution and store it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context error message","Context error message","Eventual previous error message","Eventual previous error message","Current Epoch","Epoch when Signer may sign.","Epoch when Signer signed.","Entity type that is signed","Migration module for cardano transactions store","Migration module","Signer related database providers","Get all the migrations required by this version of the …","Get all the migrations required by this version of the …","Cardano Transaction record is the representation of a …","Cardano transaction repository","","","Block number of the transaction","","","","","","","","","","","","","Create a new CardanoTransactionRecord in the database.","Create new CardanoTransactionRecords in the database.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Return the CardanoTransactionRecord for the given …","","Immutable file number of the transaction","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Instantiate service","","","","","","","","","","","Unique hash of the transaction","","","","","","","","","","","","","","","",""],"i":[54,57,0,0,0,54,0,46,0,30,0,0,54,54,31,54,46,0,0,30,30,30,0,0,0,57,54,31,54,54,54,0,0,0,0,57,31,0,0,0,0,0,0,0,31,86,20,69,3,10,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,69,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,11,12,89,20,12,3,10,20,20,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,69,69,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,20,29,30,31,20,29,30,31,29,29,39,41,3,10,3,10,39,41,45,20,0,20,29,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,20,69,20,20,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,30,31,30,30,30,31,31,31,69,69,20,20,29,20,20,29,54,54,20,29,46,46,30,30,31,31,57,57,68,86,87,88,60,10,12,69,45,89,41,54,54,20,29,46,46,46,30,31,57,60,3,10,3,10,63,60,60,20,39,41,3,10,63,60,20,45,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,46,31,31,31,31,20,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,20,20,68,60,10,12,45,41,20,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,12,12,20,68,69,71,68,71,68,3,10,20,20,71,68,71,68,45,20,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,63,60,3,10,20,69,69,54,57,69,20,20,29,30,31,54,46,30,31,57,87,88,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,3,10,3,10,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,68,86,87,88,60,10,12,69,45,89,41,54,20,29,46,30,31,57,90,91,90,91,92,93,94,94,0,0,0,0,0,0,0,78,77,77,78,77,78,77,78,77,78,77,78,77,77,77,78,78,78,77,78,77,78,77,77,77,78,77,77,77,78,77,77,78,77,78,77,78,77,78,77,78,78,77,78,77,78,77,78,77,78,77,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[3,4,[6,[5]]],[[9,[[8,[7]]]]]],[[10,4,[6,[5]]],[[9,[[8,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,[[9,[[8,[7]]]]]],[12,[[9,[[8,[7]]]]]],[[13,14,[16,[15]],[16,[17]]],[[19,[18]]]],[[20,[22,[21]]],[[19,[[22,[23]]]]]],[[12,24,[26,[25]]],[[19,[[22,[27]]]]]],[[3,28],[[9,[[8,[7]]]]]],[[10,28],[[9,[[8,[7]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[20,20],[29,29],[30,30],[31,31],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[29,[[8,[33]]]],[29,[[38,[[36,[34,35]],37]]]],[[39,[6,[40]],18],[[19,[[16,[34]]]]]],[[41,[6,[40]],18],[[19,[[16,[34]]]]]],[[3,42,[6,[40]]],[[9,[[8,[7]]]]]],[[10,42,[6,[40]]],[[9,[[8,[7]]]]]],[[3,4,43,[6,[40]]],[[9,[[8,[7]]]]]],[[10,4,43,[6,[40]]],[[9,[[8,[7]]]]]],[[39,43,[6,[40]],18],[[19,[[16,[44]]]]]],[[41,43,[6,[40]],18],[[19,[[16,[44]]]]]],[45,[[38,[32,46]]]],0,0,0,[[],29],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[-1,[[38,[20]]],48],0,0,[[-1,49],[[38,[32,50]]],[]],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[47,32],[[30,30],51],[[31,31],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],0,0,0,0,0,[[-1,49],[[38,[32,52]]],[]],[[],53],[[],53],[[54,55],56],[[54,55],56],[[20,55],56],[[29,55],56],[[46,55],56],[[46,55],56],[[30,55],56],[[30,55],56],[[31,55],56],[[31,55],56],[[57,55],56],[[57,55],56],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[58,54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,46],[59,46],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[60,[[62,[[8,[61]]]]]],[3,[[9,[[8,[7]]]]]],[10,[[9,[[8,[7]]]]]],[3,[[9,[[8,[7]]]]]],[10,[[9,[[8,[7]]]]]],[[63,47],[[9,[[8,[7]]]]]],[[60,47],[[9,[[8,[7]]]]]],[60,[[16,[47]]]],[20,[[19,[64]]]],[39,65],[41,65],[3,[[9,[[8,[7]]]]]],[10,[[9,[[8,[7]]]]]],[[63,4],[[9,[[8,[7]]]]]],[[60,4],[[9,[[8,[7]]]]]],[[20,24],[[19,[15]]]],[45,31],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,51],[31,51],[31,51],[31,51],[31,51],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[34,[16,[34]],[22,[66]],[16,[67]]],68],[[[8,[61]],[16,[47]]],60],[[20,69],10],[20,12],[[31,[8,[3]],67],45],[65,41],0,[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[12,12],[12,12],0,[[68,70],70],0,[[71,42,44],[[9,[[8,[7]]]]]],[[68,42,44],[[9,[[8,[7]]]]]],[[71,4,5],[[9,[[8,[7]]]]]],[[68,4,5],[[9,[[8,[7]]]]]],[[3,4,14],[[9,[[8,[7]]]]]],[[10,4,14],[[9,[[8,[7]]]]]],0,0,[71,[[9,[[8,[7]]]]]],[68,[[9,[[8,[7]]]]]],[71,[[9,[[8,[7]]]]]],[68,[[9,[[8,[7]]]]]],[45,[[38,[32,46]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[63,4,18],[[9,[[8,[7]]]]]],[[60,4,18],[[9,[[8,[7]]]]]],[[3,42,[16,[44]]],[[9,[[8,[7]]]]]],[[10,42,[16,[44]]],[[9,[[8,[7]]]]]],[[20,-1],38,72],0,0,[54,[[16,[73]]]],[57,[[16,[73]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[74,[[19,[28]]]],[[[32,[4,5]]],[[19,[75]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,76,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,4],[[9,[[8,[7]]]]]],[[10,4],[[9,[[8,[7]]]]]],[[3,4],[[9,[[8,[7]]]]]],[[10,4],[[9,[[8,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[],[[26,[25]]]],[[],[[26,[25]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[77,77],[[-1,-2],32,[],[]],[[78,79,80,81],[[19,[[16,[77]]]]]],[[78,[26,[77]]],[[19,[[26,[77]]]]]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,-1,[]],[47,32],[47,32],[[77,77],51],[[77,55],56],[-1,-1,[]],[-1,-1,[]],[82,77],[[],83],[[78,79],[[19,[[16,[77]]]]]],[84,[[38,[77,85]]]],0,[[],47],[[],47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[27]]],78],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,[[32,[-2,51]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[78,[6,[82]]],[[9,[[8,[7]]]]]],[-1,-2,[],[]],0,[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,76,[]],[-1,76,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"EpochSettingsMessage",748],[5,"EpochSettings",749],[10,"Runner",0],[5,"Epoch",750],[5,"Signer",751],[1,"slice"],[10,"Future",752],[5,"Box",753],[5,"Pin",754],[5,"SignerRunner",0],[10,"ServiceBuilder",0],[5,"ProductionServiceBuilder",0],[8,"Stake",755],[5,"ProtocolParameters",756],[5,"PathBuf",757],[6,"Option",758],[8,"KESPeriod",759],[8,"ProtocolInitializer",760],[8,"StdResult",761],[5,"Configuration",0],[10,"ChainObserver",762],[5,"Arc",763],[10,"EraReaderAdapter",764],[1,"str"],[5,"SqlMigration",765],[5,"Vec",766],[8,"SqliteConnection",767],[5,"CertificatePending",768],[5,"DefaultConfiguration",0],[6,"RunnerError",0],[6,"SignerState",0],[1,"tuple"],[10,"Source",769],[5,"String",770],[5,"Value",771],[8,"Map",772],[6,"ConfigError",773],[6,"Result",774],[10,"SingleSigner",0],[5,"SignerWithStake",751],[5,"MithrilSingleSigner",0],[6,"SignedEntityType",775],[5,"ProtocolMessage",776],[5,"SingleSignatures",777],[5,"StateMachine",0],[6,"RuntimeError",0],[1,"usize"],[10,"Deserializer",778],[10,"Serializer",779],[6,"ErrorImpl",779],[1,"bool"],[5,"Error",780],[5,"StructDoc",781],[6,"AggregatorClientError",0],[5,"Formatter",782],[8,"Result",782],[6,"SingleSignerError",0],[5,"Error",783],[6,"EpochError",750],[5,"ProtocolInitializerStore",0],[10,"StoreAdapter",784],[5,"RwLock",785],[10,"ProtocolInitializerStorer",0],[6,"CardanoNetwork",786],[8,"PartyId",755],[5,"APIVersionProvider",787],[5,"Duration",788],[5,"AggregatorHTTPClient",0],[5,"SignerServices",0],[5,"RequestBuilder",789],[10,"AggregatorClient",0],[10,"Serializer",790],[10,"Error",791],[5,"CertificatePendingMessage",792],[5,"RegisterSignerMessage",793],[5,"TypeId",794],[5,"CardanoTransactionRecord",678],[5,"CardanoTransactionRepository",678],[8,"TransactionHash",795],[8,"BlockNumber",795],[8,"ImmutableFileNumber",755],[5,"CardanoTransaction",795],[5,"Projection",796],[5,"Row",797],[6,"HydrationError",798],[5,"FromEpochSettingsAdapter",0],[5,"FromPendingCertificateMessageAdapter",0],[5,"ToRegisterSignerMessageAdapter",0],[5,"MithrilProtocolInitializerBuilder",0],[15,"KeepState",665],[15,"Critical",665],[15,"Unregistered",669],[15,"Registered",669],[15,"Signed",669]],"b":[[267,"impl-Display-for-AggregatorClientError"],[268,"impl-Debug-for-AggregatorClientError"],[271,"impl-Debug-for-RuntimeError"],[272,"impl-Display-for-RuntimeError"],[273,"impl-Display-for-RunnerError"],[274,"impl-Debug-for-RunnerError"],[275,"impl-Display-for-SignerState"],[276,"impl-Debug-for-SignerState"],[277,"impl-Display-for-SingleSignerError"],[278,"impl-Debug-for-SingleSignerError"],[295,"impl-From%3CRunnerError%3E-for-RuntimeError"],[296,"impl-From%3CEpochError%3E-for-RuntimeError"]]}],\
["mithril_stm",{"doc":"Mithril-stm CI workflow crates.io Discord","t":"PGPPPGPPPPPPPPPPPGPPPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNCNNNNNNNNNNNNNNNNNNNNNNNNNFFINNNNNNNNNNNNNNNNNNNOONNNONNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFIIFFFFFFFFIINONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOONNONNOOONNNNNNNNOONOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["AggregateSignatureInvalid","AggregationError","BatchInvalid","BatchInvalid","CoreVerificationError","CoreVerifierError","EvalInvalid","IndexBoundFailed","IndexNotUnique","IndividualSignatureInvalid","IvkInvalid","KeyInvalid","KeyRegistered","LotteryLost","NoQuorum","NotEnoughSignatures","PathInvalid","RegisterError","SerializationError","SerializationError","SerializationError","SignatureInvalid","StmAggregateSignatureError","StmSignatureError","UnregisteredInitializer","UsizeConversionInvalid","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","key_reg","multi_sig","source","source","stm","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ClosedKeyReg","KeyReg","RegParty","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","close","default","eq","eq","fmt","fmt","from","from","init","into","into","merkle_tree","reg_parties","register","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","type_id","type_id","ProofOfPossession","Signature","SigningKey","VerificationKey","VerificationKeyPoP","aggregate","batch_verify_aggregates","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eval","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","gen","hash","into","into","into","into","into","partial_cmp","partial_cmp","pop","serialize","serialize","serialize","serialize","serialize","sign","sum","sum","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","verify_aggregate","vk","CoreVerifier","Index","Stake","StmAggrSig","StmAggrVerificationKey","StmClerk","StmInitializer","StmParameters","StmSig","StmSigRegParty","StmSigner","StmVerificationKey","StmVerificationKeyPoP","aggregate","batch_proof","batch_verify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_lottery","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp_stm_sig","compute_avk","core_sign","dedup_sigs_for_indices","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eligible_parties","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_registration","from_signer","get_reg_party","get_stake","hash","hash","indexes","into","into","into","into","into","into","into","into","into","k","m","new_core_signer","new_signer","params","partial_cmp","partial_cmp","phi_f","pop","reg_party","serialize","serialize","serialize","serialize","serialize","serialize","setup","setup","sig","sigma","sign","signer_index","stake","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verification_key","verification_key","verify","verify","verify","verify_core","vk"],"q":[[0,"mithril_stm"],[101,"mithril_stm::key_reg"],[135,"mithril_stm::multi_sig"],[242,"mithril_stm::stm"],[420,"core::clone"],[421,"digest::digest"],[422,"digest"],[423,"core::fmt"],[424,"core::fmt"],[425,"core::option"],[426,"alloc::string"],[427,"core::result"],[428,"core::any"],[429,"core::cmp"],[430,"alloc::vec"],[431,"core::cmp"],[432,"rand_core"],[433,"rand_core"],[434,"serde::ser"],[435,"core::iter::traits::iterator"],[436,"core::marker"],[437,"core::marker"]],"d":["The aggregated signature is invalid","Error types for aggregation.","Batch verification of STM signatures failed","Batch verification of STM aggregate signatures failed","<code>CoreVerifier</code> check failed","Errors which can be output by <code>CoreVerifier</code>.","MSP.Eval was computed incorrectly","There is an index out of bounds","There is a duplicate index","One of the aggregated signatures is invalid","The IVK is invalid after aggregating the keys","The supplied key is not valid","This key has already been registered by a participant","The lottery was actually lost for the signature","No quorum was found","Not enough signatures were collected, got this many …","Invalid merkle batch path","Errors which can be outputted by key registration.","This error occurs when the the serialization of the raw …","This error occurs when the the serialization of the raw …","Serialization error","A party submitted an invalid signature","Errors which can be output by Mithril aggregate …","Errors which can be output by Mithril single signature …","UnregisteredInitializer error","This error happens when we try to convert a u64 to a usize …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Key registration functionality.","Base multi-signature scheme, used as a primitive for STM. …","","","Top-level API for Mithril Stake-based Threshold …","","","","","","","","","","","","","","","","","","","","","","","","","","Structure generated out of a closed registration …","Struct that collects public keys and stakes of parties. …","Stores a registered party with its public key and the …","","","","","","","","","Finalize the key registration. This function disables …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initialise an empty <code>KeyReg</code>. todo: remove this init function","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unique public key out of the key registration instance.","Ordered list of registered parties.","Verify and register a public key and stake for a …","","","Total stake of the registered parties.","","","","","","","MultiSig proof of possession, which contains two elements …","MultiSig signature, which is a wrapper over the <code>BlstSig</code> …","MultiSig secret key, which is a wrapper over the BlstSk …","MultiSig verification key, which is a wrapper over the …","MultiSig public key, contains the verification key and the …","Aggregate a slice of verification keys and Signatures by …","Batch verify several sets of signatures with their …","","","","","","","","","","","if <code>e(k1,g2) = e(H_G1(&quot;PoP&quot; || mvk),mvk)</code> and …","","","","","","","","","","","","","","","","","","","","","","","Dense mapping function indexed by the index to be …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert a secret key into an <code>MspMvk</code>. This is performed by …","Convert a secret key into an <code>MspPoP</code>. This is performed by …","Returns the argument unchanged.","Convert a secret key into a <code>VerificationKeyPoP</code> by simply …","Returns the argument unchanged.","Returns the argument unchanged.","Convert a string of bytes into a <code>SigningKey</code>.","Convert a compressed byte string into a <code>VerificationKey</code>.","Deserialize a byte string to a <code>PublicKeyPoP</code>.","Deserialize a byte string to a <code>PublicKeyPoP</code>.","Convert a string of bytes into a <code>MspSig</code>.","Generate a secret key","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Proof of Possession.","","","","","","Sign a message with the given secret key","","","Convert the secret key into byte string.","Convert an <code>VerificationKey</code> to its compressed byte …","Convert to a 96 byte string.","Convert to a 144 byte string.","Convert an <code>Signature</code> to its compressed byte representation.","","","","","","","","","","","","","","","","","","","","","","Verify a signature against a verification key.","Verify a set of signatures with their corresponding …","The verification key.","Full node verifier including the list of eligible signers …","Quorum index for signatures. An aggregate signature (…","The quantity of stake held by a party, represented as a <code>u64</code>…","<code>StmMultiSig</code> uses the “concatenation” proving system …","Stm aggregate key (batch compatible), which contains the …","<code>StmClerk</code> can verify and aggregate <code>StmSig</code>s and verify …","Initializer for <code>StmSigner</code>. This is the data that is used …","Used to set protocol parameters.","Signature created by a single party who has won the …","Signature with its registered party.","Participant in the protocol can sign messages.","Wrapper of the MultiSignature Verification key","Wrapper of the MultiSignature Verification key with proof …","Aggregate a set of signatures for their corresponding …","The list of unique merkle tree nodes that covers path for …","Batch verify a set of signatures, with different messages …","","","","","","","","","","","","","","","","","","","Collects and returns the winning indices.","","","","","","","","","","","","","","","","","","","Compare two <code>StmSig</code> by their signers’ merkle tree indexes.","Compute the <code>StmAggrVerificationKey</code> related to the used …","A core signature generated without closed registration. …","Given a slice of <code>sig_reg_list</code>, this function returns a new …","","","","","","","List of registered parties.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Extract the <code>StmParameters</code> from a byte slice.","Convert a slice of bytes to an <code>StmInitializer</code>","Extract a batch compatible <code>StmSig</code> from a byte slice.","Extract a <code>StmSigRegParty</code> from a byte slice.","Extract a <code>StmAggrSig</code> from a byte slice.","Create a new <code>Clerk</code> from a closed registration instance.","Create a Clerk from a signer.","Get the (VK, stake) of a party given its index.","Extract stake from the signer.","","","The index(es) for which the signature is valid","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Quorum parameter.","Security parameter, upper bound on indices.","Creates a new core signer that does not include closed …","Build the <code>avk</code> for the given list of parties.","Current protocol instantiation parameters.","","","<code>f</code> in phi(w) = 1 - (1 - f)^w, where w is the stake of a …","Proof of Possession.","Registered party","","","","","","","Setup a core verifier for given list of signers. * Collect …","Builds an <code>StmInitializer</code> that is ready to register with …","Stm signature","The signature from the underlying MSP scheme.","This function produces a signature following the …","Merkle tree index of the signer.","This participant’s stake.","Convert to bytes","Convert to bytes","Convert an <code>StmSig</code> into bytes","Convert StmSigRegParty to bytes","Convert multi signature to bytes","","","","","","","","","Total stake of registered parties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the verification key.","Extract the verification key.","Core verification","Verify an stm signature by checking that the lottery was …","Verify aggregate signature, by checking that","Verify a core signature by checking that the lottery was …","The verification key."],"i":[6,0,1,2,2,0,1,1,6,6,2,8,8,1,6,7,2,0,1,2,8,1,0,0,8,7,1,2,6,7,8,1,2,6,7,8,1,2,6,7,8,1,2,6,7,8,8,1,1,2,2,6,6,7,7,8,8,1,2,2,2,6,6,6,7,8,1,2,6,7,8,0,0,2,6,0,1,2,6,7,8,1,2,6,7,8,1,2,6,7,8,1,2,6,7,8,1,2,6,7,8,0,0,0,19,20,19,20,19,20,19,20,19,19,19,20,19,20,19,20,19,19,20,20,20,19,19,20,20,19,20,19,20,19,20,0,0,0,0,0,26,26,29,24,30,23,26,29,24,30,23,26,23,29,24,30,23,26,29,24,30,23,26,24,26,24,29,24,30,23,26,24,30,23,26,26,29,24,24,30,23,26,29,24,24,30,30,23,23,26,29,24,30,23,26,29,24,29,24,30,23,26,24,26,23,29,24,30,23,26,29,24,26,29,24,30,23,26,29,24,30,23,26,24,29,24,30,23,26,29,24,30,23,26,29,24,30,23,26,26,26,23,0,0,0,0,0,0,0,0,0,0,0,0,0,41,43,43,54,45,50,48,41,42,44,51,43,54,45,50,48,41,42,44,51,43,48,45,50,48,41,42,44,51,43,45,50,48,41,42,44,51,43,42,51,42,41,48,54,45,50,42,44,51,43,54,45,42,44,51,45,50,48,41,42,44,51,43,54,45,50,48,41,42,44,44,51,43,45,50,42,51,43,41,41,41,48,42,51,42,54,45,50,48,41,42,44,51,43,45,45,50,50,50,42,51,45,55,51,45,50,42,44,51,43,54,50,51,42,48,42,50,45,50,42,51,43,45,50,48,41,42,44,51,43,54,54,45,50,48,41,42,44,51,43,54,45,50,48,41,42,44,51,43,54,45,50,48,41,42,44,51,43,50,48,54,42,43,42,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[[2,[-1]]],[[2,[-1]]],[3,4,5]],[6,6],[7,7],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[8,8],10],[[1,11],12],[[1,11],12],[[[2,[-1]],11],12,[13,4,5]],[[[2,[-1]],11],12,[4,5]],[[6,11],12],[[6,11],12],[[7,11],12],[[7,11],12],[[8,11],12],[[8,11],12],[-1,-1,[]],[6,[[2,[-1]]],[4,5]],[1,[[2,[-1]]],[4,5]],[-1,-1,[]],[7,6],[1,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[2,[-1]]],[[15,[14]]],[4,5]],[6,[[15,[14]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[[20,[-1]]],[[20,[-1]]],[3,4]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[19,[[20,[-1]]],[4,5]],[[],19],[[19,19],10],[[[20,[-1]],[20,[-1]]],10,[21,4]],[[19,11],12],[[[20,[-1]],11],12,[13,4]],[-1,-1,[]],[-1,-1,[]],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[19,22,23],[[17,[9,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,[[[25,[24]],[25,[26]]],[[17,[[9,[24,26]],0]]]],[[[25,[[28,[27]]]],[25,[24]],[25,[26]]],[[17,[9,0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[17,[9,0]]]],[29,29],[24,24],[30,30],[23,23],[26,26],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[24,24],31],[[26,26],31],[[],24],[-1,[[17,[29]]],32],[-1,[[17,[24]]],32],[-1,[[17,[30]]],32],[-1,[[17,[23]]],32],[-1,[[17,[26]]],32],[[24,24],10],[[30,30],10],[[23,23],10],[[26,26],10],[[26,[25,[27]],33],[[34,[27]]]],[[29,11],12],[[24,11],12],[[24,11],12],[[30,11],12],[[23,11],12],[[26,11],12],[-1,-1,[]],[-1,-1,[]],[29,24],[29,30],[-1,-1,[]],[29,23],[-1,-1,[]],[-1,-1,[]],[[[25,[27]]],[[17,[29,0]]]],[[[25,[27]]],[[17,[24,0]]]],[[[25,[27]]],[[17,[30,0]]]],[[[25,[27]]],[[17,[23,0]]]],[[[25,[27]]],[[17,[26,0]]]],[-1,29,[35,36]],[[24,-1],9,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,24],[[15,[31]]]],[[26,26],[[15,[31]]]],0,[[29,-1],17,38],[[24,-1],17,38],[[30,-1],17,38],[[23,-1],17,38],[[26,-1],17,38],[[29,[25,[27]]],26],[-1,24,[[40,[],[[39,[24]]]]]],[-1,26,[[40,[],[[39,[26]]]]]],[29,[[34,[27]]]],[24,[[34,[27]]]],[30,[[34,[27]]]],[23,[[34,[27]]]],[26,[[34,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[26,[25,[27]],24],[[17,[9,0]]]],[[[25,[27]],[25,[24]],[25,[26]]],[[17,[9,0]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[41,[-1]],[25,[42]],[25,[27]]],[[17,[[43,[-1]],7]]],[4,3,5]],0,[[[25,[[43,[-1]]]],[25,[[28,[27]]]],[25,[[44,[-1]]]],[25,[45]]],[[17,[9,[2,[-1]]]]],[3,4,5,46,47]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]],[25,[27]],26,22],[[28,[49]]],[3,4,5]],[45,45],[50,50],[[[48,[-1]]],[[48,[-1]]],[3,4]],[[[41,[-1]]],[[41,[-1]]],[3,3,4]],[42,42],[[[44,[-1]]],[[44,[-1]]],[3,3,4,5]],[51,51],[[[43,[-1]]],[[43,[-1]]],[3,3,4,5]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[42,42],31],[[51,51],31],[[42,42],31],[[[41,[-1]]],[[44,[-1]]],[4,3,5]],[[[48,[-1]],[25,[27]],22],[[15,[42]]],[3,4,5]],[[22,45,[25,[27]],[25,[51]]],[[17,[[28,[51]],7]]]],[-1,[[17,[45]]],32],[-1,[[17,[50]]],32],[-1,[[17,[42]]],32],[-1,[[17,[[44,[-2]]]]],32,[3,4,5]],[-1,[[17,[51]]],32],[-1,[[17,[[43,[-2]]]]],32,[3,4,5]],0,[[45,45],10],[[42,42],10],[[[44,[-1]],[44,[-1]]],10,[4,3,5]],[[51,51],10],[[45,11],12],[[50,11],12],[[[48,[-1]],11],12,[13,4]],[[[41,[-1]],11],12,[13,3,4]],[[42,11],12],[[[44,[-1]],11],12,[13,3,4,5]],[[51,11],12],[[[43,[-1]],11],12,[13,3,4,5]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[20,[-1]]],[[44,[-1]]],[3,4,5]],[-1,-1,[]],[-1,-1,[]],[[[25,[27]]],[[17,[45,8]]]],[[[25,[27]]],[[17,[50,8]]]],[[[25,[27]]],[[17,[42,1]]]],[[[25,[27]]],[[17,[51,1]]]],[[[25,[27]]],[[17,[[43,[-1]],[2,[-1]]]]],[3,4,5,46,47]],[[45,[20,[-1]]],[[41,[-1]]],[4,3,5]],[[[48,[-1]]],[[41,[-1]]],[4,3,5]],[[[41,[-1]],33],[[15,[[9,[52,22]]]]],[4,3,5]],[[[48,[-1]]],22,[3,4,5]],[[42,-1],9,37],[[51,-1],9,37],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[50,[25,[53]]],[[15,[[48,[-1]]]]],[4,3]],[[50,[20,[-1]]],[[17,[[48,[-1]],8]]],[4,3]],0,[[42,42],[[15,[31]]]],[[51,51],[[15,[31]]]],0,0,0,[[45,-1],17,38],[[50,-1],17,38],[[42,-1],17,38],[[[44,[-1]],-2],17,[3,4,5],38],[[51,-1],17,38],[[[43,[-1]],-2],17,[3,4,5],38],[[[25,[[9,[24,22]]]]],54],[[45,22,-1],50,[35,36]],0,0,[[[48,[-1]],[25,[27]]],[[15,[42]]],[3,4,5]],0,0,[45,[[34,[27]]]],[50,[[34,[27]]]],[42,[[28,[27]]]],[51,[[28,[27]]]],[[[43,[-1]]],[[28,[27]]],[3,4,5,46,47]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[50,55],[[[48,[-1]]],52,[3,4,5]],[[54,[25,[42]],45,[25,[27]]],[[17,[9,6]]]],[[42,45,52,22,[44,[-1]],[25,[27]]],[[17,[9,1]]],[3,4,5]],[[[43,[-1]],[25,[27]],[44,[-1]],45],[[17,[9,[2,[-1]]]]],[3,4,5,46,47]],[[42,45,52,22,[25,[27]],22],[[17,[9,1]]]],0],"c":[],"p":[[6,"StmSignatureError",0],[6,"StmAggregateSignatureError",0],[10,"Clone",420],[10,"Digest",421],[10,"FixedOutput",422],[6,"CoreVerifierError",0],[6,"AggregationError",0],[6,"RegisterError",0],[1,"tuple"],[1,"bool"],[5,"Formatter",423],[8,"Result",423],[10,"Debug",423],[10,"Error",424],[6,"Option",425],[5,"String",426],[6,"Result",427],[5,"TypeId",428],[5,"KeyReg",101],[5,"ClosedKeyReg",101],[10,"PartialEq",429],[8,"Stake",242],[5,"VerificationKeyPoP",135],[5,"VerificationKey",135],[1,"slice"],[5,"Signature",135],[1,"u8"],[5,"Vec",430],[5,"SigningKey",135],[5,"ProofOfPossession",135],[6,"Ordering",429],[10,"Deserializer",431],[8,"Index",242],[1,"array"],[10,"RngCore",432],[10,"CryptoRng",432],[10,"Hasher",433],[10,"Serializer",434],[17,"Item"],[10,"Iterator",435],[5,"StmClerk",242],[5,"StmSig",242],[5,"StmAggrSig",242],[5,"StmAggrVerificationKey",242],[5,"StmParameters",242],[10,"Send",436],[10,"Sync",436],[5,"StmSigner",242],[1,"u64"],[5,"StmInitializer",242],[5,"StmSigRegParty",242],[8,"StmVerificationKey",242],[8,"RegParty",101],[5,"CoreVerifier",242],[8,"StmVerificationKeyPoP",242]],"b":[[47,"impl-Display-for-StmSignatureError"],[48,"impl-Debug-for-StmSignatureError"],[49,"impl-Debug-for-StmAggregateSignatureError%3CD%3E"],[50,"impl-Display-for-StmAggregateSignatureError%3CD%3E"],[51,"impl-Debug-for-CoreVerifierError"],[52,"impl-Display-for-CoreVerifierError"],[53,"impl-Display-for-AggregationError"],[54,"impl-Debug-for-AggregationError"],[55,"impl-Debug-for-RegisterError"],[56,"impl-Display-for-RegisterError"],[58,"impl-From%3CCoreVerifierError%3E-for-StmAggregateSignatureError%3CD%3E"],[59,"impl-From%3CStmSignatureError%3E-for-StmAggregateSignatureError%3CD%3E"],[61,"impl-From%3CAggregationError%3E-for-CoreVerifierError"],[62,"impl-From%3CStmSignatureError%3E-for-CoreVerifierError"],[177,"impl-Debug-for-VerificationKey"],[178,"impl-Display-for-VerificationKey"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
