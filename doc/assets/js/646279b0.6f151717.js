"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[4687],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return d}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),p=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},m=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),u=p(a),d=n,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return a?r.createElement(g,o(o({ref:e},m),{},{components:a})):r.createElement(g,o({ref:e},m))}));function d(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5084:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={sidebar_position:3,sidebar_label:"Simulation"},s="Mithril Protocol Simulation",p={unversionedId:"mithril/mithril-protocol/simulation",id:"mithril/mithril-protocol/simulation",title:"Mithril Protocol Simulation",description:"Thanks to this demo you will get a better understanding of the Mithril Protocol*. You will hopefully visualize how the participants interact to create a multi signature and what's the impact of the protocol parameters.",source:"@site/root/mithril/mithril-protocol/simulation.md",sourceDirName:"mithril/mithril-protocol",slug:"/mithril/mithril-protocol/simulation",permalink:"/doc/mithril/mithril-protocol/simulation",editUrl:"https://github.com/input-output-hk/mithril/tree/main/docs/root/root/mithril/mithril-protocol/simulation.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Simulation"},sidebar:"mithrilSideBar",previous:{title:"Certificate Chain",permalink:"/doc/mithril/mithril-protocol/certificates"},next:{title:"Mithril Network",permalink:"/doc/category/mithril-network-1"}},m={},c=[{value:"What you&#39;ll need",id:"what-youll-need",level:2},{value:"Download source",id:"download-source",level:2},{value:"Build Mithril Protocol demo binary",id:"build-mithril-protocol-demo-binary",level:2},{value:"Verify build",id:"verify-build",level:2},{value:"Run the simulation",id:"run-the-simulation",level:2},{value:"Case 1: Produce a multi signature",id:"case-1-produce-a-multi-signature",level:3},{value:"Case 2: Does not produce a multi signature",id:"case-2-does-not-produce-a-multi-signature",level:3}],u={toc:c};function d(t){var e=t.components,a=(0,n.Z)(t,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mithril-protocol-simulation"},"Mithril Protocol Simulation"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Thanks to this demo you will get a better understanding of the ",(0,i.kt)("strong",{parentName:"p"},"Mithril Protocol"),". You will hopefully visualize how the participants interact to create a multi signature and what's the impact of the protocol parameters.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This simulation is ran by a CLI that you will build and run, and that will ultimately generate ",(0,i.kt)("strong",{parentName:"p"},"real")," Mithril multi signatures!")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For the purpose of reproducibility of the results, the simulation uses a deterministic source of randomness.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"During the simulation some artifacts will be written to an ",(0,i.kt)("inlineCode",{parentName:"p"},"artifacts")," folder, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"verification keys"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"individual signatures")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"multi signatures"),"."))))),(0,i.kt)("h2",{id:"what-youll-need"},"What you'll need"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A Linux (preferred) or a macOS computer.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A ",(0,i.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/learn/get-started"},"correctly configured")," Rust toolchain (version 1.62.0+)."))),(0,i.kt)("h2",{id:"download-source"},"Download source"),(0,i.kt)("p",null,"Download from Github (HTTPS)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/mithril.git\n")),(0,i.kt)("p",null,"Or (SSH)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:input-output-hk/mithril.git\n")),(0,i.kt)("h2",{id:"build-mithril-protocol-demo-binary"},"Build Mithril Protocol demo binary"),(0,i.kt)("p",null,"Change directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd mithril/demo/protocol-demo\n")),(0,i.kt)("p",null,"Run tests (Optional)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,i.kt)("p",null,"Build executable"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"make build\n")),(0,i.kt)("h2",{id:"verify-build"},"Verify build"),(0,i.kt)("p",null,"Check that the Mithril Client binary is working fine by running its help"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./mithrildemo -h\n")),(0,i.kt)("p",null,"You should see"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mithrildemo \nSimple demonstration of the Mithril protocol\n\nUSAGE:\n    mithrildemo [OPTIONS]\n\nOPTIONS:\n    -h, --help                     Print help information\n    -k, --k <K>                    Quorum parameter [default: 5]\n    -m, --m <M>                    Security parameter, upper bound on indices [default: 200]\n        --nmessages <NMESSAGES>    Number of messages to sign [default: 1]\n        --nparties <NPARTIES>      Number of parties [default: 5]\n        --phi-f <PHI_F>            f in phi(w) = 1 - (1 - f)^w, where w is the stake of a\n                                   participant [default: 0.2]\n")),(0,i.kt)("h2",{id:"run-the-simulation"},"Run the simulation"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"A friendly reminder about the protocol parameters:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"k"),": the ",(0,i.kt)("inlineCode",{parentName:"li"},"Quorum")," parameter represents the minimum number of individual signatures (gathered from multiple participants) required to be aggregated in a multi signature."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m"),": the ",(0,i.kt)("inlineCode",{parentName:"li"},"Security")," parameter represents the total number of ",(0,i.kt)("inlineCode",{parentName:"li"},"lotteries")," in which each participant can participate in order to individually sign the message."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"phi-f"),": the parameter on which depends the probability of a particpant to win a ",(0,i.kt)("inlineCode",{parentName:"li"},"lottery"),". It variates between ",(0,i.kt)("inlineCode",{parentName:"li"},"0.0")," (less chance) and ",(0,i.kt)("inlineCode",{parentName:"li"},"1.0")," (more chance).")))),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"security level")," of the protocol is highly dependent on the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"protocol parameters"),"."),(0,i.kt)("p",{parentName:"div"},"Therefore they will be carefully selected by the Mithril cryptographers and researchers in order to guarantee that only legit stakeholders representing a sufficient threshold of the total stakes can combine their individual signatures in a valid multi signature."))),(0,i.kt)("h3",{id:"case-1-produce-a-multi-signature"},"Case 1: Produce a multi signature"),(0,i.kt)("p",null,"Run the simulation wih ",(0,i.kt)("inlineCode",{parentName:"p"},"5")," participants"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./mithrildemo -k 5 -m 50 --phi-f 0.65 --nparties 5\n")),(0,i.kt)("p",null,"The simulation should succeed and produce (or aggregate) a multi signature!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'>> Launch Mithril protocol demonstrator with configuration: \nConfig {\n    m: 50,\n    k: 5,\n    phi_f: 0.65,\n    nparties: 5,\n    nmessages: 1,\n}\n\n>> Protocol establish phase\nParty #0: party created with 826 stakes\nParty #1: party created with 741 stakes\nParty #2: party created with 144 stakes\nParty #3: party created with 734 stakes\nParty #4: party created with 41 stakes\nProtocol established to StmParameters { m: 50, k: 5, phi_f: 0.65 }\n\n>> Protocol initialize phase:\nVerifier: verifier created\nVerifier: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nParty #0: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nParty #1: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nParty #2: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nParty #3: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nParty #4: protocol params updated to StmParameters { m: 50, k: 5, phi_f: 0.65 }\nVerifier: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #0: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #1: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #2: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #3: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #4: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nArtifacts written to artifacts/parties-keys.json\n\n>> Protocol issue certificates phase:\nMessage #0 to sign: [119, 36, 224, 63, 184, 216, 74, 55, 106, 67, 184, 244, 21, 24, 161, 28]\nParty #0: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #0: lottery #2 won\nParty #0: lottery #3 won\nParty #0: lottery #8 won\nParty #0: lottery #13 won\nParty #0: lottery #16 won\nParty #0: lottery #17 won\nParty #0: lottery #19 won\nParty #0: lottery #23 won\nParty #0: lottery #25 won\nParty #0: lottery #28 won\nParty #0: lottery #29 won\nParty #0: lottery #31 won\nParty #0: lottery #42 won\nParty #0: lottery #43 won\nParty #0: lottery #46 won\nParty #1: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #1: lottery #2 won\nParty #1: lottery #3 won\nParty #1: lottery #8 won\nParty #1: lottery #13 won\nParty #1: lottery #16 won\nParty #1: lottery #17 won\nParty #1: lottery #19 won\nParty #1: lottery #23 won\nParty #1: lottery #25 won\nParty #1: lottery #29 won\nParty #1: lottery #31 won\nParty #1: lottery #42 won\nParty #1: lottery #43 won\nParty #1: lottery #46 won\nParty #2: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #2: lottery #19 won\nParty #2: lottery #43 won\nParty #2: lottery #46 won\nParty #3: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #3: lottery #2 won\nParty #3: lottery #3 won\nParty #3: lottery #8 won\nParty #3: lottery #13 won\nParty #3: lottery #16 won\nParty #3: lottery #17 won\nParty #3: lottery #19 won\nParty #3: lottery #23 won\nParty #3: lottery #25 won\nParty #3: lottery #29 won\nParty #3: lottery #31 won\nParty #3: lottery #42 won\nParty #3: lottery #43 won\nParty #3: lottery #46 won\nParty #4: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #4: lottery #19 won\nParty #0: aggregate signature computed\nParty #1: aggregate signature computed\nParty #2: aggregate signature computed\nParty #3: aggregate signature computed\nParty #4: aggregate signature computed\nArtifacts written to artifacts/single-signatures.json\nArtifacts written to artifacts/multi-signatures.json\n\n>> Protocol verify certificates phase:\nMessage #0 to verify: 7724e03fb8d84a376a43b8f41518a11c\nParty #0: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nVerifier: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nParty #1: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nVerifier: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nParty #2: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nVerifier: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nParty #3: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nVerifier: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nParty #4: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\nVerifier: aggregate signature successfully verified for 7724e03fb8d84a376a43b8f41518a11c!\n\n>> Congrats, protocol terminated with success!\n')),(0,i.kt)("h3",{id:"case-2-does-not-produce-a-multi-signature"},"Case 2: Does not produce a multi signature"),(0,i.kt)("p",null,"Run the simulation wih ",(0,i.kt)("inlineCode",{parentName:"p"},"5")," participants"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./mithrildemo -k 5 -m 5 --phi-f 0.25 --nparties 5\n")),(0,i.kt)("p",null,"The simulation should fail and not produce (or aggregate) any multi signature!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'>> Launch Mithril protocol demonstrator with configuration: \nConfig {\n    m: 5,\n    k: 5,\n    phi_f: 0.25,\n    nparties: 5,\n    nmessages: 1,\n}\n\n>> Protocol establish phase\nParty #0: party created with 826 stakes\nParty #1: party created with 741 stakes\nParty #2: party created with 144 stakes\nParty #3: party created with 734 stakes\nParty #4: party created with 41 stakes\nProtocol established to StmParameters { m: 5, k: 5, phi_f: 0.25 }\n\n>> Protocol initialize phase:\nVerifier: verifier created\nVerifier: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nParty #0: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nParty #1: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nParty #2: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nParty #3: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nParty #4: protocol params updated to StmParameters { m: 5, k: 5, phi_f: 0.25 }\nVerifier: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #0: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #1: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #2: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #3: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nParty #4: protocol keys registration from [("0", 826), ("1", 741), ("2", 144), ("3", 734), ("4", 41)]\nArtifacts written to artifacts/parties-keys.json\n\n>> Protocol issue certificates phase:\nMessage #0 to sign: [119, 36, 224, 63, 184, 216, 74, 55, 106, 67, 184, 244, 21, 24, 161, 28]\nParty #0: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #1: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #2: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #3: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #4: sign message 7724e03fb8d84a376a43b8f41518a11c\nParty #0: not enough signatures to compute aggregate\nParty #1: not enough signatures to compute aggregate\nParty #2: not enough signatures to compute aggregate\nParty #3: not enough signatures to compute aggregate\nParty #4: not enough signatures to compute aggregate\nArtifacts written to artifacts/single-signatures.json\nArtifacts written to artifacts/multi-signatures.json\n\n>> Protocol verify certificates phase:\nMessage #0 to verify: 7724e03fb8d84a376a43b8f41518a11c\nParty #0: aggregate signature not found 7724e03fb8d84a376a43b8f41518a11c\n\n>> Certificate verification failed: aggregate signature not found\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For more information about the ",(0,i.kt)("strong",{parentName:"p"},"Mithril Protocol"),", please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/doc/mithril/mithril-protocol/protocol"},"About Mithril")," section."))))}d.isMDXComponent=!0}}]);