"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[9038,5569,5458],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(a),k=n,h=u["".concat(p,".").concat(k)]||u[k]||m[k]||i;return a?r.createElement(h,l(l({ref:t},s),{},{components:a})):r.createElement(h,l({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(67294),n=a(86010);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(i.tabItem,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>v});var r=a(87462),n=a(67294),i=a(86010),l=a(12466),o=a(16550),p=a(91980),d=a(67392),s=a(50012);function u(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function m(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function k(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p._X)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function c(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,i=m(e),[l,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!k({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[p,d]=h({queryString:a,groupId:r}),[u,c]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,s.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),g=(()=>{const e=p??u;return k({value:e,tabValues:i})?e:null})();(0,n.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!k({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),c(e)}),[d,c,i]),tabValues:i}}var g=a(72389);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:o,selectValue:p,tabValues:d}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),m=e=>{const t=e.currentTarget,a=s.indexOf(t),r=d[a].value;r!==o&&(u(t),p(r))},k=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>s.push(e),onKeyDown:k,onClick:m},l,{className:(0,i.Z)("tabs__item",N.tabItem,l?.className,{"tabs__item--active":o===t})}),a??t)})))}function f(e){let{lazy:t,children:a,selectedValue:r}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=c(e);return n.createElement("div",{className:(0,i.Z)("tabs-container",N.tabList)},n.createElement(b,(0,r.Z)({},e,t)),n.createElement(f,(0,r.Z)({},e,t)))}function v(e){const t=(0,g.Z)();return n.createElement(y,(0,r.Z)({key:String(t)},e))}},57977:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const i={unlisted:!0,hide_title:!0,hide_table_of_contents:!0},l=void 0,o={unversionedId:"compiled-binaries",id:"version-maintained/compiled-binaries",title:"compiled-binaries",description:"Download compiled binary",source:"@site/versioned_docs/version-maintained/compiled-binaries.md",sourceDirName:".",slug:"/compiled-binaries",permalink:"/doc/compiled-binaries",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/compiled-binaries.md",tags:[],version:"maintained",frontMatter:{unlisted:!0,hide_title:!0,hide_table_of_contents:!0}},p={},d=[{value:"Download compiled binary",id:"download-compiled-binary",level:2}],s={toc:d},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"download-compiled-binary"},"Download compiled binary"),(0,n.kt)("p",null,"Each Release / Pre-Release distribution comes with pre compiled binaries ready to use or wrapped in a debian package."),(0,n.kt)("p",null,"You can download them from the Release / Pre-Release distribution page that depends on the Mithril Network you are targeting."),(0,n.kt)("p",null,"These links are available in the ",(0,n.kt)("strong",{parentName:"p"},"Build From")," column of the above ",(0,n.kt)("strong",{parentName:"p"},"Mithril Networks")," table."))}m.isMDXComponent=!0},17899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var r=a(87462),n=(a(67294),a(3905)),i=a(5892),l=a(57977);const o={sidebar_position:2},p="Run a Mithril Signer node (SPO)",d={unversionedId:"manual/getting-started/run-signer-node",id:"version-maintained/manual/getting-started/run-signer-node",title:"Run a Mithril Signer node (SPO)",description:"In this guide, you will learn how to setup a Mithril Signer on top of a Cardano SPO Node for the testnet.",source:"@site/versioned_docs/version-maintained/manual/getting-started/run-signer-node.md",sourceDirName:"manual/getting-started",slug:"/manual/getting-started/run-signer-node",permalink:"/doc/manual/getting-started/run-signer-node",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/manual/getting-started/run-signer-node.md",tags:[],version:"maintained",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSideBar",previous:{title:"Bootstrap a Cardano Node",permalink:"/doc/manual/getting-started/bootstrap-cardano-node"},next:{title:"Run a Private Mithril network",permalink:"/doc/manual/getting-started/run-mithril-devnet"}},s={},u=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:2},{value:"Mithril Keys Certification",id:"mithril-keys-certification",level:2},{value:"Certify your Pool Id",id:"certify-your-pool-id",level:3},{value:"Building your own executable",id:"building-your-own-executable",level:2},{value:"Download source",id:"download-source",level:3},{value:"Build Mithril Signer binary",id:"build-mithril-signer-binary",level:3},{value:"Verify binary",id:"verify-binary",level:2},{value:"Verify version",id:"verify-version",level:3},{value:"Verify build",id:"verify-build",level:3},{value:"Install the service",id:"install-the-service",level:2},{value:"Move executable",id:"move-executable",level:3},{value:"Setup the service",id:"setup-the-service",level:3}],m={toc:u},k="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(k,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"run-a-mithril-signer-node-spo"},"Run a Mithril Signer node (SPO)"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"In this guide, you will learn how to setup a ",(0,n.kt)("strong",{parentName:"p"},"Mithril Signer")," on top of a ",(0,n.kt)("strong",{parentName:"p"},"Cardano SPO Node")," for the ",(0,n.kt)("inlineCode",{parentName:"p"},"testnet"),".")),(0,n.kt)("admonition",{title:"Mithril Networks",type:"note"},(0,n.kt)(i.default,{mdxType:"NetworksMatrix"})),(0,n.kt)("admonition",{type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"This guide is working only on a Linux machine.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For more information about the ",(0,n.kt)("strong",{parentName:"p"},"Mithril Protocol"),", please refer to the ",(0,n.kt)("a",{parentName:"p",href:"/doc/mithril/intro"},"About Mithril")," section.")),(0,n.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,n.kt)("h2",{id:"what-youll-need"},"What you'll need"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Operating a ",(0,n.kt)("strong",{parentName:"p"},"Cardano Node")," as a ",(0,n.kt)("strong",{parentName:"p"},"Stake Pool"),":"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The Cardano ",(0,n.kt)("inlineCode",{parentName:"li"},"Operational Certificate")," file of the pool"),(0,n.kt)("li",{parentName:"ul"},"The Cardano ",(0,n.kt)("inlineCode",{parentName:"li"},"KES Secret Key")," file of the pool"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Access to the file system of a ",(0,n.kt)("inlineCode",{parentName:"p"},"relay")," ",(0,n.kt)("strong",{parentName:"p"},"Cardano Node")," running on the ",(0,n.kt)("inlineCode",{parentName:"p"},"testnet"),":"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Read rights on the ",(0,n.kt)("inlineCode",{parentName:"li"},"Database")," folder (",(0,n.kt)("inlineCode",{parentName:"li"},"--database-path")," setting of the ",(0,n.kt)("strong",{parentName:"li"},"Cardano Node"),")"),(0,n.kt)("li",{parentName:"ul"},"Read/Write rights on the ",(0,n.kt)("inlineCode",{parentName:"li"},"Inter Process Communication")," file (usually ",(0,n.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH")," env var used to launch the ",(0,n.kt)("strong",{parentName:"li"},"Cardano Node"),")"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install a recent version of the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-node/releases/tag/1.35.5"},(0,n.kt)("inlineCode",{parentName:"a"},"cardano-cli"))," (version 1.35.5+)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install a ",(0,n.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/learn/get-started"},"correctly configured")," Rust toolchain (latest stable version).")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install OpenSSL development libraries, for example on Ubuntu/Debian/Mint run ",(0,n.kt)("inlineCode",{parentName:"p"},"apt install libssl-dev"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Ensure the SQLite3 version is at least ",(0,n.kt)("inlineCode",{parentName:"p"},"3.35")," (released Apr. 2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install a recent version of ",(0,n.kt)("inlineCode",{parentName:"p"},"jq")," (version ",(0,n.kt)("inlineCode",{parentName:"p"},"1.6+"),") ",(0,n.kt)("inlineCode",{parentName:"p"},"apt install jq")))),(0,n.kt)("h2",{id:"mithril-keys-certification"},"Mithril Keys Certification"),(0,n.kt)("h3",{id:"certify-your-pool-id"},"Certify your Pool Id"),(0,n.kt)("p",null,"You must declare your Cardano ",(0,n.kt)("inlineCode",{parentName:"p"},"Operational Certificate")," file and ",(0,n.kt)("inlineCode",{parentName:"p"},"KES Secret Key")," file which allows to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Compute automatically the ",(0,n.kt)("inlineCode",{parentName:"li"},"PoolId")),(0,n.kt)("li",{parentName:"ul"},"Verify that you are the owner of the ",(0,n.kt)("inlineCode",{parentName:"li"},"PoolId"),", and thus of the associated stakes used by Mithril protocol"),(0,n.kt)("li",{parentName:"ul"},"Verify that you are the owner of the Mithril ",(0,n.kt)("inlineCode",{parentName:"li"},"Signer Secret Key"),", and thus allowed to contribute to the multi-signatures and certificate production of the Mithril network")),(0,n.kt)("h2",{id:"building-your-own-executable"},"Building your own executable"),(0,n.kt)("h3",{id:"download-source"},"Download source"),(0,n.kt)("p",null,"Download from GitHub (HTTPS)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/mithril.git\n")),(0,n.kt)("p",null,"Or (SSH)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:input-output-hk/mithril.git\n")),(0,n.kt)("h3",{id:"build-mithril-signer-binary"},"Build Mithril Signer binary"),(0,n.kt)("p",null,"Switch to build branch / tag"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# **YOUR_BUILD_BRANCH_OR_TAG** depends on the Mithril network you target, \n# please refer to the **Build From** column of the above **Mithril Networks** table\ngit switch **YOUR_BUILD_BRANCH_OR_TAG**\n")),(0,n.kt)("p",null,"Change directory"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd mithril/mithril-signer\n")),(0,n.kt)("p",null,"Run tests (Optional)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,n.kt)("p",null,"Build executable"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"make build\n")),(0,n.kt)(l.default,{mdxType:"CompiledBinaries"}),(0,n.kt)("h2",{id:"verify-binary"},"Verify binary"),(0,n.kt)("h3",{id:"verify-version"},"Verify version"),(0,n.kt)("p",null,"Check that the Mithril Signer binary is running the correct version by running"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./mithril-signer -V\n")),(0,n.kt)("p",null,"You should see something like"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mithril-signer 0.2.0\n")),(0,n.kt)("p",null,"\u26a0\ufe0f Verify that the version displayed is the version described in the content of the Release / Pre-Release note (see the ",(0,n.kt)("strong",{parentName:"p"},"Build From")," column of the above ",(0,n.kt)("strong",{parentName:"p"},"Mithril Networks")," table)"),(0,n.kt)("h3",{id:"verify-build"},"Verify build"),(0,n.kt)("p",null,"Check that the Mithril Signer binary is working fine by running its help"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./mithril-signer -h\n")),(0,n.kt)("p",null,"You should see"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"An implementation of a Mithril Signer\n\nUsage: mithril-signer [OPTIONS]\n\nOptions:\n  -r, --run-mode <RUN_MODE>\n          Run Mode [env: RUN_MODE=] [default: dev]\n  -v, --verbose...\n          Verbosity level, add more v to increase\n  -c, --configuration-dir <CONFIGURATION_DIR>\n          Directory where the configuration file is located [default: ./config]\n      --disable-digests-cache\n          Disable immutables digests cache\n      --reset-digests-cache\n          If set the existing immutables digests cache will be reset\n  -h, --help\n          Print help information (use `--help` for more detail)\n  -V, --version\n          Print version information\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"If you want to dig deeper, you can get access to several level of logs from the Mithril Signer:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Add ",(0,n.kt)("inlineCode",{parentName:"li"},"-v")," for some logs (WARN)"),(0,n.kt)("li",{parentName:"ul"},"Add ",(0,n.kt)("inlineCode",{parentName:"li"},"-vv")," for more logs (INFO)"),(0,n.kt)("li",{parentName:"ul"},"Add ",(0,n.kt)("inlineCode",{parentName:"li"},"-vvv")," for even more logs (DEBUG)"),(0,n.kt)("li",{parentName:"ul"},"Add ",(0,n.kt)("inlineCode",{parentName:"li"},"-vvvv")," for all logs (TRACE)"))),(0,n.kt)("h2",{id:"install-the-service"},"Install the service"),(0,n.kt)("h3",{id:"move-executable"},"Move executable"),(0,n.kt)("p",null,"Move executable to /opt/mithril"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /opt/mithril\nsudo mv mithril-signer /opt/mithril\n")),(0,n.kt)("h3",{id:"setup-the-service"},"Setup the service"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"User=cardano"),":\nReplace this value with the correct user. We assume that the user used to run the ",(0,n.kt)("strong",{parentName:"p"},"Cardano Node")," is ",(0,n.kt)("inlineCode",{parentName:"p"},"cardano"),". The ",(0,n.kt)("strong",{parentName:"p"},"Mithril Signer")," must imperatively run with the same user.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In the ",(0,n.kt)("inlineCode",{parentName:"p"},"/opt/mithril/mithril-signer/service.env")," env file:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"KES_SECRET_KEY_PATH=/cardano/keys/kes.skey"),": replace ",(0,n.kt)("inlineCode",{parentName:"li"},"/cardano/keys/kes.skey")," with the path to your Cardano ",(0,n.kt)("inlineCode",{parentName:"li"},"KES Secret Key")," file"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OPERATIONAL_CERTIFICATE_PATH=/cardano/cert/opcert.cert"),": replace ",(0,n.kt)("inlineCode",{parentName:"li"},"/cardano/cert/opcert.cert")," with the path to your Cardano ",(0,n.kt)("inlineCode",{parentName:"li"},"Operational Certificate")," file"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DB_DIRECTORY=/cardano/db"),": replace ",(0,n.kt)("inlineCode",{parentName:"li"},"/cardano/db")," with the path to the database folder of the ",(0,n.kt)("strong",{parentName:"li"},"Cardano Node")," (the one in ",(0,n.kt)("inlineCode",{parentName:"li"},"--database-path"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH=/cardano/ipc/node.socket"),": replace with the path to the IPC file (",(0,n.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH")," env var)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CARDANO_CLI_PATH=/app/bin/cardano-cli"),": replace with the path to the ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-cli")," executable"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DATA_STORES_DIRECTORY=/opt/mithril/stores"),": replace with the path to a folder where the ",(0,n.kt)("strong",{parentName:"li"},"Mithril Signer")," will store its data (",(0,n.kt)("inlineCode",{parentName:"li"},"/opt/mithril/stores")," e.g.)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"STORE_RETENTION_LIMIT"),": if set, this will limit the number of records in some internal stores (5 is a good fit)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ERA_READER_ADAPTER_TYPE=cardano-chain"),": replace ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-chain")," with the era reader adapter type used in your Mithril network"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'ERA_READER_ADAPTER_PARAMS={"address": "...", "verification_key": "..."}'),": replace ",(0,n.kt)("inlineCode",{parentName:"li"},'{"address": "...", "verification_key": "..."}')," with the era reader params that you need to compute by running the command ",(0,n.kt)("inlineCode",{parentName:"li"},'jq -nc --arg address $(wget -q -O - **YOUR_ERA_READER_ADDRESS**) --arg verification_key $(wget -q -O - **YOUR_ERA_READER_VERIFICATION_KEY**) \'{"address": $address, "verification_key": $verification_key}\'')))))),(0,n.kt)("p",null,"First create an env file that will be used by the service:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo bash -c 'cat > /opt/mithril/mithril-signer.env << EOF\nKES_SECRET_KEY_PATH=**YOUR_KES_SECRET_KEY_PATH**\nOPERATIONAL_CERTIFICATE_PATH=**YOUR_OPERATIONAL_CERTIFICATE_PATH**\nNETWORK=**YOUR_CARDANO_NETWORK**\nAGGREGATOR_ENDPOINT=**YOUR_AGGREGATOR_ENDPOINT**\nRUN_INTERVAL=60000\nDB_DIRECTORY=/cardano/db\nCARDANO_NODE_SOCKET_PATH=/cardano/ipc/node.socket\nCARDANO_CLI_PATH=/app/bin/cardano-cli\nDATA_STORES_DIRECTORY=/opt/mithril/stores\nSTORE_RETENTION_LIMIT=5\nERA_READER_ADAPTER_TYPE=**YOUR_ERA_READER_ADAPTER_TYPE**\nERA_READER_ADAPTER_PARAMS=**YOUR_ERA_READER_ADAPTER_PARAMS**\nEOF'\n")),(0,n.kt)("p",null,"Then we will create a ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/mithril-signer.service")," description file for our service"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo bash -c 'cat > /etc/systemd/system/mithril-signer.service << EOF\n[Unit]\nDescription=Mithril Signer service\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nRestart=always\nRestartSec=1\nUser=cardano\nEnvironmentFile=/opt/mithril/mithril-signer.env\nExecStart=/opt/mithril/mithril-signer -vvv\n\n[Install]\nWantedBy=multi-user.target\nEOF'\n")),(0,n.kt)("p",null,"Reload the service configuration (Optional)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,n.kt)("p",null,"Then start the service"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start mithril-signer\n")),(0,n.kt)("p",null,"Then register the service to start on boot"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable mithril-signer\n")),(0,n.kt)("p",null,"Then monitor status of the service"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status mithril-signer.service\n")),(0,n.kt)("p",null,"And monitor the logs of the service"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tail /var/log/syslog\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"There is a ",(0,n.kt)("inlineCode",{parentName:"p"},"2")," epochs delay between the signer node registration and its ability to create individual signatures, as explained in the ",(0,n.kt)("a",{parentName:"p",href:"https://mithril.network/doc/mithril/mithril-protocol/certificates"},"Mithril Certificate Chain in depth"),".\nAfter this delay, you should be able to see your ",(0,n.kt)("inlineCode",{parentName:"p"},"PoolId")," listed in some of the certificates available on the ",(0,n.kt)("a",{parentName:"p",href:"https://mithril.network/explorer"},(0,n.kt)("inlineCode",{parentName:"a"},"Mithril Explorer")))))}h.isMDXComponent=!0},5892:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var r=a(87462),n=(a(67294),a(3905)),i=a(74866),l=a(85162);const o={unlisted:!0,hide_title:!0,hide_table_of_contents:!0},p=void 0,d={unversionedId:"networks-matrix",id:"version-maintained/networks-matrix",title:"networks-matrix",description:"Here is an up to date list of all the Mithril Networks, their configurations and their status:",source:"@site/versioned_docs/version-maintained/networks-matrix.md",sourceDirName:".",slug:"/networks-matrix",permalink:"/doc/networks-matrix",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/networks-matrix.md",tags:[],version:"maintained",frontMatter:{unlisted:!0,hide_title:!0,hide_table_of_contents:!0}},s={},u=[{value:"<code>pre-release-preview</code>",id:"pre-release-preview",level:2},{value:"<code>testing-preview</code>",id:"testing-preview",level:2},{value:"<code>release-preprod</code>",id:"release-preprod",level:2},{value:"<code>release-mainnet</code>",id:"release-mainnet",level:2}],m={toc:u},k="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(k,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Here is an up to date list of all the ",(0,n.kt)("strong",{parentName:"p"},"Mithril Networks"),", their configurations and their status:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Last update: 02/28/2023")),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"preview",label:"Preview",default:!0,mdxType:"TabItem"},(0,n.kt)("h2",{id:"pre-release-preview"},(0,n.kt)("inlineCode",{parentName:"h2"},"pre-release-preview")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"pre-release-preview")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.pre-release-preview.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preview"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"2"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Pre-Release \ud83d\udfe0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator Endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.pre-release-preview.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.pre-release-preview.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Adapter Type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build From")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Latest Pre-Release")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/releases?q=pre-release"},"\u2197\ufe0f"))))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"testing-preview"},(0,n.kt)("inlineCode",{parentName:"h2"},"testing-preview")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f For devs only")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"testing-preview")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.testing-preview.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preview"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"2"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Unstable \ud83d\udd34")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator Endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.testing-preview.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.testing-preview.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Adapter Type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build From")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Main Branch")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/tree/main"},"\u2197\ufe0f")))))),(0,n.kt)(l.Z,{value:"preprod",label:"Preprod",mdxType:"TabItem"},(0,n.kt)("h2",{id:"release-preprod"},(0,n.kt)("inlineCode",{parentName:"h2"},"release-preprod")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"release-preprod")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.release-preprod.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preprod"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"1"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Release \ud83d\udfe2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator Endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.release-preprod.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.release-preprod.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Adapter Type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build From")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Latest Release")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/releases/latest"},"\u2197\ufe0f")))))),(0,n.kt)(l.Z,{value:"mainnet",label:"Mainnet",mdxType:"TabItem"},(0,n.kt)("h2",{id:"release-mainnet"},(0,n.kt)("inlineCode",{parentName:"h2"},"release-mainnet")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"release-mainnet"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"mainnet"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano Magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"-"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"No \u274c")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator Endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Adapter Type")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Address")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era Reader Verification Key")),(0,n.kt)("td",{parentName:"tr",align:null},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build From")),(0,n.kt)("td",{parentName:"tr",align:null},"-")))))),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"In this documentation, we use the generic:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_CARDANO_NETWORK**")," identifier, but you need to replace it with the name of the network that runs on your Cardano node (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"preprod"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_AGGREGATOR_ENDPOINT**")," identifier, but you need to replace it with the endpoint of an aggregator that runs on the Cardano network you target (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"https://aggregator.release-preprod.api.mithril.network/aggregator"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_GENESIS_VERIFICATION_KEY**")," identifier, but you need to replace it with the genesis verification key url that runs on the Cardano network you target (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_ADAPTER_TYPE**")," identifier, but you need to replace it with the era reader adapter type used by the Mithril network you target (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-chain"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_ADDRESS**")," identifier, but you need to replace it with the era reader address url used by the Mithril network you target (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/address.addr"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_VERIFICATION_KEY**")," identifier, but you need to replace it with the era reader verification key url used by the Mithril network you target (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/TEST_ONLY_era.vkey"),")"))))}h.isMDXComponent=!0}}]);