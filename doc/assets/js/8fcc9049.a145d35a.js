"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[383],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=l(r),f=i,m=h["".concat(c,".").concat(f)]||h[f]||u[f]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8958:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],s={sidebar_position:2},c="Mithril Architecture",l={unversionedId:"topologies/mithril-architecture",id:"topologies/mithril-architecture",title:"Mithril Architecture",description:"The following figure sketches of our current understanding of the Mithril network architecture, following initial PoC",source:"@site/root/topologies/mithril-architecture.md",sourceDirName:"topologies",slug:"/topologies/mithril-architecture",permalink:"/doc/topologies/mithril-architecture",editUrl:"https://github.com/input-output-hk/mithril/tree/main/docs/root/root/topologies/mithril-architecture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"topologiesSidebar",previous:{title:"Topologies",permalink:"/doc/topologies/"}},p={},u=[{value:"Containers View",id:"containers-view",level:2},{value:"Components View",id:"components-view",level:2}],h={toc:u};function f(e){var t=e.components,s=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},h,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mithril-architecture"},"Mithril Architecture"),(0,o.kt)("p",null,"The following figure sketches of our current understanding of the Mithril network architecture, following initial PoC\nphase ending in 2021 Q4."),(0,o.kt)("h2",{id:"containers-view"},"Containers View"),(0,o.kt)("p",null,"This diagram represents the ",(0,o.kt)("a",{parentName:"p",href:"https://c4model.com/#ContainerDiagram"},"Containers view"),' of the system, where rounded boxes\nare expected to be separate "Containers" (eg. processes, servers, programs, nodes...)'),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(8509).Z,width:"4875",height:"3281"})),(0,o.kt)("p",null,"This architecture is defined in the context of ",(0,o.kt)("em",{parentName:"p"},"Bootstrapping nodes"),"  as primary use case for early development of\nMithril."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The Mithril containers are more directly linked to the Cardano node, both for querying current state of the chain,\ninitialising the node with some UTXO snapshot, and reusing communication network for Mithril protocol purpose,"),(0,o.kt)("li",{parentName:"ul"},"There's a clear separation between the ",(0,o.kt)("em",{parentName:"li"},"Snapshotter")," container that's responsible for deciding when and what to sign,\nand the ",(0,o.kt)("em",{parentName:"li"},"Certifier")," that's responsible for producing valid signatures and certificates,"),(0,o.kt)("li",{parentName:"ul"},"Similarly, the stores for signatures/certificates and the store for snapshots are separated. The latter could be\ndistributed or remote,"),(0,o.kt)("li",{parentName:"ul"},"Alternative messaging layers could be used instead of or beside the Cardano network.")),(0,o.kt)("h2",{id:"components-view"},"Components View"),(0,o.kt)("p",null,"This diagram represents the ",(0,o.kt)("a",{parentName:"p",href:"https://c4model.com/#ComponentDiagram"},"Components view")," of the system, which provides more\ndetails on the inner workings of each of the involved containers."),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(5681).Z,width:"5376",height:"2976"})))}f.isMDXComponent=!0},5681:function(e,t,r){t.Z=r.p+"assets/images/mithril-arch-components-74fff1474bcf0f354a652768e020e181.jpg"},8509:function(e,t,r){t.Z=r.p+"assets/images/mithril-arch-containers-ff227d1e97ebff5f838c860a6579d4b4.jpg"}}]);