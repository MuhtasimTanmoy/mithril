"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[4163],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,h=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:2},l="Run a Mithril Signer node (SPO)",o={unversionedId:"manual/getting-started/run-signer-node",id:"manual/getting-started/run-signer-node",title:"Run a Mithril Signer node (SPO)",description:"In this guide, you will learn how to setup a Mithril Signer on top of a Cardano SPO Node for the testnet.",source:"@site/root/manual/getting-started/run-signer-node.md",sourceDirName:"manual/getting-started",slug:"/manual/getting-started/run-signer-node",permalink:"/doc/manual/getting-started/run-signer-node",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/tree/main/docs/root/root/manual/getting-started/run-signer-node.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSideBar",previous:{title:"Bootstrap a Cardano Node",permalink:"/doc/manual/getting-started/bootstrap-cardano-node"},next:{title:"Run a Private Mithril network",permalink:"/doc/manual/getting-started/run-mithril-devnet"}},p={},s=[{value:"What you&#39;ll need",id:"what-youll-need",level:2},{value:"Building your own executable",id:"building-your-own-executable",level:2},{value:"Download source",id:"download-source",level:3},{value:"Build Mithril Signer binary",id:"build-mithril-signer-binary",level:3},{value:"Verify build",id:"verify-build",level:3},{value:"Move executable",id:"move-executable",level:3},{value:"Setup the service",id:"setup-the-service",level:3}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"run-a-mithril-signer-node-spo"},"Run a Mithril Signer node (SPO)"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In this guide, you will learn how to setup a ",(0,r.kt)("strong",{parentName:"p"},"Mithril Signer")," on top of a ",(0,r.kt)("strong",{parentName:"p"},"Cardano SPO Node")," for the ",(0,r.kt)("inlineCode",{parentName:"p"},"testnet"),".")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This guide is working only on a Linux machine.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information about the ",(0,r.kt)("strong",{parentName:"p"},"Mithril Protocol"),", please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/doc/mithril/intro"},"About Mithril")," section.")),(0,r.kt)("h2",{id:"what-youll-need"},"What you'll need"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Operating a ",(0,r.kt)("strong",{parentName:"p"},"Cardano Node")," as a ",(0,r.kt)("strong",{parentName:"p"},"Stake Pool"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Pool Id")," in a ",(0,r.kt)("inlineCode",{parentName:"li"},"BECH32")," format such as ",(0,r.kt)("inlineCode",{parentName:"li"},"pool1frevxe70aqw2ce58c0muyesnahl88nfjjsp25h85jwakzgd2g2l")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Access to the file system of a ",(0,r.kt)("inlineCode",{parentName:"p"},"relay")," ",(0,r.kt)("strong",{parentName:"p"},"Cardano Node")," running on the ",(0,r.kt)("inlineCode",{parentName:"p"},"testnet"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Read rights on the ",(0,r.kt)("inlineCode",{parentName:"li"},"Database")," folder (",(0,r.kt)("inlineCode",{parentName:"li"},"--database-path")," setting of the ",(0,r.kt)("strong",{parentName:"li"},"Cardano Node"),")"),(0,r.kt)("li",{parentName:"ul"},"Read/Write rights on the ",(0,r.kt)("inlineCode",{parentName:"li"},"Inter Process Communication")," file (usually ",(0,r.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH")," env var used to launch the ",(0,r.kt)("strong",{parentName:"li"},"Cardano Node"),")"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"An installed recent version of the ",(0,r.kt)("a",{parentName:"p",href:"https://hydra.iohk.io/job/Cardano/cardano-node/linux.native.cardano-cli"},(0,r.kt)("inlineCode",{parentName:"a"},"cardano-cli"))))),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This document is subject to change as some cryptographic security will be added soon.\nAt this point, secret keys from the Cardano Node will be needed as well.")),(0,r.kt)("h2",{id:"building-your-own-executable"},"Building your own executable"),(0,r.kt)("h3",{id:"download-source"},"Download source"),(0,r.kt)("p",null,"Download from Github (HTTPS)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/mithril.git\n")),(0,r.kt)("p",null,"Or (SSH)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:input-output-hk/mithril.git\n")),(0,r.kt)("h3",{id:"build-mithril-signer-binary"},"Build Mithril Signer binary"),(0,r.kt)("p",null,"Change directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd mithril/mithril-signer\n")),(0,r.kt)("p",null,"Run tests (Optional)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,r.kt)("p",null,"Build executable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make build\n")),(0,r.kt)("h3",{id:"verify-build"},"Verify build"),(0,r.kt)("p",null,"Check that the Mithril Signer binary is working fine by running its help"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./mithril-signer -h\n")),(0,r.kt)("p",null,"You should see"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mithril-signer \nAn implementation of a Mithril Signer\n\nUSAGE:\n    mithril-signer [OPTIONS]\n\nOPTIONS:\n    -h, --help                   Print help information\n    -r, --run-mode <RUN_MODE>    Run Mode [default: dev]\n    -v, --verbose                Verbosity level\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you want to dig deeper, you can get access to several level of logs from the Mithril Signer:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"-v")," for some logs (WARN)"),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"-vv")," for more logs (INFO)"),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"-vvv")," for even more logs (DEBUG)"),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"-vvvv")," for all logs (TRACE)"))),(0,r.kt)("h3",{id:"move-executable"},"Move executable"),(0,r.kt)("p",null,"Move executable to /opt/mithril"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /opt/mithril\nsudo mv mithril-signer /opt/mithril\n")),(0,r.kt)("h3",{id:"setup-the-service"},"Setup the service"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"User=cardano"),":\nReplace this value with the correct user. We assume that the user used to run the ",(0,r.kt)("strong",{parentName:"p"},"Cardano Node")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"cardano"),". The ",(0,r.kt)("strong",{parentName:"p"},"Mitril Signer")," must imperatively run with the same user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/mithril/mithril-signer/service.env")," env file:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PARTY_ID=YOUR_POOL_ID_BECH32"),": replace ",(0,r.kt)("inlineCode",{parentName:"li"},"YOUR_POOL_ID_BECH32")," with your BECH32 ",(0,r.kt)("inlineCode",{parentName:"li"},"Pool Id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DB_DIRECTORY=/cardano/db"),": replace ",(0,r.kt)("inlineCode",{parentName:"li"},"/cardano/db")," with the path to the database folder of the ",(0,r.kt)("strong",{parentName:"li"},"Cardano Node")," (the one in ",(0,r.kt)("inlineCode",{parentName:"li"},"--database-path"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH=/cardano/ipc/node.socket"),": replace with the path to the IPC file (",(0,r.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH")," env var)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CARDANO_CLI_PATH=/app/bin/cardano-cli"),": replace with the path to the ",(0,r.kt)("inlineCode",{parentName:"li"},"cardano-cli")," executable"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"STAKE_STORE_DIRECTORY=/opt/mithril/mithril-signer/store/stake_db"),": replace with the path to a folder where the ",(0,r.kt)("strong",{parentName:"li"},"Mithril Signer")," will store its data (",(0,r.kt)("inlineCode",{parentName:"li"},"/opt/mithril/mithril-signer/store")," e.g.)"))))),(0,r.kt)("p",null,"First create an env file that will be used by the service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cat > /opt/mithril/mithril-signer.env << EOF\nPARTY_ID=YOUR_POOL_ID_BECH32\nNETWORK=testnet\nNETWORK_MAGIC=1097911063\nAGGREGATOR_ENDPOINT=https://aggregator.api.mithril.network/aggregator\nRUN_INTERVAL=60000 DB_DIRECTORY=/cardano/db\nCARDANO_NODE_SOCKET_PATH=/cardano/ipc/node.socket\nCARDANO_CLI_PATH=/app/bin/cardano-cli\nSTAKE_STORE_DIRECTORY=/opt/mithril/mithril-signer/store/stake_db\nEOF\n")),(0,r.kt)("p",null,"Then we will create a ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/mithril-signer.service")," description file for our service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cat > /etc/systemd/system/mithril-signer.service << EOF\n[Unit]\nDescription=Mithril Signer service\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nRestart=always\nRestartSec=1\nUser=cardano\nEnvironmentFile=/opt/mithril/mithril-signer.env\nExecStart=/opt/mithril/mithril-signer -vvv\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,r.kt)("p",null,"Reload the service configuration (Optional)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,r.kt)("p",null,"Then start the service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start mithril-signer\n")),(0,r.kt)("p",null,"Then register the service to start on boot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable mithril-signer\n")),(0,r.kt)("p",null,"Then monitor status of the service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status mithril-signer.service\n")),(0,r.kt)("p",null,"And monitor the logs of the service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tail /var/log/syslog\n")))}u.isMDXComponent=!0}}]);