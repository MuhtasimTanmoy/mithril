var searchIndex = JSON.parse('{\
"mithril_common":{"doc":"","t":[0,0,0,0,0,0,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,0,5,5,5,13,8,4,3,13,13,13,3,3,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,6,3,6,6,6,3,3,3,3,3,6,6,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,0,0,4,3,3,13,13,3,16,3,13,13,13,16,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,3,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["apispec","chain_observer","crypto_helper","digesters","entities","fake_data","from","store","APISpec","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","content_type","from","from_file","into","into_any","into_any_arc","into_any_rc","lossless_try_into","lossy_into","method","overflowing_as","overflowing_cast_from","path","saturating_as","saturating_cast_from","try_from","try_into","type_id","type_name","unwrapped_as","unwrapped_cast_from","validate_conformity","validate_request","validate_response","vzip","wrapping_as","wrapping_cast_from","ChainObserver","ChainObserverError","FakeObserver","General","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","fmt","fmt","from","from","get_current_epoch","get_current_epoch","get_current_stake_distribution","get_current_stake_distribution","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0","Bytes","ProtocolAggregateVerificationKey","ProtocolClerk","ProtocolInitializer","ProtocolKeyRegistration","ProtocolLotteryIndex","ProtocolMultiSignature","ProtocolParameters","ProtocolPartyId","ProtocolSigner","ProtocolSignerVerificationKey","ProtocolSingleSignature","ProtocolStake","ProtocolStakeDistribution","key_decode_hex","key_encode_hex","tests_setup","setup_message","setup_protocol_parameters","setup_signers","DigestComputationError","Digester","DigesterError","DigesterResult","FileNameExtraction","FileNumberParsing","FileStemExtraction","ImmutableDigester","ImmutableFile","ImmutableFileCreation","ImmutableFileCreationError","ImmutableFileListingError","ListImmutablesError","MetadataParsing","NotEnoughImmutable","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","compute_digest","compute_digest","digest","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","last_immutable_file_number","list_completed_in_dir","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","ne","ne","new","new","number","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","path","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","source","source","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","0","0","0","path","path","0","0","Beacon","Certificate","CertificatePending","Epoch","Error","ImmutableFileNumber","LotteryIndex","PartyId","ProtocolParameters","Signer","SignerWithStake","SingleSignature","Snapshot","Stake","StakeDistribution","aggregate_verification_key","az","az","az","az","az","az","az","az","az","beacon","beacon","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","certificate_hash","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","completed_at","compute_hash","compute_hash","compute_hash","compute_hash","compute_hash","created_at","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","hash","hash","immutable_file_number","index","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","k","locations","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","m","message","multisignature","ne","ne","ne","ne","ne","ne","ne","ne","network","new","new","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","party_id","party_id","party_id","phi_f","phi_f_fixed","previous_hash","previous_hash","protocol_parameters","protocol_parameters","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signers","signers","size","stake","started_at","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verification_key","verification_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","beacon","certificate","certificate_pending","digest","digester_result","protocol_parameters","signers","signers_with_stakes","single_signatures","snapshots","adapter","stake_store","AdapterError","DumbStoreAdapter","FailStoreAdapter","GeneralError","InitializationError","JsonFileStoreAdapter","Key","MemoryAdapter","MutationError","OpeningStreamError","ParsingDataError","Record","StoreAdapter","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","default","default","fmt","fmt","fmt","from","from","from","from","from","get_last_n_records","get_last_n_records","get_last_n_records","get_last_n_records","get_last_n_records","get_record","get_record","get_record","get_record","get_record","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","record_exists","record_exists","record_exists","record_exists","record_exists","remove","remove","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","store_record","store_record","store_record","store_record","store_record","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0","AdapterError","StakeStore","StakeStoreError","StakeStorer","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","fmt","fmt","from","from","from","get_stakes","get_stakes","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","save_stake","save_stake","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0"],"q":["mithril_common","","","","","","","","mithril_common::apispec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_common::chain_observer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_common::chain_observer::ChainObserverError","mithril_common::crypto_helper","","","","","","","","","","","","","","","","","mithril_common::crypto_helper::tests_setup","","","mithril_common::digestersmithril_common::digesters::DigesterError","","mithril_common::digesters::ImmutableFileCreationError","","","mithril_common::digesters::ImmutableFileListingError","","mithril_common::entitiesmithril_common::fake_data","","","","","","","","","","mithril_common::store","","mithril_common::store::adaptermithril_common::store::adapter::AdapterError","","","","","mithril_common::store::stake_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mithril_common::store::stake_store::StakeStoreError"],"d":["","","","","","","","","APISpec helps validate conformity to an OpenAPI …","","","","","","","Sets the content type to specify/check, note that it …","Returns the argument unchanged.","APISpec factory from spec","Calls <code>U::from(self)</code>.","","","","","","Sets the method to specify/check.","","","Sets the path to specify/check.","","","","","","","","","Validates conformity of a value against a schema","Validates if a request is valid","Validates if a response is valid","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the current epoch of the Cardano network","Retrieve the current epoch of the Cardano network","Retrieve the current stake distribution of the Cardano …","Retrieve the current stake distribution of the Cardano …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode key from hex helper","Encode key to hex helper","","","","","","A digester than can compute the digest used for mithril …","","","","","","A digester working directly on a Cardano DB immutables …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The computed digest","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The number of the last immutable file used to compute the …","List all <code>ImmutableFile</code> in a given directory.","","","","","","","","","","","","","","","ImmutableDigester factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Beacon represents a point in the Cardano chain at which a …","Certificate represents a Mithril certificate embedding a …","CertificatePending represents a pending certificate in the …","Epoch represents a Cardano epoch","Internal error representation","ImmutableFileNumber represents the id of immutable files …","LotteryIndex represents the index of a Mithril single …","PartyId represents a signing party in Mithril protocol","Protocol cryptographic parameters","Signer represents a signing participant in the network","Signer represents a signing party in the network …","SingleSignature represents a single signature originating …","Snapshot represents a snapshot file and its metadata","Stake represents the stakes of a participant in the …","StakeDistribution represents the stakes of multiple …","Aggregate verification key","","","","","","","","","","Current Beacon","Cardano chain beacon","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the associated certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date and time at which the certificate was completed (when …","Computes the hash of a Beacon","Computes the hash of a certificate","Computes the hash of ProtocolParameters","Computes the hash of Signer","Computes the hash of SignerWithStake","Date and time at which the snapshot was created","","","","","","","","","","","","","","","","","","","Digest that is signed by the signer participants","Digest that is signed by the signer participants","Cardano chain epoch number","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Hash of the current certificate","Number of the last included immutable files for the digest …","The index of the lottery won that lead to the single …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Quorum parameter","Locations where the binary content of the snapshot can be …","","","","","","","","","","","","","","","","","","","Security parameter (number of lotteries)","error message","STM multisignature created from a quorum of single …","","","","","","","","","Cardano network","Beacon factory","CertificatePending factory","Certificate factory","Error factory","ProtocolParameters factory","Signer factory","SignerWithStake factory","SingleSignature factory","Snapshot factory","","","","","","","","","","","","","","","","","","","","The unique identifier of the signer","The unique identifier of the signer","The unique identifier of the signer","f in phi(w) = 1 - (1 - f)^w, where w is the stake of a …","phi_f_fixed is a fixed decimal representatio of phi_f used …","Hash of the previous certificate","Hash of the previous certificate","Current Protocol parameters","Protocol parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","The single signature of the digest","Current Signers","The list of the signers with their stakes and verification …","Size of the snapshot file in Bytes","","Date and time at which the certificate was initialized and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The public key used to authenticate signer signature","The public key used to authenticate signer signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fake Beacon","Fake Certificate","Fake CertificatePending","Fake Digest","Fake DigesterResult","Fake ProtocolParameters","Fake Signers","Fake SignersWithStake","Fake SingleSignatures","Fake Snapshots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","get last N records is fairly complex, read the directory …","","","","","find and returns the expected value from its Key hash","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","simple implementationif the file exists, then the document …","remove values from store","","","","","","","","","","","","","","","","","","","create (or update) a Value in the Store.When it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,5,4,5,4,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,8,8,0,0,9,0,0,7,9,7,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,11,11,12,13,10,11,11,12,12,11,7,7,12,8,8,9,9,10,11,7,7,7,12,8,8,9,9,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,11,12,10,11,7,12,8,9,10,11,7,12,8,9,11,12,10,12,12,10,11,7,12,8,9,10,11,7,12,8,9,12,12,10,11,7,12,8,9,10,11,7,12,8,9,7,8,9,11,7,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,10,11,7,12,8,9,14,15,16,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,23,21,24,25,26,27,28,29,23,21,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,21,22,21,25,26,27,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,21,29,22,22,23,21,24,25,26,27,28,29,22,22,23,21,24,25,26,27,28,29,22,23,21,24,25,25,26,26,27,27,28,29,22,22,21,22,28,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,25,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,25,24,21,22,23,21,24,26,27,28,29,22,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,26,27,28,25,25,23,21,23,21,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,28,23,21,29,27,21,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,26,27,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,22,23,21,24,25,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,31,0,30,30,30,31,0,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,33,34,35,30,30,32,33,34,35,30,31,32,33,34,35,31,32,33,34,35,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,32,33,34,35,30,32,33,34,35,30,31,32,33,34,35,31,32,33,34,35,32,33,34,35,30,32,33,34,35,30,31,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,32,33,34,35,30,36,37,38,39,40,41,0,0,0,42,41,42,41,42,41,42,41,42,41,42,41,41,41,42,41,41,43,42,42,41,42,41,42,41,42,41,42,41,42,41,42,42,41,42,41,42,41,42,41,43,42,41,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,44],"f":[null,null,null,null,null,null,[[["protocolparameters",3]]],null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["option",4]],[[],["option",4]],[[["",0],["str",0]],["apispec",3]],[[]],[[["str",0]],["apispec",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4]],[[]],[[["",0],["str",0]],["apispec",3]],[[]],[[]],[[["",0],["str",0]],["apispec",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[]],[[]],[[["",0],["value",4],["value",4]],["result",4,[["apispec",3],["string",3]]]],[[["",0]],["result",4,[["apispec",3],["string",3]]]],[[["",0],["response",3]],["result",4,[["apispec",3],["string",3]]]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0]],["result",4,[["string",3]]]],[[],["result",4,[["string",3],["string",3]]]],null,[[],["string",3]],[[],["protocolparameters",6]],[[["u64",0]],["vec",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0]],["digesterresult",3]],[[["",0],["",0]]],[[["",0],["",0]],["ordering",4]],[[["",0]],["result",4,[["digesterresult",3],["digestererror",4]]]],[[["",0]],["result",4,[["digesterresult",3],["digestererror",4]]]],null,[[["",0],["digesterresult",3]],["bool",0]],[[["",0],["immutablefile",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[["immutablefilelistingerror",4]]],[[]],[[]],[[["parseinterror",3]]],[[]],[[["immutablefilecreationerror",4]]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["path",3]],["result",4,[["vec",3,[["immutablefile",3]]],["immutablefilelistingerror",4]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["digesterresult",3]],["bool",0]],[[["",0],["immutablefile",3]],["bool",0]],[[["pathbuf",3],["logger",3]]],[[["pathbuf",3]],["result",4,[["immutablefilecreationerror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["option",4,[["ordering",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0]],["beacon",3]],[[["",0]],["certificatepending",3]],[[["",0]],["certificate",3]],[[["",0]],["error",3]],[[["",0]],["protocolparameters",3]],[[["",0]],["signer",3]],[[["",0]],["signerwithstake",3]],[[["",0]],["singlesignature",3]],[[["",0]],["snapshot",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["beacon",3]],[[],["certificatepending",3]],[[],["certificate",3]],[[],["error",3]],[[],["protocolparameters",3]],[[],["signer",3]],[[],["signerwithstake",3]],[[],["singlesignature",3]],[[],["snapshot",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["",0],["beacon",3]],["bool",0]],[[["",0],["certificatepending",3]],["bool",0]],[[["",0],["certificate",3]],["bool",0]],[[["",0],["error",3]],["bool",0]],[[["",0],["protocolparameters",3]],["bool",0]],[[["",0],["signer",3]],["bool",0]],[[["",0],["signerwithstake",3]],["bool",0]],[[["",0],["singlesignature",3]],["bool",0]],[[["",0],["snapshot",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["protocolparameters",6]]],[[["signerwithstake",3]]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["beacon",3]],["bool",0]],[[["",0],["certificatepending",3]],["bool",0]],[[["",0],["certificate",3]],["bool",0]],[[["",0],["error",3]],["bool",0]],[[["",0],["signer",3]],["bool",0]],[[["",0],["signerwithstake",3]],["bool",0]],[[["",0],["singlesignature",3]],["bool",0]],[[["",0],["snapshot",3]],["bool",0]],null,[[["string",3],["epoch",6],["immutablefilenumber",6]],["beacon",3]],[[["beacon",3],["protocolparameters",3],["string",3],["vec",3,[["signer",3]]]],["certificatepending",3]],[[["string",3],["beacon",3],["protocolparameters",3],["string",3],["string",3],["string",3],["vec",3,[["signerwithstake",3]]],["string",3],["string",3]],["certificate",3]],[[["string",3]],["error",3]],[[["u64",0],["u64",0],["f32",0]],["protocolparameters",3]],[[["partyid",6],["string",3]],["signer",3]],[[["partyid",6],["string",3],["stake",6]],["signerwithstake",3]],[[["partyid",6],["lotteryindex",6],["string",3]],["singlesignature",3]],[[["string",3],["string",3],["u64",0],["string",3],["vec",3,[["string",3]]]],["snapshot",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["beacon",3]],["option",4,[["ordering",4]]]],null,null,null,null,[[["",0]],["u8f24",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["beacon",3]],[[["string",3]],["certificate",3]],[[],["certificatepending",3]],[[["beacon",3]],["vec",3,[["u8",0]]]],[[["str",0]],["digesterresult",3]],[[],["protocolparameters",3]],[[["u64",0]],["vec",3,[["signer",3]]]],[[["u64",0]],["vec",3,[["signerwithstake",3]]]],[[["u64",0]],["vec",3,[["singlesignature",3]]]],[[["u64",0]],["vec",3,[["snapshot",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[["option",4,[["vec",3]]]],["result",4,[["adaptererror",4]]]],[[]],[[]],[[["pathbuf",3]],["result",4,[["adaptererror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["adaptererror",4]]],[[]],[[["",0],["epoch",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["epoch",6]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["box",3,[["storeadapter",8]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["epoch",6],["signerwithstake",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["epoch",6],["signerwithstake",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null],"p":[[6,"ProtocolParameters"],[3,"APISpec"],[4,"ChainObserverError"],[3,"FakeObserver"],[8,"ChainObserver"],[13,"General"],[4,"DigesterError"],[4,"ImmutableFileCreationError"],[4,"ImmutableFileListingError"],[3,"ImmutableDigester"],[3,"DigesterResult"],[3,"ImmutableFile"],[8,"Digester"],[13,"ListImmutablesError"],[13,"DigestComputationError"],[13,"FileNumberParsing"],[13,"FileStemExtraction"],[13,"FileNameExtraction"],[13,"MetadataParsing"],[13,"ImmutableFileCreation"],[3,"Certificate"],[3,"Beacon"],[3,"CertificatePending"],[3,"Error"],[3,"ProtocolParameters"],[3,"Signer"],[3,"SignerWithStake"],[3,"SingleSignature"],[3,"Snapshot"],[4,"AdapterError"],[8,"StoreAdapter"],[3,"MemoryAdapter"],[3,"DumbStoreAdapter"],[3,"FailStoreAdapter"],[3,"JsonFileStoreAdapter"],[13,"GeneralError"],[13,"InitializationError"],[13,"OpeningStreamError"],[13,"ParsingDataError"],[13,"MutationError"],[4,"StakeStoreError"],[3,"StakeStore"],[8,"StakeStorer"],[13,"AdapterError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};